#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,
		S(236, 418)   ,S(212, 429)   ,S(166, 402)   ,S(204, 290)   ,S(231, 168)   ,S(192, 93)    ,S(1, 162)     ,S(6, 198)     ,
		S(107, 400)   ,S(132, 391)   ,S(126, 348)   ,S(138, 254)   ,S(182, 162)   ,S(225, 146)   ,S(166, 176)   ,S(116, 215)   ,
		S(122, 288)   ,S(122, 266)   ,S(122, 246)   ,S(123, 217)   ,S(147, 189)   ,S(144, 189)   ,S(88, 218)    ,S(84, 216)    ,
		S(125, 233)   ,S(118, 230)   ,S(121, 216)   ,S(116, 211)   ,S(117, 199)   ,S(107, 206)   ,S(75, 215)    ,S(66, 218)    ,
		S(136, 204)   ,S(152, 199)   ,S(129, 214)   ,S(119, 217)   ,S(107, 211)   ,S(95, 217)    ,S(64, 221)    ,S(64, 221)    ,
		S(136, 200)   ,S(168, 192)   ,S(152, 209)   ,S(108, 223)   ,S(93, 220)    ,S(82, 222)    ,S(63, 227)    ,S(64, 224)    ,
		S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,
	},
	{
		S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,
		S(-24, 255)   ,S(-47, 217)   ,S(199, 133)   ,S(237, 157)   ,S(229, 212)   ,S(203, 285)   ,S(178, 341)   ,S(226, 336)   ,
		S(129, 235)   ,S(162, 224)   ,S(234, 190)   ,S(157, 179)   ,S(146, 194)   ,S(138, 254)   ,S(119, 299)   ,S(106, 317)   ,
		S(105, 225)   ,S(105, 227)   ,S(147, 202)   ,S(142, 194)   ,S(131, 179)   ,S(117, 207)   ,S(113, 224)   ,S(110, 250)   ,
		S(96, 209)    ,S(101, 218)   ,S(120, 211)   ,S(120, 203)   ,S(118, 190)   ,S(113, 191)   ,S(99, 208)    ,S(98, 220)    ,
		S(110, 196)   ,S(123, 205)   ,S(117, 228)   ,S(128, 218)   ,S(115, 196)   ,S(112, 198)   ,S(107, 198)   ,S(102, 209)   ,
		S(113, 174)   ,S(143, 201)   ,S(142, 230)   ,S(107, 230)   ,S(110, 206)   ,S(103, 203)   ,S(103, 200)   ,S(101, 216)   ,
		S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(329, 599)   ,S(360, 670)   ,S(387, 704)   ,S(514, 666)   ,S(508, 662)   ,S(401, 690)   ,S(474, 653)   ,S(348, 566)   ,
		S(491, 646)   ,S(515, 667)   ,S(555, 658)   ,S(593, 687)   ,S(583, 676)   ,S(579, 647)   ,S(520, 660)   ,S(536, 635)   ,
		S(466, 674)   ,S(530, 672)   ,S(552, 707)   ,S(562, 707)   ,S(571, 694)   ,S(552, 692)   ,S(521, 668)   ,S(532, 653)   ,
		S(515, 689)   ,S(544, 685)   ,S(567, 709)   ,S(577, 722)   ,S(574, 724)   ,S(562, 706)   ,S(548, 697)   ,S(558, 680)   ,
		S(515, 693)   ,S(536, 691)   ,S(535, 713)   ,S(543, 719)   ,S(557, 716)   ,S(551, 702)   ,S(563, 688)   ,S(541, 690)   ,
		S(474, 658)   ,S(489, 675)   ,S(508, 690)   ,S(507, 711)   ,S(519, 710)   ,S(502, 686)   ,S(504, 666)   ,S(483, 656)   ,
		S(456, 673)   ,S(455, 687)   ,S(476, 661)   ,S(486, 682)   ,S(494, 684)   ,S(487, 666)   ,S(459, 688)   ,S(459, 683)   ,
		S(436, 626)   ,S(443, 672)   ,S(465, 665)   ,S(473, 685)   ,S(473, 675)   ,S(468, 659)   ,S(467, 661)   ,S(432, 663)   ,
	},
	{
		S(357, 583)   ,S(454, 708)   ,S(395, 755)   ,S(509, 722)   ,S(466, 728)   ,S(343, 756)   ,S(354, 714)   ,S(271, 645)   ,
		S(532, 695)   ,S(492, 712)   ,S(584, 693)   ,S(570, 737)   ,S(552, 738)   ,S(524, 702)   ,S(480, 706)   ,S(474, 686)   ,
		S(503, 718)   ,S(486, 746)   ,S(555, 745)   ,S(552, 745)   ,S(538, 751)   ,S(531, 743)   ,S(498, 709)   ,S(466, 694)   ,
		S(528, 746)   ,S(530, 763)   ,S(551, 761)   ,S(546, 783)   ,S(543, 773)   ,S(540, 742)   ,S(525, 711)   ,S(507, 708)   ,
		S(515, 753)   ,S(544, 747)   ,S(530, 758)   ,S(533, 770)   ,S(521, 760)   ,S(517, 742)   ,S(510, 720)   ,S(502, 712)   ,
		S(480, 704)   ,S(490, 720)   ,S(497, 729)   ,S(503, 747)   ,S(502, 745)   ,S(496, 717)   ,S(491, 691)   ,S(479, 665)   ,
		S(467, 720)   ,S(462, 722)   ,S(472, 701)   ,S(485, 719)   ,S(484, 717)   ,S(474, 692)   ,S(469, 705)   ,S(457, 698)   ,
		S(431, 684)   ,S(464, 686)   ,S(468, 703)   ,S(468, 712)   ,S(475, 712)   ,S(471, 678)   ,S(473, 669)   ,S(442, 657)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(483, 765)   ,S(436, 758)   ,S(447, 750)   ,S(403, 764)   ,S(394, 749)   ,S(397, 747)   ,S(544, 733)   ,S(483, 752)   ,
		S(482, 757)   ,S(497, 758)   ,S(530, 744)   ,S(486, 747)   ,S(495, 737)   ,S(550, 716)   ,S(507, 735)   ,S(472, 724)   ,
		S(537, 753)   ,S(556, 748)   ,S(545, 748)   ,S(542, 746)   ,S(564, 725)   ,S(559, 734)   ,S(539, 727)   ,S(544, 732)   ,
		S(534, 753)   ,S(552, 745)   ,S(543, 753)   ,S(552, 757)   ,S(577, 741)   ,S(552, 720)   ,S(561, 734)   ,S(539, 729)   ,
		S(530, 734)   ,S(541, 739)   ,S(543, 747)   ,S(562, 746)   ,S(552, 738)   ,S(547, 729)   ,S(549, 714)   ,S(538, 723)   ,
		S(534, 726)   ,S(562, 731)   ,S(559, 742)   ,S(544, 737)   ,S(544, 738)   ,S(531, 731)   ,S(535, 724)   ,S(523, 727)   ,
		S(551, 717)   ,S(577, 715)   ,S(551, 727)   ,S(535, 732)   ,S(523, 733)   ,S(530, 720)   ,S(529, 710)   ,S(535, 715)   ,
		S(548, 720)   ,S(511, 733)   ,S(523, 737)   ,S(516, 735)   ,S(511, 736)   ,S(513, 741)   ,S(524, 739)   ,S(540, 717)   ,
	},
	{
		S(467, 770)   ,S(494, 761)   ,S(382, 778)   ,S(408, 784)   ,S(389, 805)   ,S(387, 795)   ,S(450, 793)   ,S(465, 800)   ,
		S(483, 766)   ,S(473, 772)   ,S(512, 760)   ,S(484, 773)   ,S(475, 783)   ,S(510, 777)   ,S(490, 790)   ,S(460, 789)   ,
		S(510, 791)   ,S(511, 786)   ,S(519, 792)   ,S(539, 768)   ,S(521, 775)   ,S(534, 777)   ,S(518, 783)   ,S(523, 775)   ,
		S(507, 786)   ,S(530, 788)   ,S(529, 779)   ,S(535, 793)   ,S(541, 789)   ,S(519, 770)   ,S(532, 771)   ,S(506, 782)   ,
		S(519, 764)   ,S(523, 770)   ,S(517, 781)   ,S(536, 784)   ,S(524, 784)   ,S(525, 776)   ,S(525, 757)   ,S(514, 758)   ,
		S(522, 768)   ,S(523, 765)   ,S(522, 777)   ,S(521, 779)   ,S(523, 777)   ,S(526, 770)   ,S(541, 756)   ,S(523, 752)   ,
		S(524, 728)   ,S(538, 746)   ,S(524, 755)   ,S(512, 767)   ,S(513, 767)   ,S(531, 751)   ,S(535, 733)   ,S(540, 745)   ,
		S(526, 731)   ,S(501, 753)   ,S(507, 766)   ,S(499, 769)   ,S(506, 764)   ,S(513, 769)   ,S(532, 766)   ,S(546, 744)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(740, 1255)  ,S(710, 1276)  ,S(693, 1283)  ,S(661, 1288)  ,S(672, 1280)  ,S(728, 1255)  ,S(716, 1256)  ,S(696, 1270)  ,
		S(702, 1252)  ,S(700, 1260)  ,S(709, 1256)  ,S(697, 1263)  ,S(693, 1258)  ,S(702, 1243)  ,S(670, 1247)  ,S(676, 1241)  ,
		S(687, 1247)  ,S(747, 1222)  ,S(714, 1246)  ,S(730, 1222)  ,S(742, 1212)  ,S(709, 1228)  ,S(759, 1199)  ,S(689, 1229)  ,
		S(673, 1246)  ,S(690, 1242)  ,S(709, 1238)  ,S(710, 1234)  ,S(710, 1225)  ,S(699, 1224)  ,S(712, 1214)  ,S(691, 1220)  ,
		S(638, 1234)  ,S(668, 1239)  ,S(640, 1255)  ,S(641, 1248)  ,S(645, 1233)  ,S(652, 1234)  ,S(660, 1230)  ,S(642, 1222)  ,
		S(620, 1198)  ,S(663, 1206)  ,S(641, 1215)  ,S(645, 1212)  ,S(648, 1203)  ,S(650, 1203)  ,S(668, 1200)  ,S(643, 1189)  ,
		S(584, 1206)  ,S(639, 1194)  ,S(653, 1203)  ,S(648, 1203)  ,S(655, 1197)  ,S(661, 1190)  ,S(672, 1178)  ,S(624, 1191)  ,
		S(620, 1204)  ,S(638, 1211)  ,S(667, 1210)  ,S(665, 1199)  ,S(665, 1191)  ,S(675, 1193)  ,S(679, 1190)  ,S(656, 1191)  ,
	},
	{
		S(699, 1326)  ,S(699, 1330)  ,S(702, 1337)  ,S(643, 1341)  ,S(666, 1327)  ,S(646, 1343)  ,S(682, 1329)  ,S(688, 1323)  ,
		S(670, 1307)  ,S(680, 1311)  ,S(711, 1303)  ,S(670, 1329)  ,S(696, 1314)  ,S(676, 1317)  ,S(651, 1326)  ,S(661, 1315)  ,
		S(686, 1292)  ,S(763, 1263)  ,S(742, 1282)  ,S(731, 1272)  ,S(725, 1270)  ,S(686, 1295)  ,S(710, 1279)  ,S(654, 1302)  ,
		S(676, 1291)  ,S(705, 1286)  ,S(709, 1286)  ,S(701, 1286)  ,S(715, 1273)  ,S(685, 1285)  ,S(677, 1284)  ,S(654, 1290)  ,
		S(633, 1279)  ,S(670, 1294)  ,S(648, 1300)  ,S(641, 1291)  ,S(649, 1281)  ,S(634, 1291)  ,S(632, 1293)  ,S(632, 1275)  ,
		S(636, 1235)  ,S(675, 1262)  ,S(653, 1265)  ,S(646, 1259)  ,S(652, 1248)  ,S(632, 1259)  ,S(641, 1262)  ,S(626, 1250)  ,
		S(571, 1251)  ,S(669, 1237)  ,S(665, 1245)  ,S(651, 1249)  ,S(655, 1240)  ,S(642, 1249)  ,S(641, 1242)  ,S(607, 1251)  ,
		S(635, 1229)  ,S(656, 1254)  ,S(667, 1261)  ,S(662, 1248)  ,S(665, 1240)  ,S(654, 1251)  ,S(648, 1250)  ,S(649, 1245)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1384, 2118) ,S(1406, 2138) ,S(1387, 2164) ,S(1362, 2217) ,S(1372, 2208) ,S(1424, 2178) ,S(1402, 2151) ,S(1406, 2123) ,
		S(1387, 2138) ,S(1332, 2193) ,S(1371, 2176) ,S(1315, 2241) ,S(1311, 2275) ,S(1448, 2169) ,S(1366, 2163) ,S(1383, 2135) ,
		S(1385, 2156) ,S(1395, 2123) ,S(1381, 2150) ,S(1384, 2167) ,S(1400, 2193) ,S(1380, 2221) ,S(1424, 2134) ,S(1429, 2142) ,
		S(1396, 2137) ,S(1370, 2197) ,S(1369, 2174) ,S(1360, 2226) ,S(1375, 2213) ,S(1402, 2185) ,S(1431, 2174) ,S(1420, 2151) ,
		S(1383, 2135) ,S(1386, 2190) ,S(1369, 2210) ,S(1377, 2235) ,S(1375, 2209) ,S(1397, 2192) ,S(1414, 2153) ,S(1417, 2135) ,
		S(1372, 2132) ,S(1399, 2141) ,S(1399, 2167) ,S(1396, 2153) ,S(1395, 2144) ,S(1407, 2149) ,S(1423, 2118) ,S(1422, 2105) ,
		S(1357, 2102) ,S(1394, 2092) ,S(1434, 2039) ,S(1423, 2103) ,S(1412, 2098) ,S(1429, 2075) ,S(1432, 2069) ,S(1432, 2072) ,
		S(1379, 2065) ,S(1404, 2041) ,S(1405, 2043) ,S(1413, 2082) ,S(1419, 2084) ,S(1415, 2060) ,S(1404, 2100) ,S(1415, 2048) ,
	},
	{
		S(1404, 2258) ,S(1426, 2282) ,S(1407, 2306) ,S(1355, 2303) ,S(1368, 2278) ,S(1358, 2273) ,S(1369, 2248) ,S(1331, 2260) ,
		S(1403, 2281) ,S(1339, 2340) ,S(1441, 2284) ,S(1296, 2353) ,S(1304, 2305) ,S(1357, 2242) ,S(1301, 2279) ,S(1360, 2226) ,
		S(1362, 2341) ,S(1361, 2339) ,S(1361, 2331) ,S(1373, 2285) ,S(1364, 2255) ,S(1353, 2237) ,S(1363, 2216) ,S(1361, 2225) ,
		S(1393, 2307) ,S(1391, 2338) ,S(1374, 2336) ,S(1341, 2333) ,S(1343, 2305) ,S(1362, 2228) ,S(1367, 2250) ,S(1371, 2212) ,
		S(1399, 2272) ,S(1391, 2285) ,S(1380, 2304) ,S(1358, 2313) ,S(1358, 2315) ,S(1374, 2247) ,S(1387, 2231) ,S(1382, 2192) ,
		S(1403, 2201) ,S(1406, 2226) ,S(1389, 2262) ,S(1383, 2230) ,S(1382, 2232) ,S(1388, 2233) ,S(1401, 2196) ,S(1389, 2169) ,
		S(1383, 2188) ,S(1412, 2133) ,S(1422, 2129) ,S(1403, 2183) ,S(1403, 2193) ,S(1409, 2150) ,S(1400, 2167) ,S(1396, 2160) ,
		S(1393, 2124) ,S(1386, 2130) ,S(1391, 2142) ,S(1413, 2149) ,S(1414, 2187) ,S(1409, 2156) ,S(1400, 2157) ,S(1395, 2158) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-29, -196)  ,S(71, -93)    ,S(76, -74)    ,S(102, -55)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-19, -36)   ,S(94, 22)     ,S(139, 13)    ,S(146, -3)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(41, 2)      ,S(121, 46)    ,S(147, 51)    ,S(130, 43)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-27, 14)    ,S(79, 44)     ,S(92, 62)     ,S(71, 70)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-33, -22)   ,S(36, 29)     ,S(56, 53)     ,S(9, 73)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-45, -25)   ,S(-25, 12)    ,S(-9, 34)     ,S(-27, 54)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(20, -63)    ,S(-28, -15)   ,S(-58, 18)    ,S(-97, 27)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(25, -157)   ,S(2, -74)     ,S(-48, -35)   ,S(-68, -53)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(5, -191)    ,S(28, -4)     ,S(66, -35)    ,S(90, -45)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-43, -36)   ,S(44, 66)     ,S(141, 8)     ,S(162, 0)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(22, 12)     ,S(190, 50)    ,S(255, 35)    ,S(152, 36)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-50, 18)    ,S(99, 44)     ,S(124, 66)    ,S(83, 75)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-64, -12)   ,S(38, 27)     ,S(44, 61)     ,S(31, 80)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-36, -15)   ,S(-17, 17)    ,S(-2, 45)     ,S(-13, 65)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(29, -55)    ,S(-17, -4)    ,S(-56, 32)    ,S(-82, 36)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(32, -142)   ,S(-3, -52)    ,S(-51, -18)   ,S(-61, -47)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(113, 205), S(469, 659), S(490, 706), S(648, 1217), S(1381, 2161), };
constexpr PScore knightMob[9] = {S(-46, -165), S(-26, -90), S(-15, -40), S(-7, -11), S(0, 5), S(6, 22), S(14, 25), S(25, 20), S(39, -7), };
constexpr PScore bishopMob[14] = {S(-63, -202), S(-35, -126), S(-19, -77), S(-10, -43), S(1, -23), S(7, -1), S(11, 14), S(11, 23), S(12, 31), S(20, 32), S(28, 27), S(52, 12), S(58, 23), S(80, -26), };
constexpr PScore rookMob[15] = {S(-27, -152), S(-35, -108), S(-29, -71), S(-27, -47), S(-26, -28), S(-26, -9), S(-24, 4), S(-18, 3), S(-13, 11), S(-5, 16), S(-6, 25), S(0, 30), S(0, 34), S(18, 15), S(80, -20), };
constexpr PScore queenMob[28] = {S(-154, -392), S(-113, -407), S(-73, -325), S(-55, -226), S(-52, -130), S(-50, -71), S(-44, -34), S(-40, -10), S(-35, 12), S(-31, 25), S(-25, 37), S(-19, 42), S(-14, 45), S(-11, 49), S(-7, 48), S(-5, 48), S(-5, 47), S(-6, 47), S(-4, 40), S(4, 26), S(14, 5), S(25, -18), S(25, -33), S(34, -57), S(3, -60), S(15, -89), S(-23, -57), S(-27, -25), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 813.084716796875;
constexpr double KSBMG = 1;
constexpr double KSCMG = -2.9062483310699463;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 298.5209655761719;
constexpr double KSBEG = 1;
constexpr double KSCEG = 0.010644559748470783;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);