#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,
		S(244, 150)   ,S(177, 152)   ,S(208, 124)   ,S(212, 101)   ,S(164, 112)   ,S(101, 140)   ,S(-85, 193)   ,S(-49, 197)   ,
		S(128, 187)   ,S(167, 171)   ,S(183, 145)   ,S(162, 123)   ,S(179, 128)   ,S(251, 148)   ,S(185, 173)   ,S(127, 182)   ,
		S(122, 154)   ,S(124, 146)   ,S(127, 131)   ,S(143, 114)   ,S(155, 123)   ,S(164, 133)   ,S(114, 151)   ,S(113, 148)   ,
		S(109, 138)   ,S(100, 132)   ,S(115, 120)   ,S(126, 115)   ,S(131, 120)   ,S(131, 125)   ,S(112, 130)   ,S(111, 128)   ,
		S(113, 131)   ,S(107, 128)   ,S(109, 125)   ,S(120, 121)   ,S(135, 131)   ,S(119, 134)   ,S(135, 121)   ,S(127, 119)   ,
		S(109, 140)   ,S(101, 133)   ,S(93, 132)    ,S(107, 136)   ,S(101, 149)   ,S(149, 143)   ,S(164, 129)   ,S(128, 115)   ,
		S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,
	},
	{
		S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,
		S(154, 194)   ,S(166, 184)   ,S(208, 173)   ,S(207, 136)   ,S(188, 124)   ,S(208, 107)   ,S(108, 146)   ,S(103, 151)   ,
		S(149, 202)   ,S(227, 193)   ,S(214, 178)   ,S(181, 151)   ,S(189, 133)   ,S(201, 145)   ,S(189, 158)   ,S(122, 173)   ,
		S(155, 156)   ,S(147, 155)   ,S(153, 143)   ,S(160, 132)   ,S(155, 128)   ,S(137, 134)   ,S(100, 150)   ,S(111, 151)   ,
		S(145, 132)   ,S(129, 135)   ,S(141, 126)   ,S(140, 125)   ,S(128, 121)   ,S(108, 129)   ,S(87, 135)    ,S(88, 139)    ,
		S(150, 124)   ,S(156, 121)   ,S(136, 131)   ,S(123, 132)   ,S(109, 127)   ,S(102, 129)   ,S(89, 133)    ,S(86, 134)    ,
		S(156, 126)   ,S(178, 124)   ,S(161, 138)   ,S(112, 149)   ,S(87, 140)    ,S(85, 139)    ,S(80, 143)    ,S(85, 144)    ,
		S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,S(125, 130)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(273, 329)   ,S(324, 369)   ,S(334, 383)   ,S(388, 374)   ,S(440, 367)   ,S(320, 385)   ,S(291, 374)   ,S(279, 306)   ,
		S(461, 341)   ,S(466, 354)   ,S(515, 354)   ,S(531, 379)   ,S(535, 377)   ,S(535, 349)   ,S(452, 359)   ,S(482, 338)   ,
		S(449, 346)   ,S(479, 359)   ,S(502, 382)   ,S(511, 383)   ,S(537, 381)   ,S(519, 383)   ,S(465, 370)   ,S(449, 357)   ,
		S(479, 357)   ,S(485, 362)   ,S(502, 383)   ,S(498, 399)   ,S(500, 403)   ,S(509, 392)   ,S(482, 387)   ,S(483, 374)   ,
		S(459, 362)   ,S(470, 368)   ,S(472, 381)   ,S(476, 388)   ,S(484, 393)   ,S(483, 383)   ,S(498, 371)   ,S(472, 371)   ,
		S(426, 330)   ,S(442, 351)   ,S(441, 363)   ,S(458, 380)   ,S(459, 377)   ,S(444, 359)   ,S(446, 353)   ,S(435, 341)   ,
		S(410, 339)   ,S(409, 351)   ,S(422, 344)   ,S(437, 358)   ,S(432, 359)   ,S(422, 339)   ,S(407, 345)   ,S(418, 351)   ,
		S(395, 313)   ,S(423, 325)   ,S(413, 333)   ,S(416, 354)   ,S(414, 354)   ,S(409, 347)   ,S(414, 335)   ,S(365, 337)   ,
	},
	{
		S(300, 320)   ,S(352, 368)   ,S(314, 393)   ,S(463, 369)   ,S(423, 374)   ,S(283, 393)   ,S(341, 372)   ,S(303, 323)   ,
		S(453, 349)   ,S(468, 366)   ,S(534, 361)   ,S(581, 376)   ,S(561, 374)   ,S(550, 360)   ,S(470, 358)   ,S(473, 337)   ,
		S(431, 369)   ,S(508, 373)   ,S(504, 397)   ,S(529, 393)   ,S(554, 386)   ,S(531, 387)   ,S(518, 359)   ,S(453, 358)   ,
		S(475, 376)   ,S(505, 379)   ,S(513, 397)   ,S(527, 403)   ,S(521, 405)   ,S(516, 391)   ,S(498, 378)   ,S(488, 367)   ,
		S(482, 376)   ,S(481, 381)   ,S(494, 391)   ,S(492, 395)   ,S(499, 396)   ,S(487, 391)   ,S(482, 376)   ,S(484, 363)   ,
		S(407, 360)   ,S(444, 362)   ,S(459, 368)   ,S(457, 385)   ,S(462, 385)   ,S(445, 370)   ,S(441, 355)   ,S(416, 339)   ,
		S(407, 369)   ,S(381, 372)   ,S(419, 353)   ,S(433, 361)   ,S(442, 365)   ,S(422, 352)   ,S(400, 358)   ,S(414, 344)   ,
		S(359, 358)   ,S(397, 354)   ,S(403, 356)   ,S(391, 361)   ,S(420, 353)   ,S(425, 332)   ,S(417, 341)   ,S(395, 316)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(406, 416)   ,S(380, 416)   ,S(331, 418)   ,S(281, 424)   ,S(339, 414)   ,S(322, 408)   ,S(372, 410)   ,S(371, 411)   ,
		S(400, 409)   ,S(482, 404)   ,S(468, 401)   ,S(433, 404)   ,S(456, 400)   ,S(444, 404)   ,S(402, 414)   ,S(420, 403)   ,
		S(471, 404)   ,S(478, 403)   ,S(500, 400)   ,S(478, 398)   ,S(493, 399)   ,S(474, 416)   ,S(472, 409)   ,S(462, 412)   ,
		S(455, 406)   ,S(501, 399)   ,S(480, 398)   ,S(510, 409)   ,S(512, 411)   ,S(503, 403)   ,S(507, 401)   ,S(451, 407)   ,
		S(461, 393)   ,S(468, 395)   ,S(466, 409)   ,S(491, 405)   ,S(503, 405)   ,S(465, 402)   ,S(478, 391)   ,S(478, 386)   ,
		S(463, 391)   ,S(487, 392)   ,S(472, 401)   ,S(479, 401)   ,S(472, 399)   ,S(475, 395)   ,S(479, 386)   ,S(483, 392)   ,
		S(482, 384)   ,S(476, 376)   ,S(475, 386)   ,S(446, 396)   ,S(450, 395)   ,S(475, 381)   ,S(494, 378)   ,S(478, 372)   ,
		S(487, 384)   ,S(473, 393)   ,S(448, 393)   ,S(437, 387)   ,S(430, 394)   ,S(443, 396)   ,S(437, 389)   ,S(472, 380)   ,
	},
	{
		S(355, 436)   ,S(363, 422)   ,S(356, 419)   ,S(339, 428)   ,S(333, 428)   ,S(300, 433)   ,S(448, 414)   ,S(376, 438)   ,
		S(384, 415)   ,S(465, 418)   ,S(465, 417)   ,S(441, 409)   ,S(456, 411)   ,S(499, 410)   ,S(486, 415)   ,S(436, 410)   ,
		S(473, 418)   ,S(513, 415)   ,S(497, 415)   ,S(515, 410)   ,S(508, 406)   ,S(516, 412)   ,S(510, 410)   ,S(485, 416)   ,
		S(468, 412)   ,S(520, 407)   ,S(501, 415)   ,S(523, 419)   ,S(541, 415)   ,S(506, 406)   ,S(511, 409)   ,S(490, 411)   ,
		S(488, 397)   ,S(470, 408)   ,S(491, 412)   ,S(509, 415)   ,S(506, 413)   ,S(491, 411)   ,S(492, 398)   ,S(464, 404)   ,
		S(480, 403)   ,S(492, 400)   ,S(496, 407)   ,S(501, 403)   ,S(489, 407)   ,S(486, 402)   ,S(487, 396)   ,S(464, 397)   ,
		S(476, 406)   ,S(515, 385)   ,S(486, 394)   ,S(468, 400)   ,S(461, 400)   ,S(463, 393)   ,S(467, 386)   ,S(480, 381)   ,
		S(495, 393)   ,S(448, 400)   ,S(457, 403)   ,S(436, 396)   ,S(445, 396)   ,S(455, 400)   ,S(471, 396)   ,S(485, 392)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(626, 741)   ,S(629, 743)   ,S(544, 760)   ,S(564, 751)   ,S(545, 756)   ,S(585, 760)   ,S(601, 756)   ,S(614, 748)   ,
		S(642, 728)   ,S(618, 738)   ,S(649, 733)   ,S(654, 733)   ,S(631, 738)   ,S(657, 727)   ,S(615, 737)   ,S(635, 727)   ,
		S(629, 721)   ,S(700, 707)   ,S(667, 720)   ,S(702, 706)   ,S(716, 702)   ,S(710, 716)   ,S(733, 703)   ,S(654, 718)   ,
		S(625, 712)   ,S(653, 709)   ,S(667, 710)   ,S(700, 702)   ,S(685, 703)   ,S(693, 705)   ,S(665, 716)   ,S(650, 711)   ,
		S(591, 702)   ,S(588, 715)   ,S(596, 711)   ,S(616, 702)   ,S(599, 705)   ,S(604, 710)   ,S(637, 706)   ,S(607, 696)   ,
		S(588, 683)   ,S(599, 695)   ,S(588, 694)   ,S(607, 687)   ,S(606, 685)   ,S(606, 690)   ,S(645, 682)   ,S(609, 669)   ,
		S(565, 680)   ,S(603, 677)   ,S(601, 683)   ,S(613, 677)   ,S(610, 676)   ,S(628, 670)   ,S(643, 662)   ,S(553, 678)   ,
		S(618, 675)   ,S(618, 681)   ,S(623, 681)   ,S(631, 675)   ,S(630, 675)   ,S(636, 686)   ,S(625, 682)   ,S(614, 662)   ,
	},
	{
		S(652, 756)   ,S(619, 770)   ,S(592, 778)   ,S(597, 770)   ,S(598, 767)   ,S(606, 762)   ,S(675, 748)   ,S(675, 747)   ,
		S(621, 751)   ,S(643, 755)   ,S(686, 749)   ,S(664, 750)   ,S(679, 743)   ,S(690, 738)   ,S(646, 746)   ,S(678, 737)   ,
		S(625, 751)   ,S(710, 731)   ,S(689, 743)   ,S(712, 726)   ,S(738, 715)   ,S(704, 728)   ,S(740, 714)   ,S(672, 733)   ,
		S(621, 738)   ,S(666, 735)   ,S(696, 731)   ,S(694, 725)   ,S(696, 721)   ,S(683, 726)   ,S(689, 720)   ,S(674, 723)   ,
		S(570, 717)   ,S(608, 730)   ,S(606, 733)   ,S(607, 725)   ,S(615, 717)   ,S(605, 729)   ,S(609, 730)   ,S(617, 717)   ,
		S(553, 697)   ,S(615, 703)   ,S(619, 704)   ,S(602, 703)   ,S(608, 701)   ,S(599, 707)   ,S(633, 705)   ,S(611, 692)   ,
		S(444, 712)   ,S(584, 691)   ,S(610, 695)   ,S(611, 696)   ,S(616, 693)   ,S(618, 690)   ,S(627, 687)   ,S(586, 684)   ,
		S(565, 700)   ,S(595, 708)   ,S(636, 700)   ,S(643, 692)   ,S(639, 689)   ,S(637, 691)   ,S(647, 687)   ,S(631, 682)   ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(772, 753)   ,S(809, 764)   ,S(776, 791)   ,S(728, 814)   ,S(756, 813)   ,S(892, 731)   ,S(885, 700)   ,S(830, 697)   ,
		S(771, 783)   ,S(700, 826)   ,S(761, 802)   ,S(695, 840)   ,S(712, 853)   ,S(789, 822)   ,S(694, 833)   ,S(782, 802)   ,
		S(771, 789)   ,S(770, 796)   ,S(760, 809)   ,S(769, 817)   ,S(775, 827)   ,S(791, 817)   ,S(781, 811)   ,S(763, 833)   ,
		S(784, 780)   ,S(778, 810)   ,S(770, 800)   ,S(747, 843)   ,S(756, 843)   ,S(808, 821)   ,S(817, 820)   ,S(814, 799)   ,
		S(785, 762)   ,S(785, 790)   ,S(767, 799)   ,S(758, 830)   ,S(764, 823)   ,S(785, 812)   ,S(802, 787)   ,S(815, 777)   ,
		S(795, 742)   ,S(802, 758)   ,S(787, 781)   ,S(784, 774)   ,S(786, 768)   ,S(792, 778)   ,S(817, 748)   ,S(815, 731)   ,
		S(803, 726)   ,S(802, 736)   ,S(813, 724)   ,S(805, 747)   ,S(809, 735)   ,S(836, 681)   ,S(819, 685)   ,S(775, 727)   ,
		S(799, 724)   ,S(803, 726)   ,S(812, 721)   ,S(822, 737)   ,S(820, 709)   ,S(779, 705)   ,S(781, 698)   ,S(769, 729)   ,
	},
	{
		S(974, 647)   ,S(1025, 662)  ,S(1035, 686)  ,S(924, 775)   ,S(920, 762)   ,S(941, 749)   ,S(908, 745)   ,S(912, 719)   ,
		S(862, 803)   ,S(797, 844)   ,S(883, 826)   ,S(801, 868)   ,S(770, 888)   ,S(856, 806)   ,S(801, 833)   ,S(883, 786)   ,
		S(867, 812)   ,S(868, 819)   ,S(862, 836)   ,S(873, 840)   ,S(884, 825)   ,S(869, 811)   ,S(910, 768)   ,S(907, 779)   ,
		S(887, 793)   ,S(898, 833)   ,S(883, 828)   ,S(868, 855)   ,S(859, 849)   ,S(881, 798)   ,S(901, 806)   ,S(910, 788)   ,
		S(883, 782)   ,S(889, 801)   ,S(870, 820)   ,S(863, 839)   ,S(876, 815)   ,S(873, 799)   ,S(893, 786)   ,S(892, 768)   ,
		S(850, 777)   ,S(887, 763)   ,S(889, 781)   ,S(880, 774)   ,S(879, 778)   ,S(887, 779)   ,S(906, 753)   ,S(895, 742)   ,
		S(819, 753)   ,S(869, 715)   ,S(918, 694)   ,S(912, 730)   ,S(904, 743)   ,S(914, 716)   ,S(915, 719)   ,S(915, 708)   ,
		S(825, 741)   ,S(867, 697)   ,S(877, 703)   ,S(905, 705)   ,S(911, 718)   ,S(916, 705)   ,S(921, 714)   ,S(909, 708)   ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(122, -21)   ,S(108, -14)   ,S(130, -22)   ,S(102, -100)  ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(191, 12)    ,S(246, 11)    ,S(170, 30)    ,S(65, -20)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(259, 22)    ,S(346, 21)    ,S(278, 29)    ,S(79, 5)      ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(193, 37)    ,S(229, 30)    ,S(193, 20)    ,S(-32, 12)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(146, 37)    ,S(159, 21)    ,S(135, 4)     ,S(-39, -9)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(81, 28)     ,S(73, 15)     ,S(62, -3)     ,S(-23, -11)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-44, 21)    ,S(-27, 19)    ,S(23, -2)     ,S(27, -24)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-64, -16)   ,S(-85, 5)     ,S(19, -22)    ,S(21, -74)    ,
	},
	{
		S(-57, -135)  ,S(-37, -37)   ,S(-8, -25)    ,S(-15, -10)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-115, -26)  ,S(30, 19)     ,S(86, 10)     ,S(98, -6)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-117, 9)    ,S(146, 21)    ,S(167, 17)    ,S(128, 16)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-128, 8)    ,S(71, 10)     ,S(90, 25)     ,S(50, 30)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-143, -19)  ,S(-13, 2)     ,S(53, 12)     ,S(0, 28)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-187, -13)  ,S(-96, -6)    ,S(-57, 4)     ,S(-75, 20)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-145, -16)  ,S(-144, -5)   ,S(-141, 4)    ,S(-186, 12)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-175, -55)  ,S(-147, -27)  ,S(-195, -3)   ,S(-234, -13)  ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(125, 130), S(433, 350), S(447, 385), S(616, 692), S(821, 757), };
constexpr PScore knightMob[9] = {S(-41, -88), S(-13, -31), S(5, -1), S(15, 15), S(23, 22), S(29, 31), S(41, 31), S(53, 27), S(68, 11), };
constexpr PScore bishopMob[14] = {S(-63, -123), S(-23, -70), S(3, -36), S(13, -16), S(27, -3), S(34, 8), S(40, 15), S(37, 22), S(39, 27), S(45, 28), S(56, 23), S(84, 14), S(85, 17), S(121, -10), };
constexpr PScore rookMob[15] = {S(-30, -106), S(-37, -65), S(-25, -44), S(-24, -32), S(-23, -20), S(-24, -8), S(-21, -1), S(-13, 0), S(-9, 2), S(3, 6), S(2, 11), S(8, 13), S(8, 15), S(21, 3), S(82, -13), };
constexpr PScore queenMob[28] = {S(-143, -450), S(-113, -416), S(-53, -323), S(-30, -241), S(-27, -151), S(-24, -105), S(-19, -83), S(-14, -72), S(-9, -58), S(-2, -51), S(4, -46), S(10, -42), S(15, -39), S(21, -38), S(26, -40), S(27, -40), S(29, -43), S(32, -48), S(43, -57), S(58, -72), S(78, -90), S(110, -119), S(133, -143), S(171, -166), S(179, -183), S(242, -215), S(248, -232), S(314, -239), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 872.0895385742188;
constexpr double KSBMG = 1;
constexpr double KSCMG = -2.709433078765869;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 779.6649169921875;
constexpr double KSBEG = 1;
constexpr double KSCEG = 2.4931700229644775;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output, std::string scores);