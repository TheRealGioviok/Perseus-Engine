#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,
		S(237, 416)   ,S(213, 427)   ,S(165, 400)   ,S(202, 284)   ,S(219, 170)   ,S(189, 88)    ,S(2, 155)     ,S(5, 194)     ,
		S(108, 396)   ,S(134, 385)   ,S(125, 343)   ,S(137, 244)   ,S(177, 159)   ,S(224, 137)   ,S(166, 166)   ,S(116, 206)   ,
		S(122, 288)   ,S(122, 264)   ,S(121, 242)   ,S(122, 209)   ,S(145, 183)   ,S(143, 179)   ,S(87, 207)    ,S(83, 209)    ,
		S(124, 232)   ,S(117, 229)   ,S(118, 214)   ,S(114, 205)   ,S(115, 194)   ,S(105, 199)   ,S(75, 207)    ,S(66, 212)    ,
		S(135, 205)   ,S(149, 199)   ,S(125, 212)   ,S(116, 211)   ,S(105, 207)   ,S(93, 211)    ,S(62, 216)    ,S(64, 217)    ,
		S(136, 198)   ,S(167, 193)   ,S(150, 209)   ,S(106, 223)   ,S(91, 222)    ,S(80, 222)    ,S(61, 226)    ,S(64, 223)    ,
		S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,
	},
	{
		S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,
		S(-23, 251)   ,S(-47, 213)   ,S(189, 135)   ,S(226, 156)   ,S(227, 207)   ,S(204, 282)   ,S(180, 341)   ,S(226, 336)   ,
		S(128, 229)   ,S(160, 220)   ,S(231, 187)   ,S(155, 172)   ,S(146, 187)   ,S(138, 250)   ,S(120, 295)   ,S(107, 317)   ,
		S(104, 220)   ,S(104, 220)   ,S(144, 194)   ,S(140, 187)   ,S(130, 172)   ,S(117, 206)   ,S(112, 222)   ,S(108, 249)   ,
		S(95, 206)    ,S(99, 212)    ,S(116, 204)   ,S(119, 197)   ,S(117, 186)   ,S(112, 191)   ,S(99, 208)    ,S(98, 220)    ,
		S(109, 193)   ,S(120, 203)   ,S(113, 225)   ,S(125, 214)   ,S(112, 193)   ,S(109, 196)   ,S(105, 199)   ,S(101, 209)   ,
		S(112, 175)   ,S(141, 203)   ,S(140, 231)   ,S(105, 233)   ,S(107, 207)   ,S(100, 204)   ,S(101, 201)   ,S(100, 215)   ,
		S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,S(111, 202)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(322, 608)   ,S(363, 671)   ,S(383, 709)   ,S(510, 671)   ,S(507, 664)   ,S(400, 694)   ,S(471, 656)   ,S(342, 569)   ,
		S(489, 652)   ,S(509, 676)   ,S(550, 664)   ,S(587, 693)   ,S(577, 683)   ,S(570, 655)   ,S(513, 666)   ,S(531, 641)   ,
		S(462, 678)   ,S(524, 680)   ,S(545, 713)   ,S(553, 714)   ,S(562, 703)   ,S(540, 702)   ,S(514, 676)   ,S(525, 660)   ,
		S(511, 693)   ,S(539, 690)   ,S(562, 712)   ,S(571, 728)   ,S(568, 732)   ,S(554, 717)   ,S(539, 704)   ,S(549, 687)   ,
		S(510, 700)   ,S(531, 697)   ,S(530, 718)   ,S(537, 724)   ,S(551, 722)   ,S(544, 709)   ,S(555, 693)   ,S(534, 696)   ,
		S(469, 660)   ,S(484, 678)   ,S(501, 691)   ,S(499, 714)   ,S(511, 714)   ,S(493, 688)   ,S(497, 669)   ,S(475, 661)   ,
		S(448, 675)   ,S(446, 685)   ,S(469, 664)   ,S(479, 685)   ,S(487, 687)   ,S(478, 669)   ,S(449, 689)   ,S(451, 686)   ,
		S(426, 627)   ,S(436, 671)   ,S(458, 668)   ,S(467, 692)   ,S(466, 682)   ,S(460, 666)   ,S(457, 664)   ,S(421, 665)   ,
	},
	{
		S(352, 586)   ,S(454, 710)   ,S(389, 760)   ,S(506, 728)   ,S(461, 735)   ,S(341, 763)   ,S(354, 720)   ,S(266, 654)   ,
		S(526, 702)   ,S(486, 720)   ,S(577, 701)   ,S(563, 744)   ,S(547, 745)   ,S(519, 708)   ,S(475, 715)   ,S(471, 694)   ,
		S(495, 725)   ,S(481, 753)   ,S(545, 759)   ,S(544, 753)   ,S(532, 756)   ,S(527, 749)   ,S(494, 716)   ,S(464, 700)   ,
		S(523, 750)   ,S(525, 766)   ,S(546, 768)   ,S(541, 787)   ,S(539, 778)   ,S(536, 746)   ,S(521, 720)   ,S(502, 717)   ,
		S(511, 755)   ,S(539, 749)   ,S(525, 760)   ,S(529, 774)   ,S(518, 764)   ,S(513, 748)   ,S(506, 726)   ,S(497, 721)   ,
		S(477, 702)   ,S(488, 719)   ,S(492, 728)   ,S(496, 750)   ,S(496, 747)   ,S(489, 720)   ,S(485, 698)   ,S(472, 672)   ,
		S(459, 717)   ,S(454, 715)   ,S(468, 699)   ,S(479, 721)   ,S(478, 722)   ,S(468, 699)   ,S(460, 707)   ,S(449, 705)   ,
		S(422, 685)   ,S(458, 686)   ,S(460, 701)   ,S(463, 718)   ,S(469, 719)   ,S(465, 686)   ,S(464, 674)   ,S(431, 660)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(474, 771)   ,S(430, 763)   ,S(439, 756)   ,S(407, 765)   ,S(396, 753)   ,S(393, 753)   ,S(536, 742)   ,S(473, 763)   ,
		S(477, 759)   ,S(490, 762)   ,S(522, 751)   ,S(478, 752)   ,S(490, 742)   ,S(541, 724)   ,S(498, 746)   ,S(461, 737)   ,
		S(530, 758)   ,S(548, 754)   ,S(540, 753)   ,S(532, 752)   ,S(552, 736)   ,S(552, 741)   ,S(530, 737)   ,S(535, 743)   ,
		S(527, 760)   ,S(545, 751)   ,S(536, 760)   ,S(545, 761)   ,S(569, 747)   ,S(542, 729)   ,S(552, 744)   ,S(530, 740)   ,
		S(523, 742)   ,S(534, 747)   ,S(536, 755)   ,S(555, 751)   ,S(544, 745)   ,S(539, 736)   ,S(539, 722)   ,S(528, 731)   ,
		S(526, 732)   ,S(555, 737)   ,S(551, 746)   ,S(535, 741)   ,S(533, 742)   ,S(521, 732)   ,S(526, 727)   ,S(513, 731)   ,
		S(540, 719)   ,S(564, 716)   ,S(542, 730)   ,S(525, 736)   ,S(513, 737)   ,S(519, 724)   ,S(516, 711)   ,S(522, 719)   ,
		S(536, 722)   ,S(501, 736)   ,S(511, 740)   ,S(507, 741)   ,S(502, 742)   ,S(503, 744)   ,S(513, 745)   ,S(526, 719)   ,
	},
	{
		S(460, 777)   ,S(488, 768)   ,S(375, 784)   ,S(406, 789)   ,S(382, 809)   ,S(379, 800)   ,S(442, 798)   ,S(457, 804)   ,
		S(474, 776)   ,S(466, 780)   ,S(501, 768)   ,S(477, 779)   ,S(468, 788)   ,S(501, 781)   ,S(485, 791)   ,S(457, 792)   ,
		S(504, 800)   ,S(502, 797)   ,S(510, 800)   ,S(529, 777)   ,S(514, 779)   ,S(529, 779)   ,S(515, 786)   ,S(519, 778)   ,
		S(500, 796)   ,S(524, 794)   ,S(522, 785)   ,S(529, 798)   ,S(534, 792)   ,S(515, 776)   ,S(528, 777)   ,S(500, 785)   ,
		S(513, 770)   ,S(517, 775)   ,S(514, 784)   ,S(530, 787)   ,S(519, 787)   ,S(519, 782)   ,S(519, 763)   ,S(507, 763)   ,
		S(516, 766)   ,S(519, 761)   ,S(516, 774)   ,S(512, 780)   ,S(515, 779)   ,S(516, 772)   ,S(534, 761)   ,S(513, 759)   ,
		S(514, 723)   ,S(527, 741)   ,S(517, 755)   ,S(504, 768)   ,S(505, 770)   ,S(521, 753)   ,S(525, 736)   ,S(528, 748)   ,
		S(515, 730)   ,S(492, 753)   ,S(495, 766)   ,S(493, 772)   ,S(501, 767)   ,S(505, 772)   ,S(522, 768)   ,S(534, 746)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(742, 1257)  ,S(711, 1278)  ,S(694, 1285)  ,S(661, 1290)  ,S(676, 1276)  ,S(729, 1252)  ,S(723, 1250)  ,S(699, 1268)  ,
		S(703, 1254)  ,S(702, 1262)  ,S(710, 1258)  ,S(698, 1266)  ,S(696, 1253)  ,S(702, 1240)  ,S(677, 1240)  ,S(679, 1237)  ,
		S(689, 1249)  ,S(747, 1225)  ,S(713, 1248)  ,S(730, 1223)  ,S(743, 1209)  ,S(713, 1223)  ,S(762, 1194)  ,S(693, 1223)  ,
		S(672, 1249)  ,S(689, 1243)  ,S(708, 1237)  ,S(711, 1233)  ,S(709, 1221)  ,S(697, 1221)  ,S(712, 1210)  ,S(689, 1217)  ,
		S(635, 1236)  ,S(664, 1243)  ,S(638, 1255)  ,S(638, 1248)  ,S(643, 1232)  ,S(650, 1230)  ,S(658, 1227)  ,S(640, 1219)  ,
		S(614, 1207)  ,S(659, 1215)  ,S(636, 1224)  ,S(641, 1219)  ,S(645, 1207)  ,S(647, 1206)  ,S(664, 1204)  ,S(639, 1192)  ,
		S(579, 1216)  ,S(633, 1205)  ,S(647, 1211)  ,S(643, 1211)  ,S(650, 1200)  ,S(658, 1193)  ,S(668, 1183)  ,S(620, 1197)  ,
		S(614, 1215)  ,S(632, 1222)  ,S(661, 1218)  ,S(660, 1209)  ,S(660, 1197)  ,S(670, 1199)  ,S(675, 1196)  ,S(650, 1199)  ,
	},
	{
		S(702, 1326)  ,S(703, 1328)  ,S(706, 1335)  ,S(642, 1340)  ,S(669, 1329)  ,S(649, 1344)  ,S(684, 1331)  ,S(689, 1326)  ,
		S(672, 1306)  ,S(682, 1311)  ,S(713, 1300)  ,S(672, 1326)  ,S(699, 1315)  ,S(678, 1320)  ,S(654, 1329)  ,S(663, 1317)  ,
		S(687, 1290)  ,S(762, 1263)  ,S(746, 1278)  ,S(732, 1268)  ,S(728, 1271)  ,S(690, 1296)  ,S(714, 1280)  ,S(657, 1303)  ,
		S(675, 1288)  ,S(703, 1282)  ,S(710, 1280)  ,S(699, 1281)  ,S(716, 1274)  ,S(688, 1285)  ,S(678, 1286)  ,S(655, 1291)  ,
		S(631, 1276)  ,S(668, 1290)  ,S(647, 1297)  ,S(638, 1288)  ,S(648, 1281)  ,S(634, 1294)  ,S(632, 1296)  ,S(630, 1278)  ,
		S(632, 1238)  ,S(672, 1264)  ,S(652, 1266)  ,S(644, 1261)  ,S(650, 1256)  ,S(630, 1267)  ,S(639, 1269)  ,S(622, 1257)  ,
		S(567, 1257)  ,S(665, 1242)  ,S(663, 1249)  ,S(648, 1252)  ,S(652, 1249)  ,S(639, 1256)  ,S(638, 1249)  ,S(604, 1258)  ,
		S(632, 1236)  ,S(651, 1260)  ,S(664, 1267)  ,S(659, 1251)  ,S(662, 1249)  ,S(651, 1260)  ,S(644, 1259)  ,S(646, 1254)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1366, 2248) ,S(1390, 2264) ,S(1381, 2276) ,S(1346, 2339) ,S(1356, 2325) ,S(1412, 2292) ,S(1378, 2288) ,S(1394, 2242) ,
		S(1368, 2273) ,S(1310, 2326) ,S(1352, 2308) ,S(1294, 2370) ,S(1297, 2387) ,S(1435, 2274) ,S(1346, 2293) ,S(1366, 2260) ,
		S(1363, 2293) ,S(1374, 2257) ,S(1362, 2282) ,S(1364, 2297) ,S(1383, 2308) ,S(1368, 2327) ,S(1412, 2242) ,S(1415, 2257) ,
		S(1376, 2270) ,S(1351, 2328) ,S(1352, 2297) ,S(1342, 2341) ,S(1356, 2330) ,S(1389, 2288) ,S(1416, 2285) ,S(1405, 2264) ,
		S(1365, 2265) ,S(1369, 2313) ,S(1351, 2330) ,S(1359, 2352) ,S(1358, 2327) ,S(1380, 2309) ,S(1397, 2273) ,S(1399, 2256) ,
		S(1353, 2260) ,S(1381, 2265) ,S(1381, 2288) ,S(1377, 2278) ,S(1378, 2266) ,S(1390, 2269) ,S(1405, 2239) ,S(1404, 2228) ,
		S(1340, 2224) ,S(1378, 2212) ,S(1416, 2165) ,S(1405, 2232) ,S(1395, 2228) ,S(1410, 2204) ,S(1415, 2197) ,S(1414, 2203) ,
		S(1362, 2195) ,S(1387, 2166) ,S(1387, 2176) ,S(1395, 2217) ,S(1402, 2218) ,S(1397, 2194) ,S(1386, 2233) ,S(1397, 2182) ,
	},
	{
		S(1392, 2374) ,S(1413, 2399) ,S(1386, 2421) ,S(1334, 2420) ,S(1351, 2400) ,S(1343, 2391) ,S(1352, 2370) ,S(1317, 2378) ,
		S(1390, 2392) ,S(1322, 2466) ,S(1419, 2393) ,S(1279, 2465) ,S(1283, 2434) ,S(1338, 2370) ,S(1281, 2410) ,S(1343, 2357) ,
		S(1355, 2433) ,S(1351, 2432) ,S(1353, 2423) ,S(1354, 2400) ,S(1345, 2378) ,S(1336, 2367) ,S(1344, 2350) ,S(1342, 2356) ,
		S(1383, 2400) ,S(1377, 2433) ,S(1362, 2430) ,S(1326, 2437) ,S(1325, 2422) ,S(1345, 2354) ,S(1350, 2381) ,S(1354, 2343) ,
		S(1385, 2373) ,S(1379, 2381) ,S(1366, 2401) ,S(1342, 2420) ,S(1340, 2430) ,S(1356, 2370) ,S(1370, 2363) ,S(1365, 2325) ,
		S(1388, 2306) ,S(1393, 2324) ,S(1375, 2366) ,S(1367, 2344) ,S(1365, 2354) ,S(1371, 2360) ,S(1384, 2328) ,S(1372, 2302) ,
		S(1369, 2296) ,S(1398, 2244) ,S(1408, 2244) ,S(1387, 2303) ,S(1387, 2318) ,S(1393, 2276) ,S(1384, 2297) ,S(1379, 2292) ,
		S(1377, 2243) ,S(1371, 2250) ,S(1377, 2265) ,S(1398, 2275) ,S(1398, 2315) ,S(1392, 2284) ,S(1384, 2283) ,S(1379, 2288) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-32, -208)  ,S(75, -102)   ,S(79, -82)    ,S(112, -67)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-17, -48)   ,S(102, 14)    ,S(150, 4)     ,S(157, -14)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(43, -9)     ,S(128, 41)    ,S(159, 45)    ,S(138, 39)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-24, 4)     ,S(92, 39)     ,S(100, 62)    ,S(78, 71)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-32, -29)   ,S(41, 33)     ,S(58, 59)     ,S(9, 81)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-45, -33)   ,S(-26, 19)    ,S(-9, 41)     ,S(-28, 63)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(15, -71)    ,S(-32, -9)    ,S(-61, 23)    ,S(-99, 35)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(21, -168)   ,S(0, -74)     ,S(-51, -32)   ,S(-70, -48)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(-5, -203)   ,S(18, -14)    ,S(59, -46)    ,S(90, -56)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-48, -52)   ,S(51, 51)     ,S(141, -4)    ,S(166, -11)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(13, -1)     ,S(187, 46)    ,S(254, 31)    ,S(152, 35)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-52, 2)     ,S(107, 40)    ,S(129, 66)    ,S(90, 76)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-62, -27)   ,S(47, 34)     ,S(53, 68)     ,S(35, 90)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-36, -29)   ,S(-18, 24)    ,S(1, 52)      ,S(-10, 74)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(27, -68)    ,S(-17, 4)     ,S(-56, 39)    ,S(-81, 45)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(31, -157)   ,S(-4, -48)    ,S(-51, -14)   ,S(-59, -41)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(111, 202), S(464, 663), S(482, 710), S(646, 1220), S(1365, 2283), };
constexpr PScore knightMob[9] = {S(-47, -158), S(-29, -85), S(-16, -36), S(-8, -7), S(-1, 9), S(5, 26), S(15, 29), S(24, 24), S(38, -3), };
constexpr PScore bishopMob[14] = {S(-66, -197), S(-37, -120), S(-21, -73), S(-11, -39), S(-1, -19), S(6, 4), S(8, 19), S(9, 30), S(10, 40), S(17, 43), S(24, 40), S(48, 26), S(52, 39), S(73, -8), };
constexpr PScore rookMob[15] = {S(-26, -148), S(-34, -106), S(-26, -69), S(-24, -46), S(-23, -27), S(-25, -9), S(-22, 3), S(-16, 3), S(-11, 9), S(-3, 15), S(-4, 23), S(3, 27), S(4, 30), S(21, 10), S(84, -27), };
constexpr PScore queenMob[28] = {S(-156, -380), S(-115, -395), S(-73, -318), S(-54, -221), S(-51, -130), S(-48, -72), S(-43, -37), S(-38, -15), S(-34, 6), S(-29, 18), S(-25, 28), S(-19, 32), S(-15, 34), S(-12, 38), S(-8, 37), S(-7, 37), S(-7, 36), S(-10, 37), S(-8, 31), S(-1, 19), S(9, -4), S(19, -26), S(19, -42), S(28, -66), S(-3, -68), S(7, -92), S(-12, -82), S(-33, -31), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 843.4569091796875;
constexpr double KSBMG = 1;
constexpr double KSCMG = -2.9003612995147705;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 317.4364929199219;
constexpr double KSBEG = 1;
constexpr double KSCEG = 0.3736427426338196;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);