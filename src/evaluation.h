#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,
		S(198, 263)   ,S(157, 265)   ,S(197, 210)   ,S(203, 171)   ,S(180, 182)   ,S(123, 231)   ,S(-92, 325)   ,S(-46, 327)   ,
		S(101, 300)   ,S(128, 279)   ,S(148, 235)   ,S(142, 194)   ,S(153, 205)   ,S(203, 242)   ,S(148, 279)   ,S(112, 288)   ,
		S(96, 253)    ,S(100, 237)   ,S(107, 217)   ,S(117, 192)   ,S(127, 209)   ,S(135, 221)   ,S(97, 247)    ,S(94, 243)    ,
		S(90, 227)    ,S(87, 220)    ,S(103, 201)   ,S(110, 195)   ,S(111, 203)   ,S(116, 209)   ,S(97, 216)    ,S(97, 211)    ,
		S(91, 216)    ,S(91, 210)    ,S(99, 207)    ,S(105, 205)   ,S(118, 220)   ,S(110, 222)   ,S(120, 200)   ,S(110, 195)   ,
		S(88, 225)    ,S(89, 215)    ,S(87, 215)    ,S(95, 218)    ,S(96, 236)    ,S(134, 230)   ,S(143, 202)   ,S(111, 182)   ,
		S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,
	},
	{
		S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,
		S(131, 326)   ,S(98, 337)    ,S(175, 299)   ,S(187, 225)   ,S(184, 211)   ,S(202, 188)   ,S(89, 262)    ,S(85, 262)    ,
		S(118, 322)   ,S(169, 315)   ,S(166, 284)   ,S(153, 236)   ,S(163, 210)   ,S(160, 238)   ,S(152, 258)   ,S(95, 280)    ,
		S(126, 252)   ,S(119, 251)   ,S(126, 233)   ,S(129, 218)   ,S(128, 212)   ,S(114, 224)   ,S(83, 249)    ,S(86, 250)    ,
		S(125, 215)   ,S(111, 223)   ,S(122, 210)   ,S(122, 210)   ,S(111, 204)   ,S(98, 217)    ,S(75, 228)    ,S(71, 231)    ,
		S(127, 204)   ,S(136, 198)   ,S(123, 217)   ,S(113, 220)   ,S(102, 216)   ,S(93, 217)    ,S(77, 222)    ,S(69, 223)    ,
		S(130, 201)   ,S(154, 197)   ,S(142, 223)   ,S(107, 233)   ,S(85, 226)    ,S(82, 227)    ,S(74, 229)    ,S(70, 229)    ,
		S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,S(106, 210)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(285, 600)   ,S(379, 675)   ,S(363, 724)   ,S(476, 695)   ,S(513, 692)   ,S(389, 728)   ,S(382, 691)   ,S(345, 577)   ,
		S(488, 652)   ,S(494, 674)   ,S(531, 679)   ,S(552, 717)   ,S(562, 716)   ,S(573, 671)   ,S(489, 681)   ,S(508, 655)   ,
		S(483, 663)   ,S(505, 687)   ,S(537, 724)   ,S(539, 730)   ,S(550, 727)   ,S(545, 731)   ,S(482, 715)   ,S(494, 686)   ,
		S(522, 682)   ,S(534, 689)   ,S(547, 723)   ,S(546, 753)   ,S(550, 763)   ,S(549, 741)   ,S(527, 733)   ,S(519, 715)   ,
		S(512, 684)   ,S(525, 694)   ,S(527, 721)   ,S(530, 736)   ,S(537, 747)   ,S(533, 733)   ,S(540, 717)   ,S(513, 717)   ,
		S(488, 639)   ,S(500, 672)   ,S(500, 702)   ,S(509, 728)   ,S(505, 729)   ,S(495, 704)   ,S(490, 693)   ,S(480, 672)   ,
		S(465, 658)   ,S(475, 674)   ,S(479, 668)   ,S(488, 696)   ,S(483, 698)   ,S(473, 676)   ,S(464, 687)   ,S(466, 690)   ,
		S(451, 620)   ,S(477, 637)   ,S(472, 651)   ,S(475, 684)   ,S(471, 686)   ,S(468, 677)   ,S(466, 657)   ,S(428, 647)   ,
	},
	{
		S(311, 563)   ,S(393, 662)   ,S(390, 710)   ,S(491, 687)   ,S(492, 681)   ,S(349, 717)   ,S(362, 683)   ,S(313, 577)   ,
		S(483, 648)   ,S(478, 683)   ,S(529, 684)   ,S(592, 698)   ,S(563, 702)   ,S(554, 676)   ,S(497, 666)   ,S(498, 641)   ,
		S(462, 685)   ,S(508, 698)   ,S(520, 733)   ,S(548, 730)   ,S(557, 721)   ,S(552, 715)   ,S(527, 677)   ,S(488, 664)   ,
		S(507, 697)   ,S(532, 707)   ,S(545, 733)   ,S(561, 744)   ,S(562, 741)   ,S(553, 720)   ,S(534, 705)   ,S(523, 680)   ,
		S(514, 700)   ,S(522, 708)   ,S(534, 724)   ,S(541, 736)   ,S(542, 734)   ,S(533, 720)   ,S(528, 698)   ,S(521, 680)   ,
		S(458, 672)   ,S(483, 687)   ,S(499, 703)   ,S(500, 724)   ,S(504, 722)   ,S(496, 699)   ,S(492, 668)   ,S(472, 641)   ,
		S(455, 693)   ,S(445, 697)   ,S(464, 680)   ,S(477, 693)   ,S(484, 693)   ,S(473, 671)   ,S(458, 678)   ,S(457, 653)   ,
		S(416, 665)   ,S(447, 663)   ,S(458, 674)   ,S(454, 683)   ,S(471, 672)   ,S(472, 644)   ,S(466, 641)   ,S(442, 608)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(466, 767)   ,S(442, 765)   ,S(388, 760)   ,S(377, 768)   ,S(398, 751)   ,S(372, 751)   ,S(467, 740)   ,S(459, 750)   ,
		S(457, 752)   ,S(487, 754)   ,S(502, 739)   ,S(465, 748)   ,S(471, 741)   ,S(493, 734)   ,S(455, 754)   ,S(469, 742)   ,
		S(519, 745)   ,S(514, 747)   ,S(528, 741)   ,S(508, 737)   ,S(517, 734)   ,S(505, 762)   ,S(493, 754)   ,S(497, 760)   ,
		S(501, 749)   ,S(525, 740)   ,S(513, 732)   ,S(527, 749)   ,S(524, 757)   ,S(516, 747)   ,S(517, 754)   ,S(486, 756)   ,
		S(507, 729)   ,S(518, 727)   ,S(514, 742)   ,S(518, 743)   ,S(526, 748)   ,S(511, 747)   ,S(514, 737)   ,S(505, 731)   ,
		S(513, 723)   ,S(530, 727)   ,S(515, 737)   ,S(514, 742)   ,S(513, 744)   ,S(512, 740)   ,S(516, 732)   ,S(511, 738)   ,
		S(526, 713)   ,S(524, 700)   ,S(518, 717)   ,S(501, 733)   ,S(501, 737)   ,S(515, 718)   ,S(528, 713)   ,S(514, 700)   ,
		S(533, 711)   ,S(516, 730)   ,S(499, 737)   ,S(492, 728)   ,S(490, 736)   ,S(494, 740)   ,S(494, 724)   ,S(516, 707)   ,
	},
	{
		S(434, 757)   ,S(404, 749)   ,S(409, 747)   ,S(391, 752)   ,S(374, 758)   ,S(359, 758)   ,S(471, 747)   ,S(445, 766)   ,
		S(428, 749)   ,S(462, 758)   ,S(488, 741)   ,S(459, 738)   ,S(464, 742)   ,S(505, 734)   ,S(501, 751)   ,S(479, 738)   ,
		S(497, 760)   ,S(510, 754)   ,S(512, 747)   ,S(523, 738)   ,S(525, 727)   ,S(531, 741)   ,S(527, 737)   ,S(521, 745)   ,
		S(484, 749)   ,S(521, 744)   ,S(505, 749)   ,S(525, 750)   ,S(543, 742)   ,S(520, 726)   ,S(525, 740)   ,S(515, 743)   ,
		S(506, 731)   ,S(496, 738)   ,S(520, 740)   ,S(530, 744)   ,S(526, 739)   ,S(525, 732)   ,S(526, 719)   ,S(500, 728)   ,
		S(501, 733)   ,S(518, 731)   ,S(520, 740)   ,S(526, 734)   ,S(519, 736)   ,S(520, 728)   ,S(524, 721)   ,S(506, 722)   ,
		S(505, 724)   ,S(534, 706)   ,S(518, 721)   ,S(505, 729)   ,S(502, 728)   ,S(507, 716)   ,S(512, 703)   ,S(520, 695)   ,
		S(522, 711)   ,S(493, 723)   ,S(496, 732)   ,S(492, 723)   ,S(492, 724)   ,S(497, 728)   ,S(509, 727)   ,S(523, 709)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(685, 1289)  ,S(680, 1293)  ,S(645, 1307)  ,S(657, 1300)  ,S(631, 1315)  ,S(693, 1308)  ,S(696, 1303)  ,S(690, 1300)  ,
		S(665, 1281)  ,S(654, 1291)  ,S(675, 1286)  ,S(694, 1286)  ,S(665, 1301)  ,S(699, 1278)  ,S(672, 1286)  ,S(669, 1278)  ,
		S(655, 1270)  ,S(712, 1249)  ,S(686, 1264)  ,S(721, 1243)  ,S(722, 1248)  ,S(725, 1260)  ,S(746, 1241)  ,S(673, 1269)  ,
		S(656, 1259)  ,S(679, 1253)  ,S(686, 1254)  ,S(714, 1243)  ,S(693, 1259)  ,S(699, 1257)  ,S(688, 1262)  ,S(668, 1265)  ,
		S(630, 1244)  ,S(636, 1261)  ,S(636, 1255)  ,S(652, 1247)  ,S(636, 1260)  ,S(643, 1263)  ,S(661, 1259)  ,S(635, 1246)  ,
		S(626, 1216)  ,S(640, 1229)  ,S(630, 1226)  ,S(650, 1215)  ,S(640, 1225)  ,S(645, 1228)  ,S(673, 1217)  ,S(638, 1199)  ,
		S(607, 1211)  ,S(640, 1207)  ,S(639, 1214)  ,S(649, 1206)  ,S(643, 1212)  ,S(656, 1205)  ,S(667, 1192)  ,S(589, 1212)  ,
		S(645, 1207)  ,S(647, 1214)  ,S(650, 1215)  ,S(659, 1205)  ,S(654, 1211)  ,S(659, 1227)  ,S(652, 1217)  ,S(641, 1190)  ,
	},
	{
		S(685, 1288)  ,S(652, 1311)  ,S(663, 1311)  ,S(647, 1303)  ,S(677, 1289)  ,S(676, 1285)  ,S(714, 1271)  ,S(712, 1276)  ,
		S(629, 1291)  ,S(662, 1290)  ,S(686, 1284)  ,S(677, 1285)  ,S(692, 1276)  ,S(700, 1262)  ,S(671, 1274)  ,S(680, 1269)  ,
		S(636, 1281)  ,S(707, 1256)  ,S(688, 1272)  ,S(714, 1244)  ,S(739, 1230)  ,S(705, 1247)  ,S(738, 1231)  ,S(680, 1257)  ,
		S(627, 1271)  ,S(676, 1258)  ,S(686, 1260)  ,S(693, 1250)  ,S(705, 1239)  ,S(690, 1242)  ,S(693, 1239)  ,S(677, 1249)  ,
		S(595, 1240)  ,S(637, 1253)  ,S(626, 1262)  ,S(636, 1253)  ,S(641, 1243)  ,S(636, 1251)  ,S(641, 1252)  ,S(633, 1239)  ,
		S(592, 1202)  ,S(644, 1214)  ,S(646, 1215)  ,S(636, 1213)  ,S(640, 1212)  ,S(637, 1218)  ,S(654, 1217)  ,S(630, 1204)  ,
		S(504, 1226)  ,S(623, 1194)  ,S(639, 1205)  ,S(637, 1207)  ,S(644, 1200)  ,S(644, 1198)  ,S(648, 1192)  ,S(603, 1195)  ,
		S(593, 1211)  ,S(623, 1222)  ,S(652, 1213)  ,S(653, 1207)  ,S(654, 1199)  ,S(651, 1204)  ,S(657, 1200)  ,S(645, 1190)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1331, 2257) ,S(1361, 2256) ,S(1338, 2289) ,S(1344, 2298) ,S(1326, 2313) ,S(1373, 2301) ,S(1386, 2284) ,S(1365, 2270) ,
		S(1354, 2239) ,S(1293, 2295) ,S(1345, 2265) ,S(1285, 2326) ,S(1273, 2363) ,S(1367, 2305) ,S(1301, 2337) ,S(1362, 2284) ,
		S(1354, 2243) ,S(1355, 2238) ,S(1342, 2262) ,S(1345, 2277) ,S(1345, 2291) ,S(1339, 2315) ,S(1332, 2315) ,S(1330, 2339) ,
		S(1365, 2231) ,S(1360, 2265) ,S(1349, 2254) ,S(1324, 2322) ,S(1317, 2343) ,S(1349, 2331) ,S(1361, 2327) ,S(1366, 2296) ,
		S(1369, 2212) ,S(1374, 2251) ,S(1357, 2266) ,S(1343, 2325) ,S(1340, 2317) ,S(1358, 2299) ,S(1368, 2271) ,S(1375, 2260) ,
		S(1379, 2188) ,S(1386, 2210) ,S(1373, 2247) ,S(1368, 2240) ,S(1367, 2229) ,S(1369, 2254) ,S(1385, 2214) ,S(1380, 2194) ,
		S(1383, 2173) ,S(1386, 2178) ,S(1393, 2162) ,S(1386, 2198) ,S(1388, 2183) ,S(1406, 2122) ,S(1393, 2134) ,S(1357, 2180) ,
		S(1385, 2163) ,S(1385, 2166) ,S(1392, 2165) ,S(1399, 2189) ,S(1399, 2152) ,S(1375, 2144) ,S(1371, 2124) ,S(1367, 2135) ,
	},
	{
		S(1360, 2205) ,S(1364, 2245) ,S(1363, 2258) ,S(1344, 2294) ,S(1345, 2287) ,S(1373, 2246) ,S(1363, 2235) ,S(1359, 2229) ,
		S(1328, 2249) ,S(1274, 2306) ,S(1336, 2293) ,S(1265, 2349) ,S(1262, 2365) ,S(1350, 2243) ,S(1303, 2287) ,S(1372, 2219) ,
		S(1328, 2279) ,S(1314, 2280) ,S(1306, 2303) ,S(1344, 2279) ,S(1351, 2265) ,S(1349, 2257) ,S(1374, 2216) ,S(1376, 2235) ,
		S(1340, 2255) ,S(1346, 2298) ,S(1331, 2295) ,S(1328, 2315) ,S(1334, 2304) ,S(1357, 2236) ,S(1373, 2252) ,S(1382, 2229) ,
		S(1357, 2214) ,S(1354, 2263) ,S(1348, 2269) ,S(1345, 2300) ,S(1353, 2285) ,S(1362, 2253) ,S(1381, 2227) ,S(1371, 2210) ,
		S(1342, 2199) ,S(1369, 2190) ,S(1367, 2226) ,S(1368, 2210) ,S(1372, 2214) ,S(1376, 2223) ,S(1387, 2201) ,S(1378, 2172) ,
		S(1327, 2162) ,S(1366, 2124) ,S(1396, 2106) ,S(1391, 2161) ,S(1386, 2176) ,S(1395, 2136) ,S(1394, 2148) ,S(1387, 2145) ,
		S(1336, 2134) ,S(1362, 2111) ,S(1373, 2101) ,S(1388, 2122) ,S(1395, 2140) ,S(1395, 2124) ,S(1394, 2137) ,S(1388, 2123) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(98, -45)    ,S(68, -36)    ,S(79, -45)    ,S(-1, -169)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(143, 18)    ,S(169, 28)    ,S(83, 60)     ,S(30, -5)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(149, 48)    ,S(220, 52)    ,S(161, 58)    ,S(74, 35)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(80, 74)     ,S(111, 66)    ,S(85, 47)     ,S(-30, 39)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(28, 68)     ,S(40, 49)     ,S(30, 21)     ,S(-30, 3)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-16, 52)    ,S(-7, 33)     ,S(-21, 5)     ,S(2, 0)       ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-94, 30)    ,S(-74, 29)    ,S(-21, -11)   ,S(50, -21)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-78, -44)   ,S(-99, -3)    ,S(-9, -50)    ,S(45, -97)    ,
	},
	{
		S(5, -211)    ,S(65, -78)    ,S(99, -63)    ,S(122, -43)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-28, -46)   ,S(105, 35)    ,S(156, 19)    ,S(200, -9)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(5, 9)       ,S(163, 46)    ,S(186, 45)    ,S(161, 35)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-55, 16)    ,S(100, 32)    ,S(116, 55)    ,S(89, 58)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-71, -31)   ,S(30, 12)     ,S(74, 34)     ,S(33, 55)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-85, -22)   ,S(-22, -5)    ,S(3, 17)      ,S(-14, 36)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-7, -50)    ,S(-23, -23)   ,S(-33, 3)     ,S(-91, 13)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-12, -128)  ,S(-5, -67)    ,S(-45, -24)   ,S(-96, -42)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};


constexpr PScore materialValues[5] = {S(106, 210), S(469, 651), S(477, 689), S(640, 1205), S(1358, 2198), };
constexpr PScore knightMob[9] = {S(-41, -155), S(-22, -77), S(-10, -30), S(-4, -4), S(2, 6), S(7, 21), S(15, 21), S(24, 16), S(35, -8), };
constexpr PScore bishopMob[14] = {S(-57, -207), S(-30, -131), S(-15, -80), S(-7, -50), S(4, -28), S(8, -7), S(11, 7), S(11, 16), S(13, 27), S(19, 27), S(28, 23), S(54, 8), S(65, 15), S(88, -28), };
constexpr PScore rookMob[15] = {S(-26, -142), S(-32, -98), S(-24, -63), S(-22, -45), S(-22, -27), S(-23, -8), S(-20, 4), S(-16, 5), S(-12, 11), S(-4, 18), S(-4, 25), S(1, 30), S(4, 32), S(21, 15), S(83, -18), };
constexpr PScore queenMob[28] = {S(-146, -383), S(-105, -401), S(-69, -312), S(-50, -225), S(-47, -128), S(-44, -71), S(-42, -36), S(-38, -16), S(-34, 5), S(-30, 18), S(-27, 27), S(-22, 33), S(-17, 37), S(-14, 40), S(-12, 40), S(-10, 39), S(-10, 37), S(-14, 36), S(-10, 29), S(-6, 16), S(8, -11), S(16, -34), S(17, -54), S(26, -78), S(0, -85), S(5, -115), S(-38, -74), S(-29, -65), };
constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 912.32568359375;
constexpr double KSBMG = 1;
constexpr double KSCMG = -2.6669087409973145;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 378.2047424316406;
constexpr double KSBEG = 1;
constexpr double KSCEG = -0.6962922215461731;

constexpr PScore DAMPEN = S(static_cast<S16>(0.09197794646024704 * RESOLUTION), static_cast<S16>(0.844261884689331 * RESOLUTION));

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);