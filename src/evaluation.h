#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,
		S(235, 420)   ,S(204, 433)   ,S(164, 404)   ,S(202, 292)   ,S(231, 169)   ,S(187, 96)    ,S(-2, 164)    ,S(3, 201)     ,
		S(99, 403)    ,S(126, 392)   ,S(119, 349)   ,S(131, 252)   ,S(176, 163)   ,S(220, 147)   ,S(161, 178)   ,S(108, 216)   ,
		S(118, 291)   ,S(117, 267)   ,S(118, 246)   ,S(119, 215)   ,S(143, 189)   ,S(142, 187)   ,S(82, 219)    ,S(80, 217)    ,
		S(123, 235)   ,S(115, 230)   ,S(120, 216)   ,S(115, 209)   ,S(116, 199)   ,S(105, 204)   ,S(71, 215)    ,S(65, 218)    ,
		S(135, 206)   ,S(148, 201)   ,S(128, 214)   ,S(118, 217)   ,S(107, 212)   ,S(93, 216)    ,S(59, 223)    ,S(62, 223)    ,
		S(133, 205)   ,S(166, 197)   ,S(149, 212)   ,S(105, 227)   ,S(90, 226)    ,S(80, 226)    ,S(60, 232)    ,S(62, 229)    ,
		S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,
	},
	{
		S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,
		S(-26, 257)   ,S(-48, 218)   ,S(195, 136)   ,S(234, 159)   ,S(228, 214)   ,S(204, 285)   ,S(178, 345)   ,S(226, 339)   ,
		S(120, 235)   ,S(157, 224)   ,S(229, 189)   ,S(151, 178)   ,S(140, 195)   ,S(132, 257)   ,S(114, 303)   ,S(99, 322)    ,
		S(101, 224)   ,S(99, 227)    ,S(145, 200)   ,S(138, 194)   ,S(128, 179)   ,S(114, 209)   ,S(108, 227)   ,S(104, 252)   ,
		S(96, 208)    ,S(97, 217)    ,S(119, 209)   ,S(120, 201)   ,S(118, 190)   ,S(113, 192)   ,S(95, 210)    ,S(98, 224)    ,
		S(108, 196)   ,S(119, 204)   ,S(116, 226)   ,S(126, 218)   ,S(115, 198)   ,S(111, 200)   ,S(104, 202)   ,S(101, 213)   ,
		S(110, 181)   ,S(141, 207)   ,S(138, 234)   ,S(105, 235)   ,S(106, 212)   ,S(100, 207)   ,S(99, 206)    ,S(98, 221)    ,
		S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,S(110, 207)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(328, 601)   ,S(358, 675)   ,S(390, 705)   ,S(508, 672)   ,S(507, 665)   ,S(400, 695)   ,S(469, 659)   ,S(346, 569)   ,
		S(488, 650)   ,S(513, 671)   ,S(553, 663)   ,S(590, 691)   ,S(579, 682)   ,S(574, 654)   ,S(516, 667)   ,S(534, 639)   ,
		S(463, 677)   ,S(526, 677)   ,S(548, 713)   ,S(559, 714)   ,S(568, 702)   ,S(546, 702)   ,S(518, 676)   ,S(529, 658)   ,
		S(512, 692)   ,S(541, 689)   ,S(565, 714)   ,S(573, 728)   ,S(571, 730)   ,S(558, 714)   ,S(544, 704)   ,S(553, 686)   ,
		S(513, 697)   ,S(534, 695)   ,S(533, 718)   ,S(540, 724)   ,S(554, 722)   ,S(547, 708)   ,S(558, 694)   ,S(538, 695)   ,
		S(471, 661)   ,S(486, 678)   ,S(505, 694)   ,S(504, 717)   ,S(515, 715)   ,S(498, 691)   ,S(500, 671)   ,S(479, 661)   ,
		S(453, 676)   ,S(453, 689)   ,S(473, 665)   ,S(483, 686)   ,S(491, 687)   ,S(483, 671)   ,S(455, 693)   ,S(456, 685)   ,
		S(434, 629)   ,S(440, 674)   ,S(464, 668)   ,S(470, 689)   ,S(471, 680)   ,S(464, 662)   ,S(463, 665)   ,S(429, 664)   ,
	},
	{
		S(357, 585)   ,S(448, 715)   ,S(393, 760)   ,S(507, 728)   ,S(465, 733)   ,S(341, 762)   ,S(354, 718)   ,S(270, 649)   ,
		S(529, 700)   ,S(489, 719)   ,S(581, 699)   ,S(567, 743)   ,S(550, 744)   ,S(522, 707)   ,S(478, 711)   ,S(472, 689)   ,
		S(500, 723)   ,S(484, 752)   ,S(549, 756)   ,S(549, 754)   ,S(536, 757)   ,S(529, 750)   ,S(496, 714)   ,S(465, 697)   ,
		S(525, 751)   ,S(528, 769)   ,S(547, 769)   ,S(544, 789)   ,S(540, 779)   ,S(538, 747)   ,S(523, 716)   ,S(505, 713)   ,
		S(513, 757)   ,S(541, 752)   ,S(528, 763)   ,S(531, 775)   ,S(520, 765)   ,S(515, 746)   ,S(508, 724)   ,S(499, 715)   ,
		S(478, 708)   ,S(488, 724)   ,S(494, 734)   ,S(500, 753)   ,S(500, 750)   ,S(493, 721)   ,S(488, 695)   ,S(476, 670)   ,
		S(464, 722)   ,S(460, 724)   ,S(471, 704)   ,S(482, 723)   ,S(482, 722)   ,S(471, 698)   ,S(467, 708)   ,S(454, 701)   ,
		S(429, 688)   ,S(462, 689)   ,S(466, 707)   ,S(465, 716)   ,S(472, 716)   ,S(469, 682)   ,S(471, 674)   ,S(439, 662)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(482, 768)   ,S(437, 761)   ,S(444, 755)   ,S(406, 767)   ,S(396, 752)   ,S(399, 749)   ,S(540, 738)   ,S(480, 759)   ,
		S(482, 759)   ,S(495, 762)   ,S(529, 747)   ,S(484, 751)   ,S(495, 740)   ,S(548, 721)   ,S(504, 742)   ,S(469, 731)   ,
		S(537, 755)   ,S(555, 751)   ,S(545, 751)   ,S(539, 750)   ,S(561, 730)   ,S(557, 737)   ,S(538, 733)   ,S(542, 738)   ,
		S(533, 755)   ,S(550, 749)   ,S(541, 757)   ,S(549, 760)   ,S(574, 744)   ,S(548, 724)   ,S(559, 740)   ,S(536, 735)   ,
		S(529, 738)   ,S(539, 743)   ,S(541, 751)   ,S(560, 750)   ,S(550, 742)   ,S(545, 732)   ,S(547, 718)   ,S(535, 727)   ,
		S(532, 730)   ,S(560, 734)   ,S(558, 746)   ,S(543, 739)   ,S(543, 740)   ,S(530, 733)   ,S(533, 726)   ,S(522, 730)   ,
		S(550, 720)   ,S(575, 718)   ,S(550, 729)   ,S(534, 734)   ,S(522, 735)   ,S(528, 723)   ,S(527, 711)   ,S(534, 719)   ,
		S(547, 725)   ,S(509, 736)   ,S(522, 740)   ,S(515, 738)   ,S(510, 739)   ,S(512, 744)   ,S(523, 743)   ,S(538, 721)   ,
	},
	{
		S(466, 776)   ,S(492, 767)   ,S(380, 783)   ,S(407, 787)   ,S(388, 808)   ,S(385, 799)   ,S(449, 796)   ,S(465, 802)   ,
		S(482, 772)   ,S(470, 777)   ,S(510, 765)   ,S(483, 777)   ,S(474, 787)   ,S(508, 779)   ,S(490, 791)   ,S(461, 791)   ,
		S(510, 797)   ,S(510, 792)   ,S(516, 798)   ,S(537, 773)   ,S(520, 779)   ,S(532, 780)   ,S(519, 786)   ,S(523, 776)   ,
		S(505, 791)   ,S(529, 792)   ,S(527, 783)   ,S(533, 796)   ,S(538, 792)   ,S(518, 773)   ,S(531, 774)   ,S(506, 783)   ,
		S(517, 768)   ,S(522, 773)   ,S(518, 785)   ,S(534, 787)   ,S(523, 786)   ,S(523, 779)   ,S(525, 761)   ,S(513, 759)   ,
		S(520, 770)   ,S(522, 766)   ,S(522, 778)   ,S(520, 780)   ,S(523, 779)   ,S(525, 772)   ,S(540, 759)   ,S(522, 756)   ,
		S(524, 729)   ,S(536, 747)   ,S(523, 757)   ,S(511, 769)   ,S(513, 770)   ,S(530, 753)   ,S(535, 737)   ,S(539, 748)   ,
		S(524, 733)   ,S(500, 756)   ,S(506, 768)   ,S(499, 771)   ,S(506, 765)   ,S(512, 773)   ,S(530, 768)   ,S(544, 747)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(739, 1256)  ,S(711, 1277)  ,S(692, 1284)  ,S(659, 1289)  ,S(670, 1281)  ,S(724, 1254)  ,S(714, 1255)  ,S(694, 1271)  ,
		S(703, 1251)  ,S(699, 1260)  ,S(708, 1257)  ,S(698, 1264)  ,S(693, 1258)  ,S(702, 1242)  ,S(671, 1245)  ,S(677, 1239)  ,
		S(689, 1246)  ,S(747, 1222)  ,S(713, 1247)  ,S(730, 1221)  ,S(740, 1213)  ,S(707, 1229)  ,S(758, 1198)  ,S(689, 1228)  ,
		S(672, 1247)  ,S(689, 1242)  ,S(707, 1238)  ,S(711, 1234)  ,S(708, 1225)  ,S(697, 1224)  ,S(711, 1215)  ,S(691, 1220)  ,
		S(637, 1233)  ,S(667, 1239)  ,S(640, 1255)  ,S(639, 1247)  ,S(642, 1234)  ,S(651, 1232)  ,S(659, 1229)  ,S(641, 1220)  ,
		S(619, 1198)  ,S(662, 1207)  ,S(641, 1216)  ,S(644, 1212)  ,S(647, 1203)  ,S(650, 1202)  ,S(667, 1199)  ,S(642, 1188)  ,
		S(583, 1208)  ,S(638, 1196)  ,S(651, 1205)  ,S(647, 1204)  ,S(653, 1197)  ,S(660, 1189)  ,S(672, 1177)  ,S(623, 1192)  ,
		S(618, 1206)  ,S(636, 1213)  ,S(665, 1213)  ,S(662, 1200)  ,S(663, 1193)  ,S(673, 1194)  ,S(678, 1191)  ,S(654, 1192)  ,
	},
	{
		S(699, 1327)  ,S(700, 1329)  ,S(704, 1337)  ,S(641, 1342)  ,S(666, 1327)  ,S(646, 1343)  ,S(681, 1330)  ,S(687, 1324)  ,
		S(672, 1306)  ,S(681, 1311)  ,S(712, 1303)  ,S(670, 1330)  ,S(696, 1314)  ,S(676, 1318)  ,S(652, 1326)  ,S(662, 1314)  ,
		S(685, 1293)  ,S(762, 1263)  ,S(741, 1283)  ,S(731, 1273)  ,S(726, 1271)  ,S(687, 1295)  ,S(712, 1279)  ,S(656, 1301)  ,
		S(676, 1292)  ,S(703, 1287)  ,S(709, 1286)  ,S(700, 1286)  ,S(716, 1273)  ,S(686, 1285)  ,S(677, 1284)  ,S(656, 1289)  ,
		S(633, 1277)  ,S(669, 1293)  ,S(648, 1300)  ,S(640, 1291)  ,S(649, 1280)  ,S(634, 1290)  ,S(632, 1294)  ,S(631, 1274)  ,
		S(635, 1235)  ,S(676, 1261)  ,S(654, 1264)  ,S(647, 1259)  ,S(653, 1249)  ,S(633, 1259)  ,S(641, 1261)  ,S(626, 1249)  ,
		S(570, 1253)  ,S(669, 1237)  ,S(665, 1244)  ,S(651, 1249)  ,S(655, 1241)  ,S(643, 1249)  ,S(641, 1242)  ,S(607, 1252)  ,
		S(634, 1230)  ,S(655, 1255)  ,S(666, 1262)  ,S(662, 1248)  ,S(664, 1241)  ,S(654, 1252)  ,S(647, 1252)  ,S(649, 1247)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1385, 1338) ,S(1412, 1349) ,S(1387, 1380) ,S(1358, 1435) ,S(1361, 1433) ,S(1430, 1387) ,S(1390, 1385) ,S(1407, 1335) ,
		S(1382, 1362) ,S(1322, 1418) ,S(1364, 1399) ,S(1304, 1464) ,S(1303, 1491) ,S(1445, 1380) ,S(1360, 1386) ,S(1379, 1357) ,
		S(1378, 1381) ,S(1389, 1345) ,S(1374, 1372) ,S(1377, 1387) ,S(1393, 1412) ,S(1371, 1442) ,S(1420, 1351) ,S(1426, 1362) ,
		S(1392, 1355) ,S(1366, 1413) ,S(1363, 1391) ,S(1354, 1441) ,S(1368, 1429) ,S(1400, 1396) ,S(1426, 1390) ,S(1417, 1367) ,
		S(1379, 1351) ,S(1381, 1404) ,S(1364, 1423) ,S(1372, 1448) ,S(1369, 1424) ,S(1393, 1407) ,S(1411, 1371) ,S(1413, 1354) ,
		S(1368, 1348) ,S(1396, 1353) ,S(1395, 1380) ,S(1391, 1368) ,S(1392, 1358) ,S(1404, 1363) ,S(1418, 1335) ,S(1418, 1322) ,
		S(1355, 1315) ,S(1392, 1304) ,S(1431, 1254) ,S(1421, 1319) ,S(1410, 1314) ,S(1426, 1291) ,S(1430, 1284) ,S(1430, 1290) ,
		S(1377, 1283) ,S(1401, 1260) ,S(1404, 1259) ,S(1411, 1301) ,S(1418, 1301) ,S(1412, 1279) ,S(1401, 1319) ,S(1413, 1269) ,
	},
	{
		S(1399, 1476) ,S(1418, 1508) ,S(1401, 1525) ,S(1343, 1527) ,S(1360, 1497) ,S(1350, 1493) ,S(1364, 1465) ,S(1330, 1476) ,
		S(1399, 1498) ,S(1331, 1565) ,S(1430, 1506) ,S(1283, 1573) ,S(1290, 1530) ,S(1347, 1461) ,S(1291, 1501) ,S(1353, 1446) ,
		S(1360, 1552) ,S(1357, 1552) ,S(1352, 1545) ,S(1365, 1503) ,S(1354, 1474) ,S(1345, 1457) ,S(1356, 1436) ,S(1353, 1445) ,
		S(1391, 1515) ,S(1386, 1546) ,S(1370, 1546) ,S(1335, 1545) ,S(1336, 1521) ,S(1354, 1445) ,S(1361, 1466) ,S(1366, 1429) ,
		S(1395, 1482) ,S(1388, 1493) ,S(1375, 1513) ,S(1353, 1522) ,S(1351, 1529) ,S(1367, 1462) ,S(1380, 1446) ,S(1377, 1407) ,
		S(1400, 1413) ,S(1402, 1434) ,S(1386, 1472) ,S(1379, 1442) ,S(1377, 1447) ,S(1384, 1448) ,S(1396, 1411) ,S(1384, 1385) ,
		S(1380, 1399) ,S(1410, 1341) ,S(1419, 1340) ,S(1401, 1396) ,S(1399, 1407) ,S(1405, 1364) ,S(1396, 1381) ,S(1393, 1376) ,
		S(1390, 1338) ,S(1383, 1345) ,S(1389, 1357) ,S(1411, 1362) ,S(1411, 1401) ,S(1406, 1369) ,S(1398, 1372) ,S(1392, 1374) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-31, -195)  ,S(75, -94)    ,S(79, -75)    ,S(102, -55)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-18, -36)   ,S(92, 25)     ,S(141, 14)    ,S(148, -3)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(36, 4)      ,S(118, 47)    ,S(149, 50)    ,S(129, 44)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-30, 16)    ,S(79, 44)     ,S(94, 62)     ,S(72, 71)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-34, -21)   ,S(39, 29)     ,S(58, 53)     ,S(11, 73)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-44, -25)   ,S(-25, 12)    ,S(-7, 34)     ,S(-26, 54)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(19, -63)    ,S(-29, -14)   ,S(-59, 19)    ,S(-98, 26)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(25, -158)   ,S(2, -75)     ,S(-49, -35)   ,S(-67, -52)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(3, -189)    ,S(23, 0)      ,S(69, -37)    ,S(92, -46)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-48, -32)   ,S(40, 70)     ,S(138, 10)    ,S(158, 2)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(17, 16)     ,S(187, 52)    ,S(253, 36)    ,S(148, 39)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-52, 19)    ,S(98, 46)     ,S(125, 68)    ,S(83, 78)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-62, -11)   ,S(41, 29)     ,S(48, 62)     ,S(32, 83)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-36, -14)   ,S(-15, 18)    ,S(1, 47)      ,S(-11, 67)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(27, -55)    ,S(-17, -2)    ,S(-57, 33)    ,S(-82, 37)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(32, -144)   ,S(-4, -51)    ,S(-51, -17)   ,S(-61, -47)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(110, 207), S(467, 661), S(489, 707), S(647, 1212), S(1375, 1386), };
constexpr PScore knightMob[9] = {S(-46, -164), S(-27, -88), S(-14, -38), S(-6, -9), S(1, 7), S(7, 24), S(15, 26), S(27, 20), S(41, -8), };
constexpr PScore bishopMob[14] = {S(-62, -201), S(-34, -125), S(-18, -77), S(-9, -43), S(2, -22), S(8, 1), S(12, 16), S(12, 25), S(13, 35), S(21, 36), S(29, 32), S(54, 16), S(58, 30), S(82, -21), };
constexpr PScore rookMob[15] = {S(-27, -147), S(-35, -104), S(-28, -66), S(-26, -43), S(-24, -23), S(-26, -4), S(-24, 7), S(-17, 8), S(-12, 15), S(-4, 20), S(-5, 28), S(2, 33), S(3, 37), S(21, 18), S(83, -18), };
constexpr PScore queenMob[28] = {S(-149, -403), S(-107, -424), S(-67, -338), S(-49, -240), S(-46, -144), S(-43, -85), S(-39, -49), S(-34, -25), S(-30, -3), S(-24, 10), S(-20, 22), S(-13, 26), S(-9, 30), S(-7, 33), S(-3, 33), S(-2, 33), S(-2, 33), S(-4, 35), S(-1, 29), S(6, 15), S(17, -7), S(26, -28), S(26, -42), S(33, -64), S(5, -68), S(22, -102), S(-14, -72), S(-24, -33), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 824.900390625;
constexpr double KSBMG = 1;
constexpr double KSCMG = -2.907819986343384;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 1139.0084228515625;
constexpr double KSBEG = 1;
constexpr double KSCEG = 2.2997310161590576;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);