#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,
		S(138, 252)   ,S(104, 264)   ,S(147, 227)   ,S(167, 201)   ,S(168, 213)   ,S(153, 241)   ,S(1, 310)     ,S(14, 304)    ,
		S(79, 292)    ,S(105, 278)   ,S(132, 243)   ,S(136, 207)   ,S(153, 221)   ,S(201, 247)   ,S(148, 281)   ,S(112, 286)   ,
		S(78, 249)    ,S(87, 235)    ,S(99, 218)    ,S(117, 192)   ,S(127, 207)   ,S(134, 219)   ,S(96, 245)    ,S(95, 243)    ,
		S(73, 226)    ,S(73, 220)    ,S(96, 203)    ,S(106, 194)   ,S(110, 201)   ,S(113, 209)   ,S(97, 216)    ,S(97, 214)    ,
		S(75, 216)    ,S(78, 211)    ,S(92, 209)    ,S(103, 206)   ,S(114, 221)   ,S(106, 224)   ,S(118, 202)   ,S(109, 199)   ,
		S(73, 227)    ,S(76, 216)    ,S(81, 218)    ,S(91, 221)    ,S(90, 242)    ,S(127, 238)   ,S(137, 213)   ,S(108, 190)   ,
		S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,
	},
	{
		S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,
		S(132, 304)   ,S(124, 320)   ,S(178, 297)   ,S(184, 243)   ,S(169, 233)   ,S(171, 209)   ,S(86, 260)    ,S(75, 251)    ,
		S(119, 310)   ,S(170, 307)   ,S(169, 283)   ,S(154, 246)   ,S(162, 223)   ,S(149, 245)   ,S(129, 265)   ,S(79, 277)    ,
		S(125, 251)   ,S(117, 250)   ,S(124, 230)   ,S(130, 217)   ,S(128, 211)   ,S(110, 222)   ,S(74, 244)    ,S(73, 246)    ,
		S(120, 222)   ,S(109, 228)   ,S(121, 212)   ,S(119, 210)   ,S(108, 201)   ,S(93, 212)    ,S(67, 221)    ,S(60, 228)    ,
		S(122, 212)   ,S(132, 206)   ,S(118, 223)   ,S(110, 221)   ,S(98, 214)    ,S(89, 211)    ,S(72, 214)    ,S(60, 219)    ,
		S(123, 210)   ,S(146, 210)   ,S(135, 232)   ,S(100, 241)   ,S(81, 230)    ,S(77, 226)    ,S(65, 223)    ,S(59, 229)    ,
		S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,S(99, 209)    ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(237, 594)   ,S(328, 672)   ,S(310, 720)   ,S(423, 688)   ,S(473, 681)   ,S(336, 715)   ,S(336, 678)   ,S(300, 567)   ,
		S(459, 643)   ,S(458, 668)   ,S(506, 668)   ,S(531, 706)   ,S(523, 706)   ,S(550, 656)   ,S(452, 670)   ,S(479, 640)   ,
		S(440, 657)   ,S(470, 682)   ,S(488, 724)   ,S(497, 726)   ,S(529, 718)   ,S(510, 724)   ,S(467, 697)   ,S(454, 671)   ,
		S(471, 680)   ,S(477, 693)   ,S(487, 726)   ,S(483, 752)   ,S(485, 762)   ,S(493, 740)   ,S(473, 732)   ,S(474, 707)   ,
		S(459, 686)   ,S(466, 698)   ,S(465, 727)   ,S(467, 736)   ,S(474, 745)   ,S(474, 733)   ,S(483, 711)   ,S(464, 709)   ,
		S(437, 638)   ,S(448, 674)   ,S(444, 700)   ,S(456, 729)   ,S(453, 726)   ,S(442, 700)   ,S(444, 689)   ,S(435, 666)   ,
		S(418, 661)   ,S(425, 675)   ,S(431, 670)   ,S(439, 694)   ,S(434, 696)   ,S(428, 671)   ,S(417, 683)   ,S(422, 688)   ,
		S(406, 615)   ,S(431, 634)   ,S(425, 649)   ,S(427, 684)   ,S(423, 687)   ,S(419, 680)   ,S(419, 660)   ,S(383, 644)   ,
	},
	{
		S(266, 555)   ,S(331, 658)   ,S(336, 705)   ,S(444, 675)   ,S(440, 675)   ,S(295, 713)   ,S(311, 678)   ,S(269, 562)   ,
		S(457, 629)   ,S(448, 668)   ,S(510, 666)   ,S(564, 685)   ,S(526, 691)   ,S(527, 662)   ,S(454, 664)   ,S(463, 635)   ,
		S(429, 667)   ,S(491, 679)   ,S(490, 722)   ,S(509, 723)   ,S(525, 712)   ,S(502, 715)   ,S(492, 668)   ,S(447, 657)   ,
		S(461, 685)   ,S(481, 703)   ,S(488, 731)   ,S(497, 740)   ,S(495, 743)   ,S(491, 723)   ,S(476, 708)   ,S(470, 679)   ,
		S(464, 691)   ,S(468, 702)   ,S(475, 722)   ,S(475, 735)   ,S(479, 735)   ,S(470, 724)   ,S(466, 701)   ,S(466, 679)   ,
		S(412, 668)   ,S(437, 682)   ,S(448, 699)   ,S(448, 721)   ,S(451, 721)   ,S(440, 698)   ,S(439, 666)   ,S(421, 641)   ,
		S(408, 692)   ,S(397, 694)   ,S(420, 675)   ,S(428, 689)   ,S(434, 691)   ,S(423, 673)   ,S(406, 680)   ,S(408, 658)   ,
		S(372, 663)   ,S(399, 663)   ,S(409, 674)   ,S(403, 686)   ,S(421, 674)   ,S(424, 642)   ,S(418, 640)   ,S(394, 609)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(412, 769)   ,S(392, 767)   ,S(336, 766)   ,S(325, 777)   ,S(347, 765)   ,S(314, 765)   ,S(415, 750)   ,S(405, 756)   ,
		S(411, 758)   ,S(470, 750)   ,S(467, 746)   ,S(434, 754)   ,S(462, 746)   ,S(457, 752)   ,S(425, 762)   ,S(429, 743)   ,
		S(465, 749)   ,S(471, 755)   ,S(496, 751)   ,S(477, 746)   ,S(490, 747)   ,S(483, 772)   ,S(470, 758)   ,S(460, 762)   ,
		S(454, 749)   ,S(489, 745)   ,S(473, 747)   ,S(495, 768)   ,S(497, 772)   ,S(492, 751)   ,S(496, 754)   ,S(448, 759)   ,
		S(463, 732)   ,S(469, 739)   ,S(464, 765)   ,S(482, 762)   ,S(490, 764)   ,S(464, 756)   ,S(471, 742)   ,S(471, 729)   ,
		S(466, 731)   ,S(480, 741)   ,S(469, 752)   ,S(472, 755)   ,S(467, 755)   ,S(470, 752)   ,S(472, 736)   ,S(477, 740)   ,
		S(478, 724)   ,S(474, 711)   ,S(472, 727)   ,S(450, 744)   ,S(451, 747)   ,S(469, 728)   ,S(483, 727)   ,S(472, 708)   ,
		S(485, 717)   ,S(471, 733)   ,S(451, 738)   ,S(444, 733)   ,S(439, 741)   ,S(445, 747)   ,S(447, 731)   ,S(470, 715)   ,
	},
	{
		S(380, 760)   ,S(345, 762)   ,S(353, 759)   ,S(339, 764)   ,S(337, 763)   ,S(312, 760)   ,S(425, 749)   ,S(388, 770)   ,
		S(388, 743)   ,S(432, 761)   ,S(451, 752)   ,S(429, 748)   ,S(448, 745)   ,S(474, 743)   ,S(470, 752)   ,S(432, 747)   ,
		S(457, 757)   ,S(487, 755)   ,S(487, 755)   ,S(494, 746)   ,S(492, 739)   ,S(497, 751)   ,S(486, 747)   ,S(473, 750)   ,
		S(455, 740)   ,S(496, 744)   ,S(482, 753)   ,S(501, 761)   ,S(511, 758)   ,S(482, 742)   ,S(491, 746)   ,S(467, 750)   ,
		S(471, 728)   ,S(459, 742)   ,S(476, 752)   ,S(491, 758)   ,S(487, 758)   ,S(473, 749)   ,S(473, 731)   ,S(456, 732)   ,
		S(468, 733)   ,S(478, 738)   ,S(479, 751)   ,S(481, 744)   ,S(473, 748)   ,S(473, 742)   ,S(473, 730)   ,S(457, 731)   ,
		S(466, 731)   ,S(491, 715)   ,S(473, 730)   ,S(456, 739)   ,S(453, 739)   ,S(457, 727)   ,S(460, 715)   ,S(470, 705)   ,
		S(479, 717)   ,S(448, 729)   ,S(446, 738)   ,S(441, 729)   ,S(442, 730)   ,S(448, 733)   ,S(461, 732)   ,S(475, 715)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(627, 1335)  ,S(620, 1340)  ,S(593, 1349)  ,S(600, 1345)  ,S(597, 1349)  ,S(653, 1341)  ,S(640, 1345)  ,S(649, 1335)  ,
		S(604, 1331)  ,S(591, 1343)  ,S(616, 1336)  ,S(633, 1337)  ,S(617, 1344)  ,S(655, 1318)  ,S(615, 1330)  ,S(621, 1318)  ,
		S(594, 1317)  ,S(650, 1297)  ,S(627, 1312)  ,S(662, 1290)  ,S(675, 1287)  ,S(679, 1300)  ,S(700, 1279)  ,S(631, 1299)  ,
		S(596, 1305)  ,S(618, 1301)  ,S(629, 1301)  ,S(659, 1288)  ,S(647, 1295)  ,S(657, 1293)  ,S(645, 1297)  ,S(626, 1294)  ,
		S(574, 1287)  ,S(575, 1305)  ,S(580, 1299)  ,S(596, 1289)  ,S(586, 1296)  ,S(590, 1300)  ,S(613, 1295)  ,S(591, 1276)  ,
		S(572, 1264)  ,S(582, 1279)  ,S(573, 1274)  ,S(592, 1264)  ,S(588, 1268)  ,S(591, 1271)  ,S(620, 1264)  ,S(588, 1242)  ,
		S(555, 1259)  ,S(585, 1257)  ,S(583, 1262)  ,S(593, 1254)  ,S(590, 1255)  ,S(605, 1248)  ,S(614, 1241)  ,S(540, 1258)  ,
		S(593, 1256)  ,S(593, 1262)  ,S(596, 1263)  ,S(604, 1253)  ,S(604, 1255)  ,S(607, 1272)  ,S(602, 1261)  ,S(592, 1235)  ,
	},
	{
		S(644, 1319)  ,S(606, 1341)  ,S(630, 1338)  ,S(612, 1332)  ,S(617, 1331)  ,S(618, 1329)  ,S(646, 1319)  ,S(648, 1321)  ,
		S(589, 1324)  ,S(612, 1325)  ,S(643, 1318)  ,S(630, 1324)  ,S(629, 1322)  ,S(640, 1309)  ,S(604, 1323)  ,S(616, 1317)  ,
		S(599, 1309)  ,S(660, 1284)  ,S(647, 1302)  ,S(667, 1280)  ,S(679, 1273)  ,S(647, 1292)  ,S(677, 1277)  ,S(619, 1301)  ,
		S(591, 1295)  ,S(632, 1290)  ,S(649, 1287)  ,S(651, 1282)  ,S(649, 1283)  ,S(635, 1289)  ,S(634, 1287)  ,S(617, 1294)  ,
		S(555, 1271)  ,S(592, 1282)  ,S(582, 1294)  ,S(583, 1288)  ,S(585, 1284)  ,S(580, 1292)  ,S(579, 1295)  ,S(578, 1279)  ,
		S(543, 1247)  ,S(588, 1261)  ,S(590, 1260)  ,S(582, 1258)  ,S(582, 1260)  ,S(577, 1266)  ,S(596, 1264)  ,S(575, 1251)  ,
		S(452, 1272)  ,S(567, 1243)  ,S(587, 1248)  ,S(584, 1251)  ,S(587, 1247)  ,S(589, 1244)  ,S(591, 1240)  ,S(546, 1247)  ,
		S(545, 1254)  ,S(571, 1265)  ,S(601, 1256)  ,S(602, 1249)  ,S(600, 1245)  ,S(597, 1249)  ,S(603, 1246)  ,S(591, 1240)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1223, 1511) ,S(1255, 1502) ,S(1236, 1539) ,S(1238, 1547) ,S(1228, 1575) ,S(1256, 1579) ,S(1262, 1538) ,S(1250, 1516) ,
		S(1254, 1486) ,S(1197, 1536) ,S(1248, 1509) ,S(1189, 1577) ,S(1194, 1614) ,S(1273, 1588) ,S(1192, 1580) ,S(1272, 1519) ,
		S(1255, 1486) ,S(1259, 1483) ,S(1248, 1507) ,S(1258, 1521) ,S(1267, 1557) ,S(1271, 1574) ,S(1270, 1567) ,S(1251, 1580) ,
		S(1267, 1472) ,S(1268, 1510) ,S(1259, 1500) ,S(1243, 1571) ,S(1242, 1592) ,S(1279, 1583) ,S(1290, 1571) ,S(1287, 1541) ,
		S(1272, 1446) ,S(1271, 1494) ,S(1259, 1510) ,S(1254, 1562) ,S(1255, 1556) ,S(1271, 1541) ,S(1283, 1514) ,S(1289, 1495) ,
		S(1278, 1429) ,S(1284, 1459) ,S(1274, 1493) ,S(1272, 1486) ,S(1273, 1475) ,S(1277, 1501) ,S(1292, 1464) ,S(1289, 1435) ,
		S(1282, 1419) ,S(1285, 1423) ,S(1292, 1412) ,S(1287, 1446) ,S(1289, 1434) ,S(1307, 1375) ,S(1294, 1384) ,S(1260, 1430) ,
		S(1284, 1409) ,S(1285, 1411) ,S(1291, 1412) ,S(1297, 1440) ,S(1299, 1397) ,S(1272, 1394) ,S(1270, 1368) ,S(1267, 1391) ,
	},
	{
		S(1258, 1453) ,S(1261, 1479) ,S(1253, 1513) ,S(1248, 1541) ,S(1233, 1538) ,S(1245, 1516) ,S(1240, 1496) ,S(1242, 1481) ,
		S(1250, 1483) ,S(1184, 1545) ,S(1252, 1542) ,S(1181, 1599) ,S(1166, 1612) ,S(1244, 1507) ,S(1193, 1540) ,S(1262, 1471) ,
		S(1253, 1515) ,S(1257, 1511) ,S(1245, 1539) ,S(1267, 1533) ,S(1266, 1514) ,S(1251, 1513) ,S(1277, 1469) ,S(1277, 1482) ,
		S(1268, 1494) ,S(1280, 1538) ,S(1265, 1543) ,S(1257, 1569) ,S(1251, 1557) ,S(1266, 1496) ,S(1281, 1501) ,S(1282, 1480) ,
		S(1271, 1456) ,S(1272, 1510) ,S(1263, 1519) ,S(1259, 1546) ,S(1262, 1530) ,S(1262, 1498) ,S(1276, 1471) ,S(1273, 1446) ,
		S(1249, 1452) ,S(1276, 1451) ,S(1273, 1489) ,S(1271, 1465) ,S(1272, 1467) ,S(1275, 1469) ,S(1284, 1442) ,S(1277, 1411) ,
		S(1229, 1424) ,S(1265, 1392) ,S(1296, 1371) ,S(1289, 1419) ,S(1284, 1433) ,S(1292, 1387) ,S(1292, 1398) ,S(1286, 1389) ,
		S(1235, 1393) ,S(1261, 1363) ,S(1268, 1359) ,S(1285, 1380) ,S(1291, 1400) ,S(1294, 1377) ,S(1293, 1389) ,S(1285, 1375) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(66, -42)    ,S(42, -30)    ,S(24, -24)    ,S(-30, -186)  ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(106, 4)     ,S(131, 23)    ,S(54, 60)     ,S(-13, -32)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(140, 19)    ,S(201, 31)    ,S(161, 42)    ,S(41, -1)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(89, 41)     ,S(139, 36)    ,S(128, 18)    ,S(-43, 4)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(65, 44)     ,S(90, 27)     ,S(99, -4)     ,S(-51, -29)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(24, 38)     ,S(37, 22)     ,S(26, -1)     ,S(-42, -18)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-67, 37)    ,S(-53, 38)    ,S(-8, 7)      ,S(-3, -29)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-74, -14)   ,S(-98, 23)    ,S(-10, -20)   ,S(-1, -104)   ,
	},
	{
		S(-20, -180)  ,S(50, -68)    ,S(61, -48)    ,S(95, -34)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-33, -41)   ,S(80, 34)     ,S(138, 9)     ,S(166, -16)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(28, -1)     ,S(181, 27)    ,S(185, 24)    ,S(157, 10)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-17, -1)    ,S(142, 1)     ,S(147, 23)    ,S(97, 30)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-33, -45)   ,S(101, -18)   ,S(127, 8)     ,S(62, 36)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-62, -20)   ,S(29, -13)    ,S(57, 4)      ,S(25, 28)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-9, -20)    ,S(-10, -3)    ,S(-14, 14)    ,S(-64, 26)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-24, -84)   ,S(-10, -32)   ,S(-48, 7)     ,S(-91, -7)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(99, 209), S(420, 642), S(433, 689), S(585, 1235), S(1258, 1447), };
constexpr PScore knightMob[9] = {S(-25, -130), S(-6, -53), S(5, -6), S(12, 19), S(17, 30), S(22, 43), S(30, 42), S(40, 35), S(52, 10), };
constexpr PScore bishopMob[14] = {S(-48, -182), S(-18, -106), S(0, -52), S(7, -25), S(17, -4), S(23, 15), S(25, 26), S(24, 34), S(24, 44), S(29, 44), S(37, 36), S(60, 22), S(67, 26), S(89, -19), };
constexpr PScore rookMob[15] = {S(-21, -143), S(-26, -94), S(-18, -62), S(-17, -43), S(-15, -25), S(-17, -7), S(-15, 2), S(-10, 4), S(-6, 9), S(3, 14), S(2, 19), S(7, 25), S(10, 27), S(28, 5), S(94, -33), };
constexpr PScore queenMob[28] = {S(-128, -450), S(-86, -475), S(-47, -384), S(-30, -291), S(-27, -196), S(-24, -137), S(-20, -102), S(-17, -84), S(-15, -65), S(-10, -53), S(-6, -47), S(-2, -43), S(3, -40), S(7, -38), S(9, -39), S(10, -41), S(10, -43), S(6, -42), S(10, -47), S(13, -59), S(27, -83), S(35, -105), S(32, -115), S(44, -142), S(22, -148), S(32, -180), S(5, -149), S(-29, -96), };
constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 879.7726440429688;
constexpr double KSBMG = 1; //1.5752705335617065;
constexpr double KSCMG = -3.107192039489746;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 1126.2562255859375;
constexpr double KSBEG = 1; // 1.7594690322875977;
constexpr double KSCEG = 2.2686030864715576;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);