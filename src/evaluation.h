#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,
		S(238, 415)   ,S(213, 424)   ,S(161, 398)   ,S(199, 282)   ,S(218, 161)   ,S(177, 84)    ,S(2, 151)     ,S(-5, 196)    ,
		S(104, 392)   ,S(131, 381)   ,S(120, 340)   ,S(130, 240)   ,S(171, 151)   ,S(217, 130)   ,S(165, 161)   ,S(110, 203)   ,
		S(118, 284)   ,S(118, 262)   ,S(114, 240)   ,S(115, 206)   ,S(142, 178)   ,S(141, 174)   ,S(88, 203)    ,S(80, 206)    ,
		S(122, 230)   ,S(117, 227)   ,S(117, 212)   ,S(114, 202)   ,S(116, 190)   ,S(107, 196)   ,S(75, 205)    ,S(64, 210)    ,
		S(134, 202)   ,S(153, 197)   ,S(125, 211)   ,S(117, 210)   ,S(105, 205)   ,S(92, 210)    ,S(64, 214)    ,S(63, 215)    ,
		S(134, 197)   ,S(171, 191)   ,S(148, 207)   ,S(103, 223)   ,S(90, 221)    ,S(78, 221)    ,S(60, 225)    ,S(62, 222)    ,
		S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,
	},
	{
		S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,
		S(-35, 254)   ,S(-48, 211)   ,S(180, 131)   ,S(223, 152)   ,S(226, 203)   ,S(203, 280)   ,S(181, 338)   ,S(229, 335)   ,
		S(123, 226)   ,S(158, 216)   ,S(222, 182)   ,S(148, 167)   ,S(139, 183)   ,S(131, 247)   ,S(115, 293)   ,S(101, 314)   ,
		S(99, 218)    ,S(104, 217)   ,S(139, 192)   ,S(134, 184)   ,S(123, 169)   ,S(110, 201)   ,S(107, 221)   ,S(103, 246)   ,
		S(94, 204)    ,S(100, 211)   ,S(118, 203)   ,S(117, 194)   ,S(115, 181)   ,S(109, 188)   ,S(97, 206)    ,S(96, 218)    ,
		S(107, 194)   ,S(123, 201)   ,S(112, 222)   ,S(125, 213)   ,S(111, 192)   ,S(107, 196)   ,S(104, 197)   ,S(99, 207)    ,
		S(109, 174)   ,S(144, 202)   ,S(137, 232)   ,S(102, 232)   ,S(102, 206)   ,S(96, 202)    ,S(99, 199)    ,S(97, 213)    ,
		S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,S(109, 200)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(324, 606)   ,S(363, 669)   ,S(387, 707)   ,S(509, 671)   ,S(504, 667)   ,S(392, 698)   ,S(472, 654)   ,S(335, 567)   ,
		S(488, 648)   ,S(506, 673)   ,S(545, 666)   ,S(581, 694)   ,S(566, 688)   ,S(556, 662)   ,S(502, 669)   ,S(525, 639)   ,
		S(461, 676)   ,S(523, 679)   ,S(547, 712)   ,S(552, 713)   ,S(564, 703)   ,S(545, 706)   ,S(522, 676)   ,S(526, 657)   ,
		S(508, 691)   ,S(537, 691)   ,S(559, 713)   ,S(569, 729)   ,S(564, 734)   ,S(551, 720)   ,S(536, 706)   ,S(542, 689)   ,
		S(509, 700)   ,S(531, 699)   ,S(531, 720)   ,S(536, 728)   ,S(548, 727)   ,S(536, 715)   ,S(548, 700)   ,S(528, 700)   ,
		S(468, 662)   ,S(484, 681)   ,S(501, 693)   ,S(502, 718)   ,S(514, 718)   ,S(493, 692)   ,S(497, 672)   ,S(476, 661)   ,
		S(451, 677)   ,S(451, 689)   ,S(470, 671)   ,S(480, 689)   ,S(488, 691)   ,S(480, 674)   ,S(452, 692)   ,S(453, 686)   ,
		S(430, 629)   ,S(437, 676)   ,S(459, 673)   ,S(466, 693)   ,S(465, 685)   ,S(459, 668)   ,S(459, 669)   ,S(426, 666)   ,
	},
	{
		S(345, 586)   ,S(448, 713)   ,S(379, 762)   ,S(503, 730)   ,S(460, 735)   ,S(343, 762)   ,S(355, 718)   ,S(269, 650)   ,
		S(516, 702)   ,S(473, 721)   ,S(565, 707)   ,S(550, 749)   ,S(542, 747)   ,S(514, 711)   ,S(474, 714)   ,S(470, 690)   ,
		S(494, 723)   ,S(490, 750)   ,S(549, 761)   ,S(546, 751)   ,S(531, 755)   ,S(527, 748)   ,S(494, 717)   ,S(463, 697)   ,
		S(516, 749)   ,S(521, 766)   ,S(542, 772)   ,S(539, 789)   ,S(540, 778)   ,S(533, 748)   ,S(520, 721)   ,S(500, 717)   ,
		S(504, 756)   ,S(530, 754)   ,S(518, 763)   ,S(529, 779)   ,S(517, 768)   ,S(517, 752)   ,S(508, 731)   ,S(497, 722)   ,
		S(475, 704)   ,S(487, 719)   ,S(489, 725)   ,S(500, 753)   ,S(500, 753)   ,S(491, 728)   ,S(486, 703)   ,S(473, 674)   ,
		S(463, 723)   ,S(460, 720)   ,S(468, 704)   ,S(478, 727)   ,S(479, 726)   ,S(467, 704)   ,S(463, 711)   ,S(450, 706)   ,
		S(426, 688)   ,S(461, 691)   ,S(462, 714)   ,S(461, 720)   ,S(468, 719)   ,S(465, 688)   ,S(467, 675)   ,S(434, 666)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(463, 773)   ,S(419, 766)   ,S(425, 757)   ,S(395, 765)   ,S(382, 752)   ,S(385, 751)   ,S(527, 745)   ,S(459, 767)   ,
		S(464, 762)   ,S(476, 762)   ,S(507, 749)   ,S(458, 749)   ,S(470, 739)   ,S(523, 722)   ,S(485, 746)   ,S(438, 741)   ,
		S(517, 758)   ,S(535, 750)   ,S(525, 748)   ,S(518, 745)   ,S(539, 730)   ,S(543, 736)   ,S(522, 733)   ,S(527, 744)   ,
		S(514, 757)   ,S(531, 748)   ,S(522, 754)   ,S(526, 755)   ,S(547, 741)   ,S(514, 727)   ,S(529, 743)   ,S(507, 743)   ,
		S(510, 743)   ,S(522, 744)   ,S(521, 750)   ,S(540, 743)   ,S(527, 739)   ,S(522, 733)   ,S(523, 721)   ,S(507, 736)   ,
		S(515, 733)   ,S(542, 735)   ,S(538, 738)   ,S(524, 734)   ,S(523, 736)   ,S(512, 726)   ,S(515, 725)   ,S(497, 735)   ,
		S(527, 721)   ,S(554, 717)   ,S(528, 725)   ,S(512, 731)   ,S(501, 733)   ,S(507, 721)   ,S(506, 712)   ,S(510, 724)   ,
		S(526, 722)   ,S(488, 734)   ,S(499, 741)   ,S(494, 733)   ,S(490, 736)   ,S(490, 745)   ,S(501, 744)   ,S(516, 723)   ,
	},
	{
		S(443, 782)   ,S(482, 771)   ,S(364, 782)   ,S(395, 789)   ,S(363, 810)   ,S(365, 801)   ,S(428, 800)   ,S(446, 808)   ,
		S(444, 782)   ,S(452, 779)   ,S(480, 768)   ,S(458, 774)   ,S(447, 785)   ,S(485, 778)   ,S(470, 792)   ,S(442, 794)   ,
		S(496, 797)   ,S(494, 791)   ,S(502, 794)   ,S(513, 771)   ,S(499, 769)   ,S(513, 773)   ,S(499, 783)   ,S(505, 780)   ,
		S(476, 796)   ,S(500, 788)   ,S(494, 780)   ,S(509, 790)   ,S(516, 784)   ,S(500, 770)   ,S(513, 775)   ,S(485, 786)   ,
		S(490, 770)   ,S(499, 770)   ,S(498, 777)   ,S(515, 779)   ,S(504, 778)   ,S(504, 780)   ,S(507, 762)   ,S(493, 767)   ,
		S(500, 766)   ,S(507, 757)   ,S(503, 764)   ,S(500, 772)   ,S(506, 771)   ,S(504, 768)   ,S(520, 762)   ,S(500, 763)   ,
		S(502, 725)   ,S(519, 742)   ,S(503, 752)   ,S(492, 766)   ,S(490, 763)   ,S(507, 749)   ,S(512, 736)   ,S(514, 754)   ,
		S(506, 730)   ,S(482, 752)   ,S(486, 773)   ,S(479, 764)   ,S(486, 759)   ,S(488, 766)   ,S(507, 762)   ,S(522, 746)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(730, 1259)  ,S(702, 1278)  ,S(679, 1286)  ,S(649, 1290)  ,S(661, 1277)  ,S(713, 1255)  ,S(705, 1254)  ,S(682, 1272)  ,
		S(690, 1258)  ,S(690, 1264)  ,S(696, 1261)  ,S(683, 1268)  ,S(682, 1256)  ,S(691, 1241)  ,S(660, 1245)  ,S(665, 1241)  ,
		S(672, 1251)  ,S(731, 1227)  ,S(695, 1250)  ,S(709, 1226)  ,S(720, 1213)  ,S(695, 1225)  ,S(740, 1200)  ,S(670, 1228)  ,
		S(660, 1247)  ,S(677, 1242)  ,S(695, 1235)  ,S(698, 1231)  ,S(697, 1218)  ,S(685, 1217)  ,S(697, 1210)  ,S(676, 1215)  ,
		S(626, 1233)  ,S(653, 1240)  ,S(629, 1253)  ,S(631, 1246)  ,S(635, 1229)  ,S(641, 1227)  ,S(646, 1226)  ,S(629, 1219)  ,
		S(603, 1208)  ,S(647, 1215)  ,S(623, 1224)  ,S(629, 1220)  ,S(635, 1206)  ,S(635, 1206)  ,S(652, 1204)  ,S(628, 1193)  ,
		S(564, 1216)  ,S(618, 1205)  ,S(635, 1210)  ,S(629, 1212)  ,S(637, 1200)  ,S(644, 1192)  ,S(654, 1184)  ,S(605, 1196)  ,
		S(601, 1213)  ,S(622, 1222)  ,S(649, 1220)  ,S(646, 1209)  ,S(647, 1197)  ,S(658, 1200)  ,S(662, 1196)  ,S(639, 1199)  ,
	},
	{
		S(684, 1329)  ,S(681, 1331)  ,S(688, 1336)  ,S(627, 1340)  ,S(654, 1330)  ,S(635, 1346)  ,S(670, 1334)  ,S(676, 1329)  ,
		S(658, 1310)  ,S(662, 1315)  ,S(700, 1301)  ,S(656, 1328)  ,S(684, 1319)  ,S(663, 1324)  ,S(640, 1333)  ,S(649, 1323)  ,
		S(666, 1293)  ,S(741, 1266)  ,S(724, 1281)  ,S(710, 1268)  ,S(707, 1273)  ,S(671, 1298)  ,S(697, 1283)  ,S(639, 1305)  ,
		S(661, 1285)  ,S(688, 1280)  ,S(694, 1279)  ,S(686, 1278)  ,S(704, 1272)  ,S(675, 1284)  ,S(665, 1285)  ,S(642, 1291)  ,
		S(620, 1273)  ,S(655, 1289)  ,S(637, 1293)  ,S(630, 1285)  ,S(641, 1280)  ,S(624, 1293)  ,S(621, 1296)  ,S(619, 1277)  ,
		S(620, 1237)  ,S(658, 1264)  ,S(637, 1267)  ,S(632, 1260)  ,S(638, 1258)  ,S(617, 1270)  ,S(626, 1272)  ,S(612, 1259)  ,
		S(551, 1254)  ,S(648, 1240)  ,S(647, 1248)  ,S(632, 1251)  ,S(637, 1250)  ,S(625, 1257)  ,S(623, 1250)  ,S(590, 1258)  ,
		S(618, 1233)  ,S(639, 1259)  ,S(648, 1269)  ,S(645, 1250)  ,S(648, 1250)  ,S(637, 1260)  ,S(631, 1261)  ,S(632, 1255)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1354, 2308) ,S(1372, 2330) ,S(1367, 2335) ,S(1330, 2398) ,S(1346, 2385) ,S(1389, 2358) ,S(1354, 2351) ,S(1372, 2311) ,
		S(1351, 2333) ,S(1294, 2387) ,S(1332, 2374) ,S(1276, 2429) ,S(1274, 2450) ,S(1393, 2345) ,S(1311, 2363) ,S(1330, 2336) ,
		S(1342, 2345) ,S(1351, 2309) ,S(1334, 2339) ,S(1335, 2348) ,S(1345, 2367) ,S(1337, 2390) ,S(1373, 2310) ,S(1389, 2319) ,
		S(1357, 2319) ,S(1332, 2379) ,S(1333, 2348) ,S(1321, 2392) ,S(1328, 2383) ,S(1356, 2349) ,S(1380, 2343) ,S(1376, 2327) ,
		S(1346, 2324) ,S(1350, 2372) ,S(1332, 2385) ,S(1343, 2403) ,S(1338, 2377) ,S(1357, 2362) ,S(1375, 2330) ,S(1374, 2319) ,
		S(1336, 2318) ,S(1362, 2317) ,S(1359, 2342) ,S(1358, 2328) ,S(1359, 2318) ,S(1370, 2323) ,S(1386, 2295) ,S(1383, 2288) ,
		S(1316, 2281) ,S(1356, 2266) ,S(1394, 2215) ,S(1385, 2282) ,S(1374, 2279) ,S(1390, 2259) ,S(1395, 2253) ,S(1392, 2262) ,
		S(1339, 2252) ,S(1367, 2222) ,S(1365, 2232) ,S(1377, 2266) ,S(1383, 2266) ,S(1377, 2249) ,S(1368, 2286) ,S(1377, 2240) ,
	},
	{
		S(1365, 2446) ,S(1383, 2468) ,S(1358, 2491) ,S(1319, 2484) ,S(1331, 2461) ,S(1325, 2452) ,S(1340, 2431) ,S(1301, 2443) ,
		S(1346, 2468) ,S(1290, 2522) ,S(1370, 2467) ,S(1253, 2526) ,S(1262, 2495) ,S(1319, 2434) ,S(1261, 2473) ,S(1323, 2419) ,
		S(1331, 2491) ,S(1312, 2498) ,S(1320, 2482) ,S(1315, 2456) ,S(1317, 2428) ,S(1311, 2416) ,S(1322, 2400) ,S(1320, 2407) ,
		S(1353, 2457) ,S(1342, 2484) ,S(1326, 2483) ,S(1298, 2489) ,S(1307, 2467) ,S(1327, 2404) ,S(1331, 2432) ,S(1335, 2393) ,
		S(1359, 2428) ,S(1354, 2431) ,S(1341, 2451) ,S(1319, 2471) ,S(1324, 2484) ,S(1337, 2429) ,S(1351, 2421) ,S(1345, 2382) ,
		S(1366, 2358) ,S(1370, 2371) ,S(1351, 2414) ,S(1347, 2394) ,S(1346, 2405) ,S(1350, 2419) ,S(1364, 2384) ,S(1353, 2364) ,
		S(1345, 2347) ,S(1377, 2291) ,S(1386, 2292) ,S(1367, 2352) ,S(1364, 2370) ,S(1370, 2329) ,S(1362, 2352) ,S(1357, 2347) ,
		S(1353, 2296) ,S(1352, 2302) ,S(1355, 2319) ,S(1377, 2323) ,S(1378, 2360) ,S(1370, 2335) ,S(1364, 2334) ,S(1358, 2342) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-41, -200)  ,S(78, -101)   ,S(84, -81)    ,S(117, -64)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-12, -45)   ,S(111, 14)    ,S(163, 4)     ,S(167, -13)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(54, -7)     ,S(141, 41)    ,S(177, 43)    ,S(152, 38)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-11, 4)     ,S(105, 38)    ,S(118, 58)    ,S(97, 67)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-16, -31)   ,S(57, 30)     ,S(78, 55)     ,S(29, 77)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-36, -33)   ,S(-16, 15)    ,S(8, 36)      ,S(-11, 59)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(11, -67)    ,S(-35, -9)    ,S(-55, 21)    ,S(-94, 35)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(8, -158)    ,S(-15, -68)   ,S(-65, -27)   ,S(-82, -42)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(15, -205)   ,S(23, -10)    ,S(70, -44)    ,S(105, -55)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-30, -53)   ,S(71, 50)     ,S(162, -7)    ,S(177, -10)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(32, -4)     ,S(208, 43)    ,S(269, 29)    ,S(173, 30)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-35, -1)    ,S(121, 37)    ,S(147, 59)    ,S(109, 70)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-44, -30)   ,S(64, 31)     ,S(76, 62)     ,S(61, 84)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-22, -31)   ,S(-6, 21)     ,S(18, 48)     ,S(11, 68)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(27, -63)    ,S(-17, 4)     ,S(-47, 37)    ,S(-73, 44)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(22, -146)   ,S(-16, -41)   ,S(-62, -8)    ,S(-72, -36)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(109, 200), S(463, 666), S(469, 708), S(632, 1221), S(1343, 2338), };
constexpr PScore knightMob[9] = {S(-48, -159), S(-29, -83), S(-17, -35), S(-10, -8), S(-3, 6), S(2, 21), S(10, 24), S(20, 20), S(31, -2), };
constexpr PScore bishopMob[14] = {S(-63, -203), S(-34, -132), S(-19, -82), S(-10, -51), S(1, -30), S(5, -7), S(8, 8), S(9, 20), S(11, 32), S(17, 37), S(25, 34), S(50, 23), S(60, 32), S(82, -7), };
constexpr PScore rookMob[15] = {S(-19, -143), S(-28, -100), S(-19, -67), S(-17, -49), S(-17, -30), S(-18, -13), S(-15, -3), S(-9, -2), S(-5, 2), S(3, 7), S(3, 14), S(8, 18), S(10, 22), S(28, 3), S(92, -34), };
constexpr PScore queenMob[28] = {S(-149, -445), S(-107, -462), S(-69, -378), S(-49, -296), S(-46, -202), S(-43, -143), S(-39, -107), S(-34, -87), S(-31, -65), S(-26, -53), S(-21, -43), S(-16, -38), S(-11, -36), S(-8, -33), S(-6, -32), S(-4, -32), S(-4, -32), S(-6, -32), S(-3, -36), S(0, -45), S(14, -68), S(20, -88), S(20, -102), S(32, -125), S(10, -129), S(12, -151), S(-20, -123), S(-35, -79), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 893.6846923828125;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.783663511276245;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 140.9771270751953;
constexpr double KSBEG = 1;
constexpr double KSCEG = -0.7861928343772888;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);