#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,
		S(190, 263)   ,S(147, 264)   ,S(187, 210)   ,S(195, 167)   ,S(175, 174)   ,S(121, 223)   ,S(-78, 313)   ,S(-50, 324)   ,
		S(95, 298)    ,S(121, 277)   ,S(143, 232)   ,S(137, 188)   ,S(151, 198)   ,S(206, 234)   ,S(151, 273)   ,S(108, 282)   ,
		S(90, 249)    ,S(94, 233)    ,S(101, 214)   ,S(116, 184)   ,S(127, 200)   ,S(134, 213)   ,S(98, 239)    ,S(94, 236)    ,
		S(84, 223)    ,S(80, 216)    ,S(96, 197)    ,S(104, 189)   ,S(109, 196)   ,S(112, 203)   ,S(98, 209)    ,S(95, 207)    ,
		S(87, 212)    ,S(85, 206)    ,S(91, 204)    ,S(101, 200)   ,S(112, 216)   ,S(104, 218)   ,S(118, 194)   ,S(107, 192)   ,
		S(84, 223)    ,S(81, 213)    ,S(80, 214)    ,S(90, 218)    ,S(89, 240)    ,S(126, 232)   ,S(138, 205)   ,S(107, 183)   ,
		S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,
	},
	{
		S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,
		S(129, 323)   ,S(102, 331)   ,S(177, 292)   ,S(184, 221)   ,S(177, 205)   ,S(192, 184)   ,S(83, 259)    ,S(72, 264)    ,
		S(119, 317)   ,S(172, 309)   ,S(171, 278)   ,S(153, 231)   ,S(159, 204)   ,S(155, 234)   ,S(146, 254)   ,S(88, 276)    ,
		S(127, 247)   ,S(120, 244)   ,S(126, 227)   ,S(130, 210)   ,S(126, 206)   ,S(108, 219)   ,S(77, 245)    ,S(81, 246)    ,
		S(122, 214)   ,S(111, 216)   ,S(121, 206)   ,S(118, 205)   ,S(106, 199)   ,S(90, 212)    ,S(68, 222)    ,S(64, 227)    ,
		S(124, 201)   ,S(135, 194)   ,S(119, 213)   ,S(108, 217)   ,S(95, 211)    ,S(86, 211)    ,S(72, 217)    ,S(64, 220)    ,
		S(126, 199)   ,S(149, 197)   ,S(135, 224)   ,S(98, 236)    ,S(77, 228)    ,S(74, 226)    ,S(66, 228)    ,S(64, 228)    ,
		S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(242, 583)   ,S(332, 659)   ,S(312, 706)   ,S(424, 677)   ,S(474, 671)   ,S(335, 708)   ,S(336, 671)   ,S(304, 555)   ,
		S(462, 627)   ,S(462, 653)   ,S(511, 653)   ,S(534, 691)   ,S(526, 694)   ,S(553, 644)   ,S(455, 660)   ,S(481, 631)   ,
		S(448, 639)   ,S(474, 666)   ,S(493, 706)   ,S(502, 709)   ,S(532, 702)   ,S(515, 711)   ,S(470, 686)   ,S(457, 664)   ,
		S(477, 663)   ,S(481, 674)   ,S(493, 707)   ,S(487, 735)   ,S(489, 744)   ,S(496, 728)   ,S(477, 718)   ,S(477, 697)   ,
		S(464, 667)   ,S(471, 677)   ,S(471, 705)   ,S(472, 717)   ,S(479, 728)   ,S(478, 716)   ,S(487, 698)   ,S(469, 693)   ,
		S(442, 619)   ,S(453, 653)   ,S(450, 679)   ,S(461, 708)   ,S(461, 707)   ,S(449, 681)   ,S(451, 670)   ,S(441, 649)   ,
		S(425, 639)   ,S(431, 655)   ,S(437, 650)   ,S(445, 674)   ,S(441, 677)   ,S(433, 652)   ,S(423, 663)   ,S(428, 669)   ,
		S(411, 597)   ,S(436, 616)   ,S(431, 630)   ,S(433, 666)   ,S(430, 669)   ,S(425, 661)   ,S(424, 643)   ,S(389, 629)   ,
	},
	{
		S(273, 542)   ,S(338, 645)   ,S(342, 693)   ,S(450, 663)   ,S(447, 661)   ,S(305, 697)   ,S(319, 662)   ,S(274, 555)   ,
		S(454, 626)   ,S(450, 660)   ,S(513, 657)   ,S(570, 671)   ,S(530, 679)   ,S(535, 648)   ,S(461, 648)   ,S(469, 619)   ,
		S(431, 662)   ,S(492, 672)   ,S(495, 710)   ,S(515, 709)   ,S(532, 697)   ,S(511, 699)   ,S(500, 652)   ,S(456, 639)   ,
		S(465, 677)   ,S(485, 691)   ,S(493, 718)   ,S(502, 727)   ,S(500, 728)   ,S(497, 705)   ,S(483, 690)   ,S(477, 663)   ,
		S(469, 678)   ,S(472, 689)   ,S(481, 708)   ,S(481, 717)   ,S(485, 718)   ,S(477, 706)   ,S(473, 681)   ,S(473, 661)   ,
		S(418, 653)   ,S(444, 665)   ,S(455, 680)   ,S(456, 702)   ,S(458, 702)   ,S(447, 677)   ,S(446, 648)   ,S(428, 621)   ,
		S(415, 677)   ,S(403, 678)   ,S(427, 658)   ,S(436, 670)   ,S(441, 672)   ,S(430, 653)   ,S(414, 659)   ,S(415, 633)   ,
		S(379, 647)   ,S(405, 648)   ,S(415, 660)   ,S(410, 668)   ,S(428, 656)   ,S(431, 623)   ,S(424, 623)   ,S(403, 587)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(417, 748)   ,S(396, 747)   ,S(340, 749)   ,S(333, 758)   ,S(355, 745)   ,S(321, 746)   ,S(423, 730)   ,S(409, 738)   ,
		S(416, 737)   ,S(476, 728)   ,S(473, 725)   ,S(441, 733)   ,S(469, 725)   ,S(464, 730)   ,S(434, 740)   ,S(435, 725)   ,
		S(474, 728)   ,S(479, 734)   ,S(503, 728)   ,S(484, 725)   ,S(497, 726)   ,S(493, 751)   ,S(476, 741)   ,S(466, 747)   ,
		S(461, 729)   ,S(497, 725)   ,S(480, 726)   ,S(503, 747)   ,S(505, 752)   ,S(497, 734)   ,S(503, 736)   ,S(453, 745)   ,
		S(470, 710)   ,S(477, 717)   ,S(470, 742)   ,S(489, 740)   ,S(497, 742)   ,S(472, 736)   ,S(478, 723)   ,S(479, 712)   ,
		S(473, 710)   ,S(487, 717)   ,S(477, 731)   ,S(480, 733)   ,S(475, 733)   ,S(477, 729)   ,S(480, 715)   ,S(483, 719)   ,
		S(484, 701)   ,S(481, 689)   ,S(479, 705)   ,S(458, 723)   ,S(459, 725)   ,S(476, 708)   ,S(490, 705)   ,S(480, 687)   ,
		S(491, 697)   ,S(478, 711)   ,S(458, 716)   ,S(451, 710)   ,S(447, 721)   ,S(453, 729)   ,S(455, 713)   ,S(478, 696)   ,
	},
	{
		S(385, 744)   ,S(353, 740)   ,S(366, 738)   ,S(349, 745)   ,S(339, 749)   ,S(319, 746)   ,S(432, 732)   ,S(396, 753)   ,
		S(391, 731)   ,S(438, 743)   ,S(460, 731)   ,S(439, 725)   ,S(456, 726)   ,S(480, 725)   ,S(475, 734)   ,S(441, 724)   ,
		S(462, 744)   ,S(494, 738)   ,S(495, 737)   ,S(503, 728)   ,S(503, 718)   ,S(506, 731)   ,S(495, 725)   ,S(483, 729)   ,
		S(459, 730)   ,S(501, 729)   ,S(490, 737)   ,S(509, 743)   ,S(519, 739)   ,S(491, 722)   ,S(500, 726)   ,S(477, 730)   ,
		S(477, 715)   ,S(465, 726)   ,S(484, 733)   ,S(499, 739)   ,S(496, 737)   ,S(482, 730)   ,S(482, 712)   ,S(464, 711)   ,
		S(476, 716)   ,S(486, 719)   ,S(488, 730)   ,S(490, 723)   ,S(481, 727)   ,S(482, 720)   ,S(481, 708)   ,S(465, 710)   ,
		S(475, 714)   ,S(500, 697)   ,S(481, 711)   ,S(464, 719)   ,S(462, 717)   ,S(466, 705)   ,S(469, 692)   ,S(479, 681)   ,
		S(487, 700)   ,S(457, 711)   ,S(454, 721)   ,S(449, 711)   ,S(451, 710)   ,S(457, 711)   ,S(471, 708)   ,S(483, 693)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(638, 1304)  ,S(633, 1308)  ,S(602, 1319)  ,S(610, 1313)  ,S(601, 1321)  ,S(660, 1314)  ,S(650, 1317)  ,S(655, 1310)  ,
		S(616, 1296)  ,S(601, 1308)  ,S(625, 1303)  ,S(640, 1304)  ,S(625, 1310)  ,S(661, 1288)  ,S(620, 1302)  ,S(627, 1291)  ,
		S(607, 1280)  ,S(660, 1262)  ,S(636, 1277)  ,S(670, 1257)  ,S(684, 1254)  ,S(685, 1270)  ,S(705, 1251)  ,S(636, 1273)  ,
		S(608, 1266)  ,S(629, 1263)  ,S(639, 1264)  ,S(669, 1253)  ,S(656, 1262)  ,S(665, 1260)  ,S(652, 1267)  ,S(633, 1265)  ,
		S(586, 1250)  ,S(586, 1268)  ,S(590, 1263)  ,S(605, 1254)  ,S(595, 1261)  ,S(599, 1267)  ,S(620, 1262)  ,S(599, 1244)  ,
		S(582, 1227)  ,S(591, 1245)  ,S(583, 1240)  ,S(602, 1230)  ,S(598, 1234)  ,S(599, 1240)  ,S(627, 1231)  ,S(598, 1208)  ,
		S(564, 1223)  ,S(594, 1222)  ,S(594, 1228)  ,S(603, 1220)  ,S(601, 1221)  ,S(614, 1214)  ,S(623, 1205)  ,S(547, 1225)  ,
		S(602, 1223)  ,S(603, 1228)  ,S(606, 1230)  ,S(614, 1220)  ,S(613, 1222)  ,S(616, 1241)  ,S(611, 1229)  ,S(601, 1202)  ,
	},
	{
		S(651, 1300)  ,S(610, 1322)  ,S(630, 1319)  ,S(622, 1308)  ,S(630, 1302)  ,S(638, 1294)  ,S(666, 1285)  ,S(669, 1287)  ,
		S(593, 1304)  ,S(614, 1306)  ,S(648, 1296)  ,S(637, 1297)  ,S(638, 1294)  ,S(651, 1278)  ,S(618, 1291)  ,S(631, 1283)  ,
		S(604, 1287)  ,S(664, 1265)  ,S(651, 1281)  ,S(675, 1253)  ,S(690, 1242)  ,S(658, 1261)  ,S(689, 1243)  ,S(634, 1266)  ,
		S(595, 1273)  ,S(639, 1266)  ,S(656, 1264)  ,S(659, 1254)  ,S(659, 1251)  ,S(647, 1255)  ,S(648, 1249)  ,S(632, 1255)  ,
		S(565, 1240)  ,S(599, 1257)  ,S(592, 1266)  ,S(594, 1257)  ,S(596, 1252)  ,S(591, 1259)  ,S(593, 1260)  ,S(591, 1243)  ,
		S(554, 1215)  ,S(597, 1230)  ,S(600, 1231)  ,S(592, 1227)  ,S(592, 1229)  ,S(589, 1232)  ,S(608, 1233)  ,S(586, 1216)  ,
		S(461, 1244)  ,S(577, 1211)  ,S(595, 1221)  ,S(594, 1221)  ,S(597, 1216)  ,S(600, 1212)  ,S(603, 1208)  ,S(559, 1209)  ,
		S(555, 1226)  ,S(580, 1237)  ,S(610, 1228)  ,S(612, 1221)  ,S(610, 1213)  ,S(608, 1218)  ,S(614, 1213)  ,S(602, 1206)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1233, 1478) ,S(1266, 1470) ,S(1246, 1508) ,S(1248, 1516) ,S(1236, 1547) ,S(1268, 1550) ,S(1271, 1515) ,S(1259, 1491) ,
		S(1262, 1451) ,S(1207, 1499) ,S(1257, 1474) ,S(1198, 1544) ,S(1202, 1580) ,S(1281, 1551) ,S(1200, 1551) ,S(1277, 1495) ,
		S(1266, 1451) ,S(1270, 1446) ,S(1258, 1471) ,S(1267, 1484) ,S(1276, 1521) ,S(1279, 1540) ,S(1277, 1539) ,S(1256, 1553) ,
		S(1278, 1436) ,S(1278, 1473) ,S(1269, 1461) ,S(1253, 1531) ,S(1253, 1553) ,S(1288, 1549) ,S(1298, 1540) ,S(1295, 1512) ,
		S(1281, 1414) ,S(1280, 1462) ,S(1268, 1476) ,S(1263, 1527) ,S(1265, 1522) ,S(1281, 1508) ,S(1292, 1484) ,S(1298, 1466) ,
		S(1288, 1394) ,S(1293, 1425) ,S(1283, 1459) ,S(1281, 1454) ,S(1282, 1443) ,S(1286, 1468) ,S(1301, 1431) ,S(1299, 1403) ,
		S(1290, 1384) ,S(1294, 1391) ,S(1302, 1379) ,S(1296, 1413) ,S(1297, 1402) ,S(1316, 1343) ,S(1304, 1347) ,S(1271, 1393) ,
		S(1292, 1377) ,S(1295, 1379) ,S(1300, 1377) ,S(1307, 1406) ,S(1308, 1365) ,S(1281, 1365) ,S(1280, 1336) ,S(1275, 1358) ,
	},
	{
		S(1275, 1423) ,S(1271, 1459) ,S(1271, 1483) ,S(1259, 1520) ,S(1243, 1519) ,S(1265, 1484) ,S(1259, 1463) ,S(1261, 1448) ,
		S(1256, 1468) ,S(1194, 1517) ,S(1264, 1511) ,S(1194, 1568) ,S(1182, 1580) ,S(1261, 1473) ,S(1211, 1501) ,S(1280, 1437) ,
		S(1261, 1492) ,S(1266, 1489) ,S(1254, 1518) ,S(1277, 1511) ,S(1280, 1483) ,S(1265, 1484) ,S(1295, 1432) ,S(1294, 1445) ,
		S(1278, 1473) ,S(1291, 1514) ,S(1280, 1509) ,S(1271, 1538) ,S(1267, 1519) ,S(1281, 1459) ,S(1296, 1467) ,S(1300, 1444) ,
		S(1285, 1430) ,S(1285, 1482) ,S(1278, 1491) ,S(1272, 1518) ,S(1278, 1498) ,S(1277, 1467) ,S(1290, 1441) ,S(1288, 1416) ,
		S(1263, 1421) ,S(1290, 1422) ,S(1287, 1458) ,S(1286, 1435) ,S(1287, 1437) ,S(1291, 1437) ,S(1298, 1413) ,S(1292, 1378) ,
		S(1245, 1388) ,S(1279, 1358) ,S(1311, 1341) ,S(1304, 1387) ,S(1299, 1401) ,S(1307, 1357) ,S(1306, 1365) ,S(1301, 1350) ,
		S(1250, 1362) ,S(1276, 1333) ,S(1281, 1335) ,S(1299, 1349) ,S(1306, 1367) ,S(1309, 1344) ,S(1308, 1357) ,S(1300, 1341) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(89, -42)    ,S(67, -33)    ,S(56, -29)    ,S(-26, -187)  ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(142, 13)    ,S(150, 32)    ,S(72, 64)     ,S(-5, -30)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(159, 42)    ,S(223, 47)    ,S(169, 55)    ,S(38, 9)      ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(114, 61)    ,S(138, 53)    ,S(114, 35)    ,S(-50, 13)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(72, 62)     ,S(79, 40)     ,S(76, 12)     ,S(-63, -15)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(21, 50)     ,S(25, 28)     ,S(17, 0)      ,S(-46, -17)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-67, 38)    ,S(-53, 35)    ,S(-5, -2)     ,S(1, -42)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-69, -29)   ,S(-95, 8)     ,S(-6, -37)    ,S(4, -123)    ,
	},
	{
		S(-19, -197)  ,S(47, -76)    ,S(79, -62)    ,S(100, -35)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-41, -43)   ,S(86, 37)     ,S(140, 17)    ,S(185, -12)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(6, 11)      ,S(168, 42)    ,S(196, 35)    ,S(166, 29)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-41, 11)    ,S(126, 20)    ,S(142, 42)    ,S(115, 47)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-53, -30)   ,S(69, 3)      ,S(112, 24)    ,S(67, 50)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-73, -18)   ,S(9, -10)     ,S(33, 10)     ,S(14, 34)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-12, -35)   ,S(-15, -15)   ,S(-22, 7)     ,S(-72, 22)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-25, -108)  ,S(-12, -53)   ,S(-51, -13)   ,S(-94, -27)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(101, 205), S(426, 626), S(441, 671), S(595, 1205), S(1271, 1419), };
constexpr PScore knightMob[9] = {S(-26, -132), S(-8, -55), S(3, -9), S(10, 17), S(16, 27), S(21, 43), S(28, 42), S(39, 36), S(50, 11), };
constexpr PScore bishopMob[14] = {S(-50, -183), S(-20, -108), S(-2, -54), S(6, -26), S(16, -6), S(20, 12), S(24, 25), S(22, 33), S(23, 43), S(26, 45), S(35, 39), S(57, 23), S(62, 30), S(86, -14), };
constexpr PScore rookMob[15] = {S(-22, -142), S(-28, -94), S(-19, -60), S(-18, -44), S(-17, -26), S(-19, -8), S(-16, 2), S(-11, 2), S(-7, 7), S(2, 12), S(1, 16), S(7, 21), S(10, 22), S(27, 1), S(91, -33), };
constexpr PScore queenMob[28] = {S(-129, -451), S(-86, -476), S(-47, -382), S(-29, -292), S(-26, -197), S(-24, -141), S(-20, -106), S(-17, -88), S(-14, -68), S(-9, -57), S(-5, -49), S(0, -45), S(3, -42), S(7, -40), S(9, -41), S(11, -42), S(10, -43), S(6, -41), S(9, -47), S(12, -57), S(26, -81), S(32, -98), S(32, -111), S(44, -134), S(21, -140), S(28, -164), S(3, -135), S(-7, -106), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 879.656982421875;
constexpr double KSBMG = 1; // 1.543758511543274;
constexpr double KSCMG = -3.050337314605713;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 1100.1268310546875;
constexpr double KSBEG = 1; // 2.0333967208862305;
constexpr double KSCEG = 2.7682151794433594;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);