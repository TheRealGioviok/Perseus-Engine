#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,
		S(233, 417)   ,S(211, 426)   ,S(160, 402)   ,S(201, 287)   ,S(228, 160)   ,S(182, 88)    ,S(-3, 159)    ,S(-5, 200)    ,
		S(99, 398)    ,S(126, 389)   ,S(118, 346)   ,S(129, 252)   ,S(177, 156)   ,S(218, 142)   ,S(163, 174)   ,S(108, 214)   ,
		S(118, 286)   ,S(117, 265)   ,S(115, 243)   ,S(116, 214)   ,S(141, 184)   ,S(138, 185)   ,S(83, 216)    ,S(79, 215)    ,
		S(121, 231)   ,S(116, 228)   ,S(117, 215)   ,S(113, 207)   ,S(114, 194)   ,S(105, 203)   ,S(74, 213)    ,S(64, 216)    ,
		S(133, 203)   ,S(149, 199)   ,S(124, 214)   ,S(116, 215)   ,S(104, 210)   ,S(91, 215)    ,S(63, 221)    ,S(61, 219)    ,
		S(133, 198)   ,S(165, 191)   ,S(145, 208)   ,S(101, 223)   ,S(87, 220)    ,S(77, 221)    ,S(59, 225)    ,S(61, 223)    ,
		S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,
	},
	{
		S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,
		S(-35, 256)   ,S(-53, 215)   ,S(187, 131)   ,S(232, 152)   ,S(223, 207)   ,S(198, 281)   ,S(176, 339)   ,S(224, 333)   ,
		S(122, 234)   ,S(159, 220)   ,S(225, 186)   ,S(150, 174)   ,S(137, 191)   ,S(130, 251)   ,S(113, 296)   ,S(99, 314)    ,
		S(99, 224)    ,S(102, 225)   ,S(138, 198)   ,S(133, 192)   ,S(122, 176)   ,S(110, 203)   ,S(108, 222)   ,S(104, 246)   ,
		S(92, 208)    ,S(99, 216)    ,S(117, 210)   ,S(116, 199)   ,S(115, 187)   ,S(109, 190)   ,S(96, 207)    ,S(96, 218)    ,
		S(106, 195)   ,S(120, 204)   ,S(111, 226)   ,S(123, 216)   ,S(111, 196)   ,S(107, 197)   ,S(104, 197)   ,S(99, 207)    ,
		S(108, 173)   ,S(139, 201)   ,S(135, 230)   ,S(100, 230)   ,S(102, 205)   ,S(95, 201)    ,S(99, 199)    ,S(96, 213)    ,
		S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(323, 590)   ,S(356, 664)   ,S(381, 701)   ,S(508, 663)   ,S(503, 660)   ,S(397, 686)   ,S(471, 646)   ,S(344, 556)   ,
		S(488, 638)   ,S(511, 661)   ,S(551, 657)   ,S(589, 685)   ,S(578, 675)   ,S(574, 646)   ,S(516, 654)   ,S(532, 627)   ,
		S(460, 669)   ,S(527, 668)   ,S(551, 706)   ,S(558, 705)   ,S(569, 693)   ,S(552, 692)   ,S(518, 666)   ,S(529, 645)   ,
		S(509, 683)   ,S(540, 682)   ,S(566, 708)   ,S(575, 721)   ,S(573, 723)   ,S(560, 708)   ,S(543, 697)   ,S(550, 675)   ,
		S(509, 688)   ,S(534, 689)   ,S(535, 712)   ,S(543, 719)   ,S(557, 718)   ,S(549, 704)   ,S(559, 689)   ,S(536, 686)   ,
		S(468, 653)   ,S(484, 674)   ,S(500, 689)   ,S(502, 713)   ,S(515, 712)   ,S(496, 688)   ,S(500, 664)   ,S(479, 649)   ,
		S(451, 667)   ,S(449, 680)   ,S(469, 663)   ,S(479, 682)   ,S(489, 683)   ,S(482, 666)   ,S(453, 683)   ,S(455, 675)   ,
		S(429, 618)   ,S(436, 666)   ,S(459, 662)   ,S(466, 681)   ,S(465, 672)   ,S(460, 656)   ,S(461, 653)   ,S(427, 654)   ,
	},
	{
		S(351, 577)   ,S(449, 702)   ,S(390, 750)   ,S(504, 717)   ,S(462, 723)   ,S(341, 751)   ,S(348, 708)   ,S(269, 635)   ,
		S(526, 689)   ,S(486, 704)   ,S(579, 692)   ,S(564, 735)   ,S(548, 737)   ,S(520, 699)   ,S(475, 700)   ,S(470, 676)   ,
		S(497, 713)   ,S(481, 743)   ,S(555, 747)   ,S(547, 744)   ,S(532, 749)   ,S(526, 743)   ,S(494, 707)   ,S(462, 687)   ,
		S(519, 740)   ,S(524, 761)   ,S(547, 763)   ,S(544, 784)   ,S(540, 772)   ,S(537, 741)   ,S(522, 710)   ,S(502, 702)   ,
		S(508, 748)   ,S(537, 745)   ,S(528, 756)   ,S(532, 772)   ,S(520, 761)   ,S(516, 744)   ,S(508, 719)   ,S(499, 706)   ,
		S(473, 699)   ,S(485, 719)   ,S(487, 726)   ,S(497, 750)   ,S(499, 748)   ,S(490, 722)   ,S(487, 689)   ,S(475, 658)   ,
		S(460, 716)   ,S(455, 717)   ,S(464, 701)   ,S(476, 720)   ,S(478, 718)   ,S(468, 693)   ,S(463, 698)   ,S(450, 691)   ,
		S(423, 676)   ,S(458, 681)   ,S(459, 703)   ,S(459, 709)   ,S(466, 708)   ,S(464, 676)   ,S(468, 661)   ,S(435, 650)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(474, 759)   ,S(427, 752)   ,S(436, 741)   ,S(396, 753)   ,S(381, 739)   ,S(384, 737)   ,S(525, 727)   ,S(471, 747)   ,
		S(471, 753)   ,S(485, 751)   ,S(516, 735)   ,S(471, 735)   ,S(482, 724)   ,S(537, 703)   ,S(491, 727)   ,S(459, 716)   ,
		S(524, 749)   ,S(542, 740)   ,S(532, 739)   ,S(527, 733)   ,S(547, 712)   ,S(548, 720)   ,S(523, 716)   ,S(531, 726)   ,
		S(519, 748)   ,S(538, 737)   ,S(530, 741)   ,S(537, 744)   ,S(562, 727)   ,S(536, 708)   ,S(548, 723)   ,S(524, 720)   ,
		S(517, 729)   ,S(529, 730)   ,S(531, 735)   ,S(551, 731)   ,S(541, 726)   ,S(535, 720)   ,S(538, 704)   ,S(524, 716)   ,
		S(521, 718)   ,S(549, 721)   ,S(545, 729)   ,S(532, 724)   ,S(533, 726)   ,S(519, 721)   ,S(525, 716)   ,S(511, 720)   ,
		S(535, 707)   ,S(562, 703)   ,S(535, 713)   ,S(520, 720)   ,S(508, 723)   ,S(515, 711)   ,S(514, 701)   ,S(520, 708)   ,
		S(533, 709)   ,S(495, 721)   ,S(509, 729)   ,S(501, 722)   ,S(496, 724)   ,S(496, 733)   ,S(509, 730)   ,S(526, 710)   ,
	},
	{
		S(452, 766)   ,S(481, 754)   ,S(366, 767)   ,S(394, 774)   ,S(376, 794)   ,S(377, 786)   ,S(437, 787)   ,S(453, 798)   ,
		S(471, 757)   ,S(455, 762)   ,S(495, 747)   ,S(467, 761)   ,S(459, 772)   ,S(493, 768)   ,S(477, 785)   ,S(447, 785)   ,
		S(495, 784)   ,S(492, 775)   ,S(505, 781)   ,S(521, 755)   ,S(502, 762)   ,S(519, 768)   ,S(502, 776)   ,S(509, 773)   ,
		S(489, 775)   ,S(514, 776)   ,S(514, 766)   ,S(520, 779)   ,S(523, 776)   ,S(503, 759)   ,S(517, 765)   ,S(490, 777)   ,
		S(502, 755)   ,S(510, 760)   ,S(506, 771)   ,S(523, 771)   ,S(513, 770)   ,S(511, 768)   ,S(511, 749)   ,S(499, 754)   ,
		S(506, 758)   ,S(509, 755)   ,S(506, 764)   ,S(507, 768)   ,S(509, 766)   ,S(510, 760)   ,S(527, 749)   ,S(507, 746)   ,
		S(506, 719)   ,S(522, 736)   ,S(505, 744)   ,S(494, 760)   ,S(495, 757)   ,S(513, 742)   ,S(519, 723)   ,S(522, 739)   ,
		S(509, 723)   ,S(484, 743)   ,S(489, 761)   ,S(482, 757)   ,S(489, 752)   ,S(494, 760)   ,S(513, 754)   ,S(529, 733)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(729, 1256)  ,S(701, 1276)  ,S(681, 1282)  ,S(652, 1286)  ,S(662, 1280)  ,S(719, 1254)  ,S(706, 1257)  ,S(682, 1272)  ,
		S(692, 1253)  ,S(692, 1258)  ,S(700, 1256)  ,S(689, 1263)  ,S(686, 1256)  ,S(695, 1242)  ,S(661, 1248)  ,S(665, 1242)  ,
		S(678, 1246)  ,S(737, 1221)  ,S(708, 1242)  ,S(720, 1220)  ,S(731, 1211)  ,S(704, 1225)  ,S(748, 1200)  ,S(678, 1229)  ,
		S(665, 1243)  ,S(682, 1237)  ,S(702, 1233)  ,S(705, 1230)  ,S(704, 1219)  ,S(690, 1221)  ,S(703, 1213)  ,S(682, 1218)  ,
		S(629, 1229)  ,S(660, 1236)  ,S(635, 1249)  ,S(637, 1244)  ,S(640, 1230)  ,S(645, 1229)  ,S(652, 1228)  ,S(632, 1219)  ,
		S(612, 1194)  ,S(654, 1203)  ,S(632, 1211)  ,S(637, 1209)  ,S(641, 1201)  ,S(641, 1202)  ,S(658, 1200)  ,S(635, 1187)  ,
		S(573, 1202)  ,S(628, 1192)  ,S(641, 1198)  ,S(636, 1200)  ,S(643, 1194)  ,S(651, 1187)  ,S(661, 1176)  ,S(612, 1188)  ,
		S(610, 1199)  ,S(628, 1208)  ,S(656, 1207)  ,S(654, 1196)  ,S(654, 1188)  ,S(664, 1192)  ,S(669, 1187)  ,S(646, 1187)  ,
	},
	{
		S(685, 1326)  ,S(686, 1329)  ,S(694, 1334)  ,S(631, 1339)  ,S(655, 1326)  ,S(633, 1342)  ,S(670, 1329)  ,S(676, 1324)  ,
		S(657, 1306)  ,S(670, 1310)  ,S(703, 1300)  ,S(658, 1328)  ,S(686, 1313)  ,S(665, 1316)  ,S(642, 1326)  ,S(650, 1315)  ,
		S(672, 1290)  ,S(750, 1262)  ,S(733, 1279)  ,S(720, 1268)  ,S(714, 1268)  ,S(676, 1293)  ,S(700, 1278)  ,S(643, 1300)  ,
		S(664, 1286)  ,S(693, 1283)  ,S(699, 1282)  ,S(692, 1281)  ,S(707, 1270)  ,S(677, 1281)  ,S(667, 1281)  ,S(644, 1285)  ,
		S(622, 1275)  ,S(659, 1291)  ,S(639, 1296)  ,S(635, 1288)  ,S(644, 1278)  ,S(626, 1289)  ,S(624, 1292)  ,S(622, 1272)  ,
		S(625, 1231)  ,S(664, 1259)  ,S(642, 1263)  ,S(636, 1257)  ,S(644, 1247)  ,S(622, 1258)  ,S(630, 1261)  ,S(617, 1247)  ,
		S(558, 1245)  ,S(656, 1233)  ,S(651, 1242)  ,S(638, 1246)  ,S(642, 1238)  ,S(630, 1246)  ,S(629, 1239)  ,S(595, 1247)  ,
		S(623, 1223)  ,S(643, 1251)  ,S(653, 1260)  ,S(649, 1244)  ,S(653, 1237)  ,S(642, 1248)  ,S(636, 1247)  ,S(638, 1242)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1363, 2174) ,S(1387, 2189) ,S(1369, 2213) ,S(1339, 2271) ,S(1354, 2259) ,S(1408, 2229) ,S(1376, 2212) ,S(1384, 2176) ,
		S(1365, 2194) ,S(1308, 2246) ,S(1350, 2229) ,S(1289, 2299) ,S(1286, 2332) ,S(1429, 2220) ,S(1342, 2220) ,S(1363, 2184) ,
		S(1360, 2211) ,S(1372, 2173) ,S(1358, 2203) ,S(1358, 2225) ,S(1378, 2242) ,S(1355, 2276) ,S(1399, 2186) ,S(1405, 2193) ,
		S(1373, 2185) ,S(1348, 2244) ,S(1347, 2226) ,S(1338, 2277) ,S(1352, 2264) ,S(1381, 2233) ,S(1408, 2224) ,S(1399, 2197) ,
		S(1363, 2181) ,S(1365, 2239) ,S(1347, 2259) ,S(1358, 2284) ,S(1356, 2257) ,S(1375, 2243) ,S(1394, 2201) ,S(1395, 2184) ,
		S(1353, 2178) ,S(1379, 2183) ,S(1375, 2212) ,S(1376, 2197) ,S(1376, 2191) ,S(1385, 2200) ,S(1402, 2167) ,S(1401, 2153) ,
		S(1334, 2143) ,S(1373, 2134) ,S(1411, 2081) ,S(1402, 2147) ,S(1390, 2145) ,S(1407, 2123) ,S(1413, 2117) ,S(1411, 2121) ,
		S(1356, 2109) ,S(1382, 2083) ,S(1384, 2088) ,S(1393, 2124) ,S(1399, 2126) ,S(1392, 2106) ,S(1384, 2147) ,S(1394, 2096) ,
	},
	{
		S(1379, 2311) ,S(1403, 2334) ,S(1387, 2356) ,S(1334, 2352) ,S(1346, 2330) ,S(1336, 2323) ,S(1347, 2298) ,S(1310, 2307) ,
		S(1381, 2329) ,S(1315, 2394) ,S(1418, 2336) ,S(1268, 2408) ,S(1275, 2362) ,S(1331, 2297) ,S(1274, 2336) ,S(1336, 2278) ,
		S(1336, 2387) ,S(1331, 2391) ,S(1337, 2378) ,S(1345, 2338) ,S(1337, 2305) ,S(1327, 2288) ,S(1337, 2269) ,S(1334, 2277) ,
		S(1369, 2348) ,S(1364, 2381) ,S(1349, 2382) ,S(1315, 2384) ,S(1318, 2358) ,S(1337, 2280) ,S(1342, 2299) ,S(1347, 2261) ,
		S(1375, 2313) ,S(1367, 2325) ,S(1355, 2346) ,S(1335, 2359) ,S(1336, 2364) ,S(1349, 2300) ,S(1364, 2283) ,S(1359, 2240) ,
		S(1380, 2242) ,S(1381, 2264) ,S(1362, 2305) ,S(1360, 2273) ,S(1359, 2280) ,S(1364, 2285) ,S(1378, 2245) ,S(1366, 2219) ,
		S(1358, 2225) ,S(1389, 2173) ,S(1397, 2169) ,S(1379, 2226) ,S(1378, 2239) ,S(1384, 2197) ,S(1377, 2215) ,S(1372, 2207) ,
		S(1365, 2164) ,S(1362, 2170) ,S(1367, 2187) ,S(1389, 2191) ,S(1391, 2227) ,S(1384, 2201) ,S(1377, 2204) ,S(1372, 2206) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-34, -189)  ,S(74, -92)    ,S(74, -70)    ,S(99, -50)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-16, -34)   ,S(92, 25)     ,S(137, 16)    ,S(145, -1)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(38, 5)      ,S(118, 48)    ,S(147, 51)    ,S(127, 45)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-28, 16)    ,S(73, 45)     ,S(87, 62)     ,S(67, 71)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-29, -21)   ,S(32, 29)     ,S(52, 53)     ,S(9, 70)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-41, -24)   ,S(-24, 10)    ,S(-10, 32)    ,S(-27, 52)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(23, -63)    ,S(-26, -17)   ,S(-55, 16)    ,S(-96, 24)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(26, -153)   ,S(2, -75)     ,S(-48, -33)   ,S(-68, -53)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(10, -187)   ,S(23, 1)      ,S(65, -33)    ,S(86, -40)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-43, -33)   ,S(46, 68)     ,S(138, 10)    ,S(160, 2)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(20, 14)     ,S(185, 52)    ,S(250, 37)    ,S(148, 38)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-57, 19)    ,S(90, 45)     ,S(116, 66)    ,S(76, 75)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-62, -13)   ,S(32, 27)     ,S(42, 59)     ,S(31, 77)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-32, -15)   ,S(-17, 14)    ,S(-4, 43)     ,S(-11, 61)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(31, -52)    ,S(-15, -5)    ,S(-54, 29)    ,S(-81, 33)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(33, -138)   ,S(-3, -52)    ,S(-52, -17)   ,S(-60, -48)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(108, 203), S(465, 657), S(476, 697), S(637, 1215), S(1358, 2211), };
constexpr PScore knightMob[9] = {S(-41, -159), S(-22, -84), S(-11, -35), S(-4, -8), S(2, 5), S(7, 20), S(14, 20), S(24, 15), S(35, -8), };
constexpr PScore bishopMob[14] = {S(-61, -206), S(-33, -133), S(-17, -81), S(-9, -52), S(2, -30), S(6, -9), S(11, 5), S(11, 14), S(13, 24), S(21, 27), S(29, 20), S(55, 5), S(64, 12), S(86, -32), };
constexpr PScore rookMob[15] = {S(-25, -144), S(-33, -101), S(-25, -65), S(-24, -45), S(-23, -26), S(-25, -9), S(-21, 2), S(-16, 3), S(-12, 9), S(-4, 15), S(-4, 22), S(1, 27), S(2, 30), S(19, 12), S(81, -23), };
constexpr PScore queenMob[28] = {S(-147, -389), S(-108, -402), S(-70, -314), S(-51, -229), S(-48, -131), S(-45, -74), S(-41, -35), S(-37, -15), S(-34, 7), S(-29, 21), S(-25, 30), S(-20, 36), S(-16, 39), S(-12, 43), S(-10, 44), S(-7, 43), S(-8, 40), S(-11, 40), S(-7, 35), S(-4, 24), S(10, -2), S(18, -24), S(17, -41), S(30, -68), S(6, -73), S(11, -102), S(-20, -74), S(-33, -37), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 830.4420166015625;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.9159793853759766;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 200.08270263671875;
constexpr double KSBEG = 1;
constexpr double KSCEG = -0.3122755289077759;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);