#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,
		S(186, 401)   ,S(166, 417)   ,S(126, 395)   ,S(184, 294)   ,S(230, 189)   ,S(222, 133)   ,S(63, 176)    ,S(40, 196)    ,
		S(95, 383)    ,S(124, 372)   ,S(123, 329)   ,S(138, 246)   ,S(187, 171)   ,S(212, 166)   ,S(158, 189)   ,S(103, 223)   ,
		S(111, 287)   ,S(112, 267)   ,S(115, 240)   ,S(119, 212)   ,S(142, 188)   ,S(139, 186)   ,S(85, 212)    ,S(74, 222)    ,
		S(115, 240)   ,S(112, 239)   ,S(115, 218)   ,S(112, 208)   ,S(115, 194)   ,S(102, 200)   ,S(70, 209)    ,S(55, 221)    ,
		S(124, 216)   ,S(143, 213)   ,S(118, 222)   ,S(112, 217)   ,S(102, 209)   ,S(89, 210)    ,S(58, 214)    ,S(55, 221)    ,
		S(125, 212)   ,S(157, 208)   ,S(138, 220)   ,S(95, 230)    ,S(84, 221)    ,S(73, 222)    ,S(53, 224)    ,S(53, 229)    ,
		S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,
	},
	{
		S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,
		S(23, 251)    ,S(35, 224)    ,S(221, 168)   ,S(207, 185)   ,S(191, 223)   ,S(154, 280)   ,S(116, 334)   ,S(158, 323)   ,
		S(125, 235)   ,S(168, 222)   ,S(230, 190)   ,S(161, 179)   ,S(143, 190)   ,S(125, 248)   ,S(102, 292)   ,S(85, 311)    ,
		S(103, 224)   ,S(107, 220)   ,S(145, 193)   ,S(138, 191)   ,S(126, 175)   ,S(108, 210)   ,S(101, 232)   ,S(90, 255)    ,
		S(95, 208)    ,S(102, 211)   ,S(119, 206)   ,S(118, 197)   ,S(115, 188)   ,S(106, 199)   ,S(88, 220)    ,S(83, 231)    ,
		S(107, 197)   ,S(123, 202)   ,S(109, 226)   ,S(122, 218)   ,S(110, 199)   ,S(102, 206)   ,S(94, 209)    ,S(87, 219)    ,
		S(108, 180)   ,S(138, 206)   ,S(130, 236)   ,S(96, 236)    ,S(99, 213)    ,S(91, 211)    ,S(90, 212)    ,S(85, 226)    ,
		S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(291, 627)   ,S(324, 700)   ,S(348, 737)   ,S(476, 695)   ,S(475, 687)   ,S(363, 717)   ,S(438, 678)   ,S(314, 574)   ,
		S(458, 670)   ,S(482, 698)   ,S(522, 690)   ,S(555, 719)   ,S(550, 705)   ,S(551, 676)   ,S(490, 682)   ,S(511, 655)   ,
		S(427, 701)   ,S(495, 703)   ,S(519, 740)   ,S(530, 735)   ,S(548, 721)   ,S(544, 718)   ,S(512, 688)   ,S(510, 673)   ,
		S(473, 715)   ,S(505, 718)   ,S(531, 743)   ,S(544, 752)   ,S(542, 757)   ,S(534, 737)   ,S(517, 723)   ,S(518, 709)   ,
		S(472, 726)   ,S(496, 729)   ,S(499, 752)   ,S(506, 757)   ,S(520, 754)   ,S(514, 740)   ,S(523, 724)   ,S(499, 725)   ,
		S(429, 691)   ,S(448, 713)   ,S(463, 726)   ,S(465, 751)   ,S(478, 751)   ,S(458, 731)   ,S(461, 706)   ,S(439, 694)   ,
		S(411, 707)   ,S(410, 718)   ,S(430, 702)   ,S(438, 723)   ,S(448, 723)   ,S(442, 709)   ,S(415, 723)   ,S(418, 712)   ,
		S(388, 660)   ,S(393, 709)   ,S(415, 705)   ,S(423, 722)   ,S(423, 716)   ,S(419, 699)   ,S(419, 697)   ,S(389, 695)   ,
	},
	{
		S(321, 602)   ,S(427, 723)   ,S(363, 777)   ,S(475, 747)   ,S(428, 759)   ,S(311, 789)   ,S(321, 745)   ,S(237, 673)   ,
		S(512, 708)   ,S(468, 731)   ,S(565, 715)   ,S(538, 764)   ,S(520, 769)   ,S(487, 740)   ,S(445, 743)   ,S(440, 720)   ,
		S(490, 725)   ,S(484, 749)   ,S(554, 763)   ,S(529, 769)   ,S(507, 779)   ,S(493, 783)   ,S(459, 749)   ,S(428, 730)   ,
		S(497, 757)   ,S(506, 774)   ,S(530, 778)   ,S(516, 813)   ,S(513, 801)   ,S(503, 783)   ,S(485, 757)   ,S(466, 749)   ,
		S(478, 776)   ,S(514, 765)   ,S(498, 787)   ,S(501, 806)   ,S(489, 802)   ,S(482, 790)   ,S(471, 767)   ,S(462, 755)   ,
		S(439, 732)   ,S(456, 748)   ,S(455, 760)   ,S(464, 788)   ,S(466, 787)   ,S(456, 766)   ,S(451, 738)   ,S(440, 704)   ,
		S(425, 755)   ,S(422, 750)   ,S(432, 736)   ,S(439, 761)   ,S(442, 761)   ,S(433, 736)   ,S(427, 743)   ,S(415, 736)   ,
		S(385, 715)   ,S(420, 723)   ,S(422, 744)   ,S(421, 750)   ,S(429, 750)   ,S(427, 718)   ,S(430, 704)   ,S(401, 689)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(426, 811)   ,S(384, 802)   ,S(394, 791)   ,S(353, 802)   ,S(339, 789)   ,S(348, 779)   ,S(495, 766)   ,S(433, 784)   ,
		S(434, 791)   ,S(442, 801)   ,S(473, 786)   ,S(425, 784)   ,S(441, 773)   ,S(502, 749)   ,S(467, 764)   ,S(423, 758)   ,
		S(482, 786)   ,S(502, 784)   ,S(489, 785)   ,S(486, 775)   ,S(508, 757)   ,S(517, 761)   ,S(497, 753)   ,S(492, 771)   ,
		S(480, 784)   ,S(495, 777)   ,S(488, 783)   ,S(495, 785)   ,S(520, 767)   ,S(494, 751)   ,S(506, 766)   ,S(480, 769)   ,
		S(473, 771)   ,S(490, 767)   ,S(490, 776)   ,S(508, 774)   ,S(496, 771)   ,S(490, 766)   ,S(492, 754)   ,S(478, 768)   ,
		S(477, 758)   ,S(508, 759)   ,S(503, 767)   ,S(487, 765)   ,S(490, 770)   ,S(475, 765)   ,S(481, 761)   ,S(467, 765)   ,
		S(492, 745)   ,S(518, 744)   ,S(491, 752)   ,S(474, 762)   ,S(463, 767)   ,S(470, 757)   ,S(468, 749)   ,S(476, 758)   ,
		S(489, 748)   ,S(451, 761)   ,S(460, 770)   ,S(453, 766)   ,S(451, 766)   ,S(451, 778)   ,S(465, 773)   ,S(482, 754)   ,
	},
	{
		S(415, 805)   ,S(447, 793)   ,S(325, 814)   ,S(351, 821)   ,S(335, 837)   ,S(345, 825)   ,S(405, 826)   ,S(419, 837)   ,
		S(438, 791)   ,S(427, 801)   ,S(460, 793)   ,S(431, 801)   ,S(425, 812)   ,S(458, 810)   ,S(445, 822)   ,S(416, 825)   ,
		S(464, 810)   ,S(473, 804)   ,S(480, 812)   ,S(487, 794)   ,S(467, 798)   ,S(482, 807)   ,S(467, 818)   ,S(472, 813)   ,
		S(455, 808)   ,S(480, 807)   ,S(483, 797)   ,S(484, 814)   ,S(489, 810)   ,S(464, 801)   ,S(479, 807)   ,S(451, 819)   ,
		S(465, 791)   ,S(476, 795)   ,S(471, 807)   ,S(486, 809)   ,S(475, 808)   ,S(473, 809)   ,S(472, 793)   ,S(460, 798)   ,
		S(471, 794)   ,S(475, 788)   ,S(470, 797)   ,S(468, 806)   ,S(474, 802)   ,S(472, 799)   ,S(490, 790)   ,S(468, 788)   ,
		S(469, 756)   ,S(483, 773)   ,S(466, 784)   ,S(455, 800)   ,S(458, 794)   ,S(475, 778)   ,S(481, 764)   ,S(486, 779)   ,
		S(469, 764)   ,S(443, 785)   ,S(447, 802)   ,S(441, 795)   ,S(451, 788)   ,S(457, 796)   ,S(478, 788)   ,S(492, 770)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(679, 1299)  ,S(651, 1320)  ,S(632, 1326)  ,S(603, 1331)  ,S(619, 1320)  ,S(668, 1304)  ,S(647, 1311)  ,S(629, 1325)  ,
		S(645, 1299)  ,S(641, 1308)  ,S(649, 1303)  ,S(635, 1312)  ,S(633, 1303)  ,S(654, 1288)  ,S(615, 1298)  ,S(618, 1292)  ,
		S(634, 1292)  ,S(685, 1272)  ,S(658, 1291)  ,S(668, 1274)  ,S(675, 1264)  ,S(656, 1276)  ,S(697, 1255)  ,S(624, 1284)  ,
		S(621, 1289)  ,S(636, 1287)  ,S(658, 1279)  ,S(658, 1278)  ,S(655, 1268)  ,S(643, 1267)  ,S(653, 1264)  ,S(630, 1269)  ,
		S(586, 1276)  ,S(615, 1283)  ,S(589, 1296)  ,S(592, 1289)  ,S(592, 1274)  ,S(597, 1272)  ,S(601, 1275)  ,S(583, 1268)  ,
		S(565, 1250)  ,S(605, 1260)  ,S(582, 1265)  ,S(586, 1262)  ,S(587, 1253)  ,S(590, 1250)  ,S(605, 1252)  ,S(583, 1241)  ,
		S(526, 1256)  ,S(577, 1248)  ,S(591, 1251)  ,S(585, 1252)  ,S(589, 1245)  ,S(598, 1237)  ,S(608, 1229)  ,S(558, 1247)  ,
		S(559, 1258)  ,S(576, 1267)  ,S(603, 1263)  ,S(602, 1252)  ,S(601, 1243)  ,S(611, 1243)  ,S(617, 1241)  ,S(592, 1245)  ,
	},
	{
		S(656, 1367)  ,S(650, 1373)  ,S(655, 1376)  ,S(585, 1381)  ,S(601, 1377)  ,S(583, 1391)  ,S(617, 1380)  ,S(623, 1373)  ,
		S(634, 1344)  ,S(636, 1356)  ,S(673, 1339)  ,S(620, 1366)  ,S(636, 1365)  ,S(618, 1368)  ,S(595, 1376)  ,S(605, 1367)  ,
		S(641, 1329)  ,S(720, 1300)  ,S(700, 1319)  ,S(680, 1312)  ,S(669, 1321)  ,S(632, 1345)  ,S(655, 1332)  ,S(597, 1355)  ,
		S(631, 1323)  ,S(663, 1315)  ,S(666, 1315)  ,S(656, 1320)  ,S(667, 1320)  ,S(636, 1334)  ,S(625, 1336)  ,S(600, 1341)  ,
		S(592, 1306)  ,S(629, 1322)  ,S(604, 1328)  ,S(599, 1324)  ,S(604, 1326)  ,S(585, 1339)  ,S(580, 1346)  ,S(579, 1326)  ,
		S(590, 1272)  ,S(630, 1294)  ,S(603, 1300)  ,S(596, 1300)  ,S(599, 1302)  ,S(578, 1314)  ,S(586, 1318)  ,S(573, 1304)  ,
		S(521, 1291)  ,S(618, 1275)  ,S(612, 1282)  ,S(598, 1290)  ,S(598, 1291)  ,S(586, 1300)  ,S(584, 1295)  ,S(552, 1302)  ,
		S(583, 1271)  ,S(604, 1295)  ,S(613, 1305)  ,S(609, 1288)  ,S(609, 1290)  ,S(598, 1303)  ,S(592, 1303)  ,S(594, 1297)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1173, 2252) ,S(1197, 2265) ,S(1194, 2272) ,S(1196, 2289) ,S(1195, 2300) ,S(1287, 2222) ,S(1226, 2233) ,S(1239, 2199) ,
		S(1186, 2254) ,S(1129, 2313) ,S(1176, 2287) ,S(1117, 2350) ,S(1122, 2374) ,S(1279, 2233) ,S(1188, 2247) ,S(1218, 2210) ,
		S(1187, 2267) ,S(1198, 2235) ,S(1186, 2261) ,S(1188, 2272) ,S(1221, 2278) ,S(1257, 2255) ,S(1286, 2179) ,S(1254, 2226) ,
		S(1205, 2234) ,S(1176, 2301) ,S(1175, 2277) ,S(1173, 2317) ,S(1194, 2292) ,S(1224, 2260) ,S(1247, 2257) ,S(1237, 2232) ,
		S(1198, 2229) ,S(1204, 2281) ,S(1186, 2299) ,S(1195, 2322) ,S(1193, 2297) ,S(1211, 2282) ,S(1229, 2237) ,S(1226, 2224) ,
		S(1186, 2232) ,S(1213, 2233) ,S(1211, 2258) ,S(1206, 2251) ,S(1207, 2245) ,S(1215, 2251) ,S(1231, 2209) ,S(1229, 2206) ,
		S(1165, 2200) ,S(1205, 2183) ,S(1245, 2129) ,S(1231, 2206) ,S(1218, 2209) ,S(1233, 2184) ,S(1237, 2175) ,S(1235, 2181) ,
		S(1188, 2163) ,S(1210, 2138) ,S(1209, 2153) ,S(1217, 2194) ,S(1226, 2188) ,S(1220, 2165) ,S(1210, 2206) ,S(1219, 2157) ,
	},
	{
		S(1249, 2316) ,S(1254, 2356) ,S(1246, 2370) ,S(1192, 2373) ,S(1181, 2379) ,S(1165, 2381) ,S(1169, 2358) ,S(1127, 2377) ,
		S(1246, 2336) ,S(1151, 2435) ,S(1264, 2352) ,S(1112, 2441) ,S(1092, 2435) ,S(1140, 2382) ,S(1088, 2418) ,S(1149, 2362) ,
		S(1202, 2394) ,S(1239, 2350) ,S(1238, 2355) ,S(1186, 2375) ,S(1154, 2378) ,S(1142, 2376) ,S(1148, 2365) ,S(1149, 2362) ,
		S(1220, 2361) ,S(1220, 2386) ,S(1200, 2397) ,S(1157, 2411) ,S(1145, 2413) ,S(1150, 2364) ,S(1158, 2386) ,S(1162, 2346) ,
		S(1218, 2341) ,S(1220, 2336) ,S(1201, 2372) ,S(1176, 2395) ,S(1169, 2416) ,S(1178, 2364) ,S(1186, 2362) ,S(1181, 2319) ,
		S(1222, 2277) ,S(1225, 2292) ,S(1202, 2341) ,S(1193, 2327) ,S(1187, 2343) ,S(1189, 2356) ,S(1202, 2321) ,S(1189, 2298) ,
		S(1193, 2279) ,S(1223, 2228) ,S(1231, 2224) ,S(1210, 2290) ,S(1207, 2308) ,S(1211, 2264) ,S(1201, 2286) ,S(1195, 2282) ,
		S(1196, 2225) ,S(1192, 2230) ,S(1198, 2244) ,S(1220, 2255) ,S(1218, 2301) ,S(1211, 2271) ,S(1204, 2267) ,S(1197, 2275) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-9, -184)   ,S(83, -86)    ,S(71, -58)    ,S(83, -39)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-12, -25)   ,S(71, 40)     ,S(131, 23)    ,S(124, 3)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(40, 5)      ,S(124, 47)    ,S(143, 47)    ,S(116, 33)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-17, 7)     ,S(83, 34)     ,S(85, 51)     ,S(47, 57)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-16, -37)   ,S(56, 10)     ,S(55, 41)     ,S(-3, 61)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-51, -26)   ,S(-13, 3)     ,S(1, 25)      ,S(-31, 49)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(4, -50)     ,S(-23, -13)   ,S(-52, 19)    ,S(-93, 32)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(14, -136)   ,S(7, -68)     ,S(-46, -24)   ,S(-63, -37)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(15, -204)   ,S(-7, 10)     ,S(50, -25)    ,S(79, -41)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-33, -43)   ,S(41, 66)     ,S(117, 7)     ,S(146, -7)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(25, 4)      ,S(180, 37)    ,S(233, 15)    ,S(137, 17)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-36, 9)     ,S(111, 25)    ,S(122, 44)    ,S(60, 54)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-49, -23)   ,S(62, 16)     ,S(53, 50)     ,S(24, 68)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-41, -13)   ,S(-4, 15)     ,S(6, 42)      ,S(-9, 58)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(9, -34)     ,S(-8, 4)      ,S(-52, 39)    ,S(-74, 40)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(18, -120)   ,S(1, -42)     ,S(-51, -3)    ,S(-53, -36)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(106, 207), S(434, 691), S(439, 735), S(594, 1261), S(1191, 2254), };
constexpr PScore knightMob[9] = {S(-40, -155), S(-20, -81), S(-7, -33), S(-1, -7), S(5, 5), S(11, 19), S(18, 19), S(29, 13), S(40, -10), };
constexpr PScore bishopMob[14] = {S(-57, -203), S(-29, -131), S(-11, -81), S(-2, -51), S(9, -29), S(14, -9), S(17, 7), S(17, 17), S(20, 29), S(26, 33), S(35, 27), S(61, 15), S(71, 22), S(99, -24), };
constexpr PScore rookMob[15] = {S(-29, -128), S(-37, -88), S(-26, -57), S(-24, -38), S(-23, -20), S(-24, -3), S(-22, 7), S(-16, 9), S(-12, 14), S(-4, 19), S(-4, 26), S(2, 31), S(5, 35), S(23, 12), S(89, -26), };
constexpr PScore queenMob[28] = {S(-152, -360), S(-111, -371), S(-70, -288), S(-50, -203), S(-46, -107), S(-43, -51), S(-39, -15), S(-35, 3), S(-31, 24), S(-26, 37), S(-21, 45), S(-16, 49), S(-11, 52), S(-7, 54), S(-3, 55), S(-2, 52), S(-1, 48), S(-1, 47), S(5, 37), S(11, 23), S(31, -10), S(43, -38), S(51, -65), S(69, -97), S(57, -116), S(73, -160), S(65, -156), S(65, -137), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 656.5933227539062;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -0.7096002697944641;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 732.9669799804688;
constexpr double KSBEG = 1;
constexpr double KSCEG = -3.0658583641052246;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);