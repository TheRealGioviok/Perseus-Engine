#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,
		S(233, 417)   ,S(210, 427)   ,S(161, 400)   ,S(198, 286)   ,S(225, 160)   ,S(178, 87)    ,S(-5, 157)    ,S(-7, 199)    ,
		S(100, 399)   ,S(128, 388)   ,S(118, 346)   ,S(130, 250)   ,S(175, 157)   ,S(217, 141)   ,S(162, 172)   ,S(107, 212)   ,
		S(117, 287)   ,S(117, 264)   ,S(115, 243)   ,S(115, 212)   ,S(140, 185)   ,S(137, 182)   ,S(84, 213)    ,S(79, 213)    ,
		S(122, 232)   ,S(116, 228)   ,S(117, 215)   ,S(113, 207)   ,S(114, 195)   ,S(104, 203)   ,S(74, 212)    ,S(64, 215)    ,
		S(133, 203)   ,S(149, 198)   ,S(123, 213)   ,S(115, 214)   ,S(104, 210)   ,S(90, 215)    ,S(62, 220)    ,S(62, 219)    ,
		S(132, 198)   ,S(164, 191)   ,S(144, 208)   ,S(100, 223)   ,S(87, 220)    ,S(77, 221)    ,S(59, 225)    ,S(60, 223)    ,
		S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,
	},
	{
		S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,
		S(-39, 256)   ,S(-53, 213)   ,S(182, 130)   ,S(229, 150)   ,S(223, 206)   ,S(200, 280)   ,S(178, 340)   ,S(226, 335)   ,
		S(120, 233)   ,S(158, 221)   ,S(225, 187)   ,S(149, 175)   ,S(137, 191)   ,S(130, 252)   ,S(113, 298)   ,S(100, 317)   ,
		S(98, 222)    ,S(100, 224)   ,S(137, 197)   ,S(133, 191)   ,S(122, 175)   ,S(110, 204)   ,S(107, 222)   ,S(103, 248)   ,
		S(92, 207)    ,S(98, 215)    ,S(116, 209)   ,S(116, 198)   ,S(114, 186)   ,S(108, 190)   ,S(97, 208)    ,S(96, 220)    ,
		S(105, 195)   ,S(120, 204)   ,S(110, 226)   ,S(122, 217)   ,S(111, 196)   ,S(107, 197)   ,S(103, 198)   ,S(99, 208)    ,
		S(108, 174)   ,S(138, 202)   ,S(134, 231)   ,S(100, 232)   ,S(101, 207)   ,S(95, 202)    ,S(99, 199)    ,S(96, 215)    ,
		S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,S(108, 203)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(320, 598)   ,S(357, 668)   ,S(383, 704)   ,S(507, 668)   ,S(502, 663)   ,S(392, 693)   ,S(467, 652)   ,S(342, 560)   ,
		S(487, 643)   ,S(510, 666)   ,S(548, 663)   ,S(585, 691)   ,S(574, 681)   ,S(571, 651)   ,S(512, 661)   ,S(529, 633)   ,
		S(459, 673)   ,S(525, 675)   ,S(548, 712)   ,S(555, 711)   ,S(565, 699)   ,S(547, 700)   ,S(515, 673)   ,S(524, 652)   ,
		S(507, 687)   ,S(538, 687)   ,S(563, 713)   ,S(572, 726)   ,S(570, 729)   ,S(556, 715)   ,S(539, 703)   ,S(547, 681)   ,
		S(508, 694)   ,S(531, 694)   ,S(534, 717)   ,S(541, 724)   ,S(554, 723)   ,S(547, 710)   ,S(555, 694)   ,S(534, 691)   ,
		S(466, 658)   ,S(483, 678)   ,S(499, 695)   ,S(501, 718)   ,S(514, 717)   ,S(494, 693)   ,S(498, 670)   ,S(477, 656)   ,
		S(449, 671)   ,S(448, 685)   ,S(468, 667)   ,S(477, 687)   ,S(487, 688)   ,S(480, 671)   ,S(451, 688)   ,S(453, 681)   ,
		S(428, 623)   ,S(435, 671)   ,S(458, 667)   ,S(465, 686)   ,S(464, 678)   ,S(458, 661)   ,S(459, 660)   ,S(426, 657)   ,
	},
	{
		S(348, 583)   ,S(446, 707)   ,S(385, 757)   ,S(500, 725)   ,S(457, 732)   ,S(338, 760)   ,S(347, 714)   ,S(265, 644)   ,
		S(523, 695)   ,S(483, 713)   ,S(575, 699)   ,S(559, 742)   ,S(543, 743)   ,S(517, 707)   ,S(473, 707)   ,S(468, 684)   ,
		S(494, 719)   ,S(478, 750)   ,S(549, 756)   ,S(544, 751)   ,S(530, 756)   ,S(525, 750)   ,S(492, 714)   ,S(461, 693)   ,
		S(517, 746)   ,S(521, 767)   ,S(544, 769)   ,S(541, 790)   ,S(538, 778)   ,S(535, 747)   ,S(519, 716)   ,S(499, 710)   ,
		S(506, 754)   ,S(535, 751)   ,S(526, 762)   ,S(530, 777)   ,S(519, 767)   ,S(515, 750)   ,S(506, 725)   ,S(496, 714)   ,
		S(472, 703)   ,S(484, 722)   ,S(487, 731)   ,S(496, 756)   ,S(497, 754)   ,S(488, 728)   ,S(484, 697)   ,S(473, 667)   ,
		S(459, 720)   ,S(454, 721)   ,S(463, 705)   ,S(473, 725)   ,S(476, 724)   ,S(465, 700)   ,S(460, 705)   ,S(448, 699)   ,
		S(422, 683)   ,S(456, 686)   ,S(459, 709)   ,S(457, 715)   ,S(465, 714)   ,S(461, 682)   ,S(465, 668)   ,S(433, 658)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(472, 763)   ,S(425, 757)   ,S(435, 747)   ,S(396, 758)   ,S(383, 744)   ,S(387, 741)   ,S(526, 734)   ,S(469, 755)   ,
		S(471, 755)   ,S(483, 754)   ,S(515, 739)   ,S(470, 739)   ,S(482, 728)   ,S(538, 707)   ,S(489, 733)   ,S(456, 723)   ,
		S(522, 751)   ,S(542, 742)   ,S(532, 742)   ,S(525, 737)   ,S(546, 718)   ,S(545, 727)   ,S(522, 722)   ,S(529, 733)   ,
		S(520, 750)   ,S(537, 740)   ,S(529, 746)   ,S(535, 749)   ,S(561, 732)   ,S(535, 714)   ,S(547, 728)   ,S(521, 728)   ,
		S(517, 733)   ,S(528, 735)   ,S(530, 741)   ,S(550, 737)   ,S(540, 730)   ,S(534, 724)   ,S(536, 710)   ,S(522, 722)   ,
		S(520, 723)   ,S(548, 727)   ,S(544, 733)   ,S(531, 728)   ,S(532, 729)   ,S(518, 723)   ,S(524, 720)   ,S(509, 724)   ,
		S(533, 713)   ,S(561, 708)   ,S(534, 718)   ,S(519, 723)   ,S(507, 725)   ,S(513, 714)   ,S(513, 703)   ,S(519, 713)   ,
		S(532, 714)   ,S(494, 726)   ,S(507, 732)   ,S(499, 725)   ,S(495, 727)   ,S(496, 736)   ,S(507, 734)   ,S(525, 713)   ,
	},
	{
		S(451, 771)   ,S(478, 763)   ,S(366, 774)   ,S(394, 779)   ,S(373, 801)   ,S(375, 792)   ,S(435, 792)   ,S(452, 801)   ,
		S(468, 765)   ,S(452, 769)   ,S(495, 755)   ,S(466, 766)   ,S(458, 777)   ,S(492, 771)   ,S(476, 786)   ,S(447, 788)   ,
		S(493, 791)   ,S(491, 781)   ,S(501, 788)   ,S(521, 761)   ,S(501, 767)   ,S(518, 771)   ,S(502, 778)   ,S(509, 775)   ,
		S(488, 783)   ,S(512, 782)   ,S(513, 771)   ,S(519, 784)   ,S(522, 781)   ,S(502, 764)   ,S(517, 769)   ,S(489, 779)   ,
		S(501, 761)   ,S(510, 765)   ,S(506, 774)   ,S(522, 775)   ,S(512, 774)   ,S(510, 772)   ,S(510, 754)   ,S(498, 757)   ,
		S(506, 763)   ,S(509, 758)   ,S(506, 765)   ,S(506, 771)   ,S(509, 768)   ,S(509, 764)   ,S(526, 752)   ,S(506, 752)   ,
		S(506, 722)   ,S(521, 738)   ,S(505, 747)   ,S(494, 761)   ,S(495, 759)   ,S(512, 744)   ,S(518, 727)   ,S(520, 743)   ,
		S(508, 725)   ,S(483, 746)   ,S(488, 765)   ,S(481, 759)   ,S(488, 754)   ,S(494, 762)   ,S(513, 757)   ,S(528, 738)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(730, 1258)  ,S(702, 1278)  ,S(683, 1284)  ,S(653, 1289)  ,S(662, 1282)  ,S(718, 1255)  ,S(705, 1258)  ,S(683, 1272)  ,
		S(693, 1254)  ,S(692, 1262)  ,S(700, 1258)  ,S(688, 1265)  ,S(684, 1259)  ,S(693, 1244)  ,S(663, 1247)  ,S(666, 1242)  ,
		S(678, 1248)  ,S(739, 1222)  ,S(706, 1245)  ,S(721, 1222)  ,S(731, 1212)  ,S(701, 1228)  ,S(749, 1200)  ,S(678, 1228)  ,
		S(664, 1245)  ,S(681, 1241)  ,S(702, 1235)  ,S(704, 1232)  ,S(702, 1223)  ,S(690, 1223)  ,S(703, 1213)  ,S(682, 1217)  ,
		S(630, 1233)  ,S(660, 1239)  ,S(635, 1253)  ,S(636, 1247)  ,S(639, 1233)  ,S(645, 1231)  ,S(652, 1229)  ,S(632, 1220)  ,
		S(611, 1199)  ,S(654, 1207)  ,S(632, 1217)  ,S(637, 1212)  ,S(640, 1204)  ,S(642, 1203)  ,S(659, 1200)  ,S(635, 1189)  ,
		S(571, 1208)  ,S(626, 1197)  ,S(641, 1204)  ,S(636, 1204)  ,S(642, 1198)  ,S(650, 1189)  ,S(661, 1178)  ,S(612, 1192)  ,
		S(609, 1205)  ,S(627, 1214)  ,S(655, 1213)  ,S(653, 1201)  ,S(653, 1193)  ,S(663, 1195)  ,S(669, 1191)  ,S(645, 1192)  ,
	},
	{
		S(687, 1329)  ,S(688, 1333)  ,S(695, 1338)  ,S(629, 1344)  ,S(654, 1332)  ,S(632, 1346)  ,S(670, 1333)  ,S(674, 1328)  ,
		S(659, 1310)  ,S(669, 1315)  ,S(702, 1305)  ,S(657, 1332)  ,S(685, 1317)  ,S(665, 1321)  ,S(641, 1329)  ,S(650, 1319)  ,
		S(673, 1293)  ,S(751, 1265)  ,S(732, 1283)  ,S(720, 1271)  ,S(714, 1271)  ,S(676, 1296)  ,S(699, 1280)  ,S(643, 1303)  ,
		S(664, 1290)  ,S(693, 1287)  ,S(699, 1286)  ,S(692, 1285)  ,S(707, 1274)  ,S(677, 1285)  ,S(667, 1284)  ,S(644, 1290)  ,
		S(622, 1278)  ,S(659, 1294)  ,S(639, 1300)  ,S(634, 1292)  ,S(643, 1282)  ,S(626, 1292)  ,S(623, 1295)  ,S(622, 1276)  ,
		S(625, 1236)  ,S(663, 1263)  ,S(641, 1266)  ,S(636, 1261)  ,S(642, 1252)  ,S(622, 1263)  ,S(630, 1265)  ,S(616, 1252)  ,
		S(556, 1253)  ,S(655, 1239)  ,S(651, 1247)  ,S(637, 1251)  ,S(641, 1244)  ,S(629, 1251)  ,S(628, 1244)  ,S(594, 1252)  ,
		S(622, 1230)  ,S(642, 1257)  ,S(653, 1267)  ,S(648, 1249)  ,S(652, 1244)  ,S(641, 1254)  ,S(635, 1254)  ,S(637, 1249)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1366, 1355) ,S(1391, 1368) ,S(1370, 1396) ,S(1343, 1448) ,S(1349, 1446) ,S(1411, 1407) ,S(1371, 1405) ,S(1384, 1358) ,
		S(1365, 1376) ,S(1306, 1431) ,S(1348, 1414) ,S(1288, 1480) ,S(1286, 1509) ,S(1430, 1395) ,S(1342, 1403) ,S(1359, 1373) ,
		S(1359, 1394) ,S(1371, 1357) ,S(1358, 1385) ,S(1358, 1403) ,S(1375, 1427) ,S(1353, 1456) ,S(1395, 1373) ,S(1404, 1375) ,
		S(1374, 1363) ,S(1348, 1425) ,S(1347, 1404) ,S(1337, 1455) ,S(1351, 1444) ,S(1382, 1409) ,S(1407, 1400) ,S(1397, 1377) ,
		S(1363, 1360) ,S(1365, 1416) ,S(1348, 1435) ,S(1358, 1459) ,S(1355, 1437) ,S(1375, 1422) ,S(1394, 1381) ,S(1393, 1364) ,
		S(1352, 1359) ,S(1377, 1363) ,S(1375, 1391) ,S(1374, 1380) ,S(1376, 1369) ,S(1384, 1378) ,S(1401, 1346) ,S(1399, 1336) ,
		S(1332, 1327) ,S(1371, 1316) ,S(1410, 1264) ,S(1401, 1329) ,S(1389, 1326) ,S(1405, 1303) ,S(1412, 1295) ,S(1409, 1303) ,
		S(1355, 1292) ,S(1381, 1268) ,S(1383, 1271) ,S(1391, 1310) ,S(1399, 1308) ,S(1391, 1290) ,S(1383, 1328) ,S(1393, 1280) ,
	},
	{
		S(1375, 1495) ,S(1399, 1521) ,S(1378, 1544) ,S(1322, 1543) ,S(1339, 1516) ,S(1331, 1508) ,S(1342, 1482) ,S(1307, 1491) ,
		S(1374, 1514) ,S(1309, 1584) ,S(1408, 1526) ,S(1262, 1591) ,S(1270, 1547) ,S(1327, 1479) ,S(1270, 1518) ,S(1332, 1461) ,
		S(1334, 1566) ,S(1329, 1571) ,S(1332, 1559) ,S(1340, 1522) ,S(1332, 1490) ,S(1324, 1472) ,S(1334, 1452) ,S(1331, 1458) ,
		S(1367, 1527) ,S(1362, 1559) ,S(1347, 1562) ,S(1312, 1562) ,S(1315, 1540) ,S(1334, 1462) ,S(1339, 1480) ,S(1344, 1441) ,
		S(1371, 1492) ,S(1366, 1506) ,S(1352, 1527) ,S(1333, 1538) ,S(1333, 1544) ,S(1347, 1478) ,S(1360, 1462) ,S(1355, 1420) ,
		S(1377, 1422) ,S(1379, 1444) ,S(1359, 1484) ,S(1357, 1455) ,S(1357, 1462) ,S(1361, 1465) ,S(1375, 1425) ,S(1363, 1399) ,
		S(1354, 1406) ,S(1386, 1353) ,S(1394, 1352) ,S(1376, 1409) ,S(1374, 1421) ,S(1380, 1379) ,S(1373, 1395) ,S(1368, 1389) ,
		S(1361, 1347) ,S(1359, 1353) ,S(1363, 1372) ,S(1386, 1373) ,S(1387, 1410) ,S(1381, 1383) ,S(1373, 1384) ,S(1369, 1387) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-31, -192)  ,S(74, -92)    ,S(77, -72)    ,S(101, -52)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-22, -32)   ,S(91, 26)     ,S(134, 17)    ,S(146, -1)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(31, 7)      ,S(115, 48)    ,S(146, 51)    ,S(124, 46)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-33, 17)    ,S(74, 45)     ,S(88, 63)     ,S(67, 72)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-33, -20)   ,S(35, 29)     ,S(54, 54)     ,S(10, 74)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-43, -23)   ,S(-24, 11)    ,S(-9, 34)     ,S(-25, 54)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(20, -63)    ,S(-29, -17)   ,S(-58, 17)    ,S(-97, 25)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(23, -157)   ,S(-1, -76)    ,S(-52, -34)   ,S(-70, -53)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(7, -186)    ,S(21, 4)      ,S(69, -34)    ,S(89, -42)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-45, -31)   ,S(45, 69)     ,S(139, 11)    ,S(154, 5)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(17, 16)     ,S(182, 54)    ,S(252, 37)    ,S(145, 40)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-54, 21)    ,S(93, 46)     ,S(119, 68)    ,S(77, 78)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-61, -10)   ,S(40, 29)     ,S(46, 62)     ,S(32, 83)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-33, -14)   ,S(-15, 16)    ,S(-1, 45)     ,S(-9, 66)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(29, -55)    ,S(-18, -4)    ,S(-56, 32)    ,S(-82, 37)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(31, -143)   ,S(-7, -51)    ,S(-55, -16)   ,S(-64, -47)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(108, 203), S(462, 661), S(474, 699), S(636, 1215), S(1353, 1401), };
constexpr PScore knightMob[9] = {S(-42, -158), S(-23, -83), S(-12, -34), S(-5, -7), S(1, 5), S(6, 20), S(14, 21), S(23, 16), S(35, -8), };
constexpr PScore bishopMob[14] = {S(-62, -204), S(-34, -132), S(-18, -80), S(-10, -50), S(1, -29), S(5, -7), S(9, 8), S(10, 17), S(11, 29), S(18, 32), S(27, 27), S(52, 13), S(61, 21), S(83, -22), };
constexpr PScore rookMob[15] = {S(-25, -144), S(-33, -101), S(-26, -64), S(-24, -46), S(-24, -27), S(-25, -9), S(-22, 1), S(-17, 2), S(-12, 8), S(-5, 12), S(-5, 19), S(1, 25), S(3, 28), S(19, 8), S(82, -28), };
constexpr PScore queenMob[28] = {S(-143, -408), S(-103, -424), S(-66, -331), S(-46, -244), S(-43, -147), S(-41, -88), S(-37, -51), S(-33, -31), S(-30, -9), S(-25, 4), S(-21, 13), S(-16, 19), S(-11, 22), S(-8, 25), S(-5, 25), S(-3, 25), S(-4, 24), S(-7, 24), S(-3, 18), S(-1, 8), S(13, -18), S(21, -39), S(19, -52), S(29, -77), S(7, -83), S(18, -119), S(-10, -95), S(-36, -45), };
constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 842.6436157226562;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.8902876377105713;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 1083.18603515625;
constexpr double KSBEG = 1;
constexpr double KSCEG = 2.39056658744812;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);