#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,
		S(192, 264)   ,S(149, 266)   ,S(190, 212)   ,S(196, 168)   ,S(175, 175)   ,S(121, 223)   ,S(-79, 315)   ,S(-49, 326)   ,
		S(95, 298)    ,S(121, 276)   ,S(142, 231)   ,S(137, 189)   ,S(149, 198)   ,S(203, 233)   ,S(148, 273)   ,S(107, 281)   ,
		S(90, 250)    ,S(92, 232)    ,S(99, 213)    ,S(115, 184)   ,S(126, 199)   ,S(132, 213)   ,S(96, 239)    ,S(92, 236)    ,
		S(84, 223)    ,S(80, 215)    ,S(96, 197)    ,S(104, 189)   ,S(109, 196)   ,S(112, 205)   ,S(97, 210)    ,S(94, 207)    ,
		S(86, 212)    ,S(84, 206)    ,S(91, 204)    ,S(101, 201)   ,S(112, 216)   ,S(104, 219)   ,S(118, 195)   ,S(106, 191)   ,
		S(84, 222)    ,S(81, 213)    ,S(81, 214)    ,S(89, 216)    ,S(88, 238)    ,S(125, 231)   ,S(136, 204)   ,S(107, 183)   ,
		S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,
	},
	{
		S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,
		S(130, 325)   ,S(101, 333)   ,S(177, 295)   ,S(185, 222)   ,S(178, 206)   ,S(193, 186)   ,S(84, 261)    ,S(73, 266)    ,
		S(118, 316)   ,S(171, 309)   ,S(169, 278)   ,S(152, 231)   ,S(158, 204)   ,S(155, 233)   ,S(144, 253)   ,S(87, 275)    ,
		S(125, 246)   ,S(119, 244)   ,S(124, 228)   ,S(128, 209)   ,S(125, 207)   ,S(109, 220)   ,S(76, 244)    ,S(80, 246)    ,
		S(121, 213)   ,S(111, 217)   ,S(121, 205)   ,S(118, 205)   ,S(106, 199)   ,S(91, 212)    ,S(68, 222)    ,S(64, 227)    ,
		S(123, 201)   ,S(135, 193)   ,S(118, 212)   ,S(107, 216)   ,S(96, 212)    ,S(86, 211)    ,S(71, 216)    ,S(64, 219)    ,
		S(127, 200)   ,S(149, 197)   ,S(135, 223)   ,S(98, 236)    ,S(77, 227)    ,S(74, 226)    ,S(65, 227)    ,S(64, 228)    ,
		S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,S(100, 202)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(241, 580)   ,S(332, 655)   ,S(313, 704)   ,S(424, 673)   ,S(475, 669)   ,S(336, 705)   ,S(335, 669)   ,S(304, 552)   ,
		S(461, 625)   ,S(462, 650)   ,S(511, 651)   ,S(535, 689)   ,S(527, 690)   ,S(553, 643)   ,S(455, 657)   ,S(481, 628)   ,
		S(448, 637)   ,S(475, 664)   ,S(494, 704)   ,S(502, 707)   ,S(534, 701)   ,S(515, 710)   ,S(469, 685)   ,S(457, 662)   ,
		S(477, 660)   ,S(481, 673)   ,S(494, 706)   ,S(489, 733)   ,S(489, 743)   ,S(497, 725)   ,S(478, 718)   ,S(478, 693)   ,
		S(467, 665)   ,S(478, 678)   ,S(476, 705)   ,S(476, 717)   ,S(484, 730)   ,S(486, 717)   ,S(496, 698)   ,S(476, 695)   ,
		S(442, 617)   ,S(452, 651)   ,S(450, 678)   ,S(462, 707)   ,S(460, 704)   ,S(449, 680)   ,S(451, 667)   ,S(442, 646)   ,
		S(425, 636)   ,S(431, 652)   ,S(436, 647)   ,S(445, 672)   ,S(441, 674)   ,S(435, 649)   ,S(424, 659)   ,S(429, 666)   ,
		S(410, 593)   ,S(436, 613)   ,S(431, 627)   ,S(434, 662)   ,S(431, 666)   ,S(426, 659)   ,S(425, 640)   ,S(390, 626)   ,
	},
	{
		S(273, 539)   ,S(337, 643)   ,S(344, 689)   ,S(451, 660)   ,S(448, 657)   ,S(304, 695)   ,S(319, 659)   ,S(274, 551)   ,
		S(453, 623)   ,S(450, 658)   ,S(513, 655)   ,S(569, 669)   ,S(530, 677)   ,S(534, 646)   ,S(461, 646)   ,S(468, 616)   ,
		S(431, 659)   ,S(492, 671)   ,S(494, 710)   ,S(515, 708)   ,S(532, 696)   ,S(511, 697)   ,S(499, 650)   ,S(455, 637)   ,
		S(465, 675)   ,S(486, 691)   ,S(494, 717)   ,S(504, 726)   ,S(501, 726)   ,S(498, 704)   ,S(483, 688)   ,S(478, 661)   ,
		S(474, 679)   ,S(480, 690)   ,S(487, 708)   ,S(487, 718)   ,S(488, 718)   ,S(483, 707)   ,S(480, 682)   ,S(476, 660)   ,
		S(419, 650)   ,S(445, 663)   ,S(456, 679)   ,S(455, 701)   ,S(458, 701)   ,S(447, 675)   ,S(445, 645)   ,S(426, 618)   ,
		S(415, 674)   ,S(403, 675)   ,S(426, 655)   ,S(435, 667)   ,S(442, 670)   ,S(430, 650)   ,S(414, 657)   ,S(416, 630)   ,
		S(380, 643)   ,S(406, 644)   ,S(416, 656)   ,S(410, 665)   ,S(428, 652)   ,S(431, 620)   ,S(425, 620)   ,S(402, 584)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(416, 747)   ,S(394, 746)   ,S(339, 747)   ,S(332, 756)   ,S(356, 743)   ,S(321, 743)   ,S(424, 727)   ,S(410, 736)   ,
		S(415, 736)   ,S(476, 727)   ,S(472, 724)   ,S(440, 733)   ,S(468, 723)   ,S(463, 728)   ,S(434, 739)   ,S(434, 724)   ,
		S(474, 727)   ,S(478, 732)   ,S(503, 727)   ,S(484, 724)   ,S(497, 726)   ,S(491, 750)   ,S(475, 739)   ,S(464, 745)   ,
		S(460, 727)   ,S(497, 723)   ,S(480, 725)   ,S(503, 744)   ,S(505, 751)   ,S(499, 734)   ,S(502, 735)   ,S(453, 743)   ,
		S(472, 709)   ,S(481, 716)   ,S(474, 741)   ,S(492, 740)   ,S(500, 743)   ,S(477, 738)   ,S(484, 723)   ,S(482, 711)   ,
		S(473, 707)   ,S(487, 715)   ,S(476, 729)   ,S(478, 731)   ,S(474, 731)   ,S(477, 728)   ,S(480, 712)   ,S(482, 717)   ,
		S(484, 699)   ,S(480, 686)   ,S(477, 703)   ,S(457, 720)   ,S(458, 723)   ,S(476, 706)   ,S(489, 704)   ,S(478, 685)   ,
		S(490, 695)   ,S(477, 710)   ,S(457, 713)   ,S(450, 709)   ,S(445, 719)   ,S(452, 726)   ,S(454, 710)   ,S(477, 695)   ,
	},
	{
		S(386, 743)   ,S(353, 739)   ,S(366, 735)   ,S(348, 742)   ,S(338, 747)   ,S(317, 744)   ,S(430, 730)   ,S(395, 751)   ,
		S(390, 730)   ,S(438, 743)   ,S(458, 731)   ,S(439, 724)   ,S(455, 724)   ,S(479, 724)   ,S(475, 733)   ,S(440, 721)   ,
		S(460, 741)   ,S(493, 737)   ,S(495, 736)   ,S(502, 727)   ,S(503, 717)   ,S(506, 730)   ,S(494, 724)   ,S(481, 727)   ,
		S(459, 728)   ,S(501, 728)   ,S(490, 736)   ,S(508, 741)   ,S(520, 738)   ,S(491, 721)   ,S(500, 724)   ,S(477, 727)   ,
		S(478, 713)   ,S(471, 725)   ,S(490, 732)   ,S(503, 739)   ,S(499, 737)   ,S(485, 729)   ,S(487, 709)   ,S(466, 710)   ,
		S(475, 715)   ,S(485, 718)   ,S(488, 729)   ,S(489, 721)   ,S(481, 726)   ,S(481, 718)   ,S(481, 706)   ,S(465, 707)   ,
		S(475, 711)   ,S(498, 694)   ,S(480, 709)   ,S(464, 717)   ,S(461, 715)   ,S(464, 703)   ,S(469, 692)   ,S(477, 678)   ,
		S(487, 698)   ,S(455, 709)   ,S(452, 719)   ,S(448, 709)   ,S(450, 707)   ,S(455, 708)   ,S(469, 706)   ,S(482, 692)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(636, 1295)  ,S(630, 1299)  ,S(600, 1310)  ,S(608, 1305)  ,S(600, 1314)  ,S(660, 1307)  ,S(649, 1309)  ,S(653, 1302)  ,
		S(615, 1289)  ,S(600, 1300)  ,S(624, 1295)  ,S(640, 1296)  ,S(624, 1304)  ,S(660, 1282)  ,S(620, 1296)  ,S(627, 1283)  ,
		S(607, 1275)  ,S(659, 1256)  ,S(636, 1270)  ,S(668, 1252)  ,S(683, 1248)  ,S(685, 1264)  ,S(706, 1245)  ,S(637, 1266)  ,
		S(606, 1260)  ,S(628, 1258)  ,S(638, 1260)  ,S(668, 1248)  ,S(656, 1258)  ,S(663, 1256)  ,S(652, 1264)  ,S(631, 1261)  ,
		S(584, 1245)  ,S(589, 1265)  ,S(591, 1259)  ,S(605, 1250)  ,S(597, 1258)  ,S(604, 1264)  ,S(625, 1261)  ,S(600, 1241)  ,
		S(580, 1221)  ,S(590, 1240)  ,S(582, 1234)  ,S(600, 1224)  ,S(597, 1229)  ,S(598, 1235)  ,S(627, 1225)  ,S(597, 1203)  ,
		S(563, 1217)  ,S(593, 1216)  ,S(592, 1222)  ,S(602, 1214)  ,S(599, 1215)  ,S(613, 1210)  ,S(622, 1201)  ,S(547, 1219)  ,
		S(601, 1216)  ,S(602, 1222)  ,S(604, 1224)  ,S(612, 1214)  ,S(612, 1216)  ,S(615, 1234)  ,S(610, 1223)  ,S(600, 1196)  ,
	},
	{
		S(649, 1291)  ,S(608, 1314)  ,S(630, 1311)  ,S(620, 1300)  ,S(628, 1295)  ,S(633, 1286)  ,S(663, 1276)  ,S(665, 1278)  ,
		S(591, 1295)  ,S(614, 1298)  ,S(647, 1289)  ,S(637, 1290)  ,S(637, 1286)  ,S(650, 1270)  ,S(616, 1282)  ,S(630, 1275)  ,
		S(602, 1281)  ,S(663, 1260)  ,S(651, 1275)  ,S(674, 1248)  ,S(688, 1236)  ,S(658, 1254)  ,S(688, 1237)  ,S(632, 1259)  ,
		S(593, 1268)  ,S(637, 1262)  ,S(654, 1260)  ,S(658, 1249)  ,S(657, 1247)  ,S(645, 1249)  ,S(647, 1244)  ,S(631, 1250)  ,
		S(564, 1236)  ,S(602, 1253)  ,S(593, 1264)  ,S(596, 1254)  ,S(596, 1247)  ,S(592, 1255)  ,S(598, 1257)  ,S(591, 1240)  ,
		S(553, 1210)  ,S(597, 1225)  ,S(599, 1227)  ,S(591, 1222)  ,S(589, 1223)  ,S(587, 1227)  ,S(606, 1227)  ,S(585, 1209)  ,
		S(460, 1238)  ,S(575, 1206)  ,S(593, 1216)  ,S(593, 1215)  ,S(595, 1208)  ,S(599, 1205)  ,S(601, 1201)  ,S(558, 1203)  ,
		S(553, 1219)  ,S(579, 1231)  ,S(609, 1223)  ,S(610, 1215)  ,S(609, 1208)  ,S(607, 1212)  ,S(612, 1207)  ,S(600, 1199)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1239, 1504) ,S(1269, 1498) ,S(1249, 1537) ,S(1253, 1546) ,S(1240, 1575) ,S(1273, 1574) ,S(1274, 1541) ,S(1263, 1517) ,
		S(1267, 1481) ,S(1212, 1529) ,S(1263, 1503) ,S(1203, 1572) ,S(1207, 1610) ,S(1287, 1580) ,S(1205, 1579) ,S(1282, 1522) ,
		S(1270, 1481) ,S(1275, 1477) ,S(1262, 1501) ,S(1271, 1515) ,S(1281, 1552) ,S(1285, 1568) ,S(1281, 1570) ,S(1262, 1581) ,
		S(1283, 1466) ,S(1282, 1504) ,S(1274, 1492) ,S(1258, 1562) ,S(1258, 1584) ,S(1293, 1580) ,S(1303, 1570) ,S(1301, 1541) ,
		S(1287, 1444) ,S(1289, 1489) ,S(1276, 1506) ,S(1270, 1556) ,S(1273, 1553) ,S(1290, 1540) ,S(1301, 1516) ,S(1305, 1497) ,
		S(1292, 1424) ,S(1298, 1455) ,S(1288, 1489) ,S(1285, 1483) ,S(1286, 1474) ,S(1291, 1499) ,S(1307, 1460) ,S(1303, 1433) ,
		S(1295, 1414) ,S(1299, 1420) ,S(1307, 1408) ,S(1300, 1443) ,S(1302, 1431) ,S(1320, 1373) ,S(1308, 1377) ,S(1275, 1424) ,
		S(1298, 1406) ,S(1299, 1408) ,S(1304, 1407) ,S(1311, 1436) ,S(1313, 1396) ,S(1285, 1394) ,S(1285, 1366) ,S(1281, 1387) ,
	},
	{
		S(1278, 1452) ,S(1274, 1485) ,S(1275, 1510) ,S(1262, 1547) ,S(1246, 1546) ,S(1269, 1510) ,S(1263, 1489) ,S(1267, 1470) ,
		S(1259, 1496) ,S(1199, 1545) ,S(1268, 1541) ,S(1199, 1595) ,S(1187, 1609) ,S(1266, 1501) ,S(1217, 1528) ,S(1284, 1463) ,
		S(1266, 1521) ,S(1269, 1520) ,S(1257, 1550) ,S(1282, 1539) ,S(1284, 1514) ,S(1270, 1513) ,S(1299, 1462) ,S(1299, 1475) ,
		S(1282, 1502) ,S(1295, 1544) ,S(1284, 1539) ,S(1275, 1568) ,S(1272, 1550) ,S(1285, 1490) ,S(1301, 1495) ,S(1305, 1474) ,
		S(1291, 1459) ,S(1295, 1512) ,S(1287, 1521) ,S(1281, 1550) ,S(1285, 1526) ,S(1286, 1497) ,S(1301, 1471) ,S(1293, 1444) ,
		S(1268, 1450) ,S(1295, 1451) ,S(1293, 1487) ,S(1291, 1465) ,S(1292, 1465) ,S(1295, 1467) ,S(1303, 1442) ,S(1297, 1408) ,
		S(1249, 1418) ,S(1284, 1386) ,S(1316, 1369) ,S(1309, 1417) ,S(1303, 1429) ,S(1312, 1386) ,S(1310, 1394) ,S(1306, 1378) ,
		S(1254, 1391) ,S(1279, 1360) ,S(1286, 1363) ,S(1304, 1378) ,S(1311, 1396) ,S(1313, 1372) ,S(1312, 1385) ,S(1305, 1370) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(90, -41)    ,S(67, -33)    ,S(56, -30)    ,S(-28, -187)  ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(144, 14)    ,S(153, 31)    ,S(71, 65)     ,S(-6, -31)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(166, 42)    ,S(229, 48)    ,S(173, 55)    ,S(37, 9)      ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(117, 63)    ,S(140, 55)    ,S(113, 37)    ,S(-55, 15)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(73, 64)     ,S(78, 42)     ,S(75, 13)     ,S(-66, -15)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(24, 51)     ,S(26, 29)     ,S(18, 0)      ,S(-47, -17)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-66, 39)    ,S(-53, 34)    ,S(-6, -2)     ,S(0, -43)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-70, -29)   ,S(-95, 9)     ,S(-6, -38)    ,S(4, -125)    ,
	},
	{
		S(-17, -199)  ,S(50, -78)    ,S(85, -63)    ,S(101, -35)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-43, -43)   ,S(88, 37)     ,S(144, 17)    ,S(189, -11)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(6, 11)      ,S(172, 42)    ,S(200, 37)    ,S(173, 30)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-43, 12)    ,S(127, 22)    ,S(146, 43)    ,S(119, 49)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-55, -29)   ,S(70, 4)      ,S(115, 26)    ,S(71, 51)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-72, -18)   ,S(11, -9)     ,S(38, 11)     ,S(19, 35)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-10, -35)   ,S(-15, -16)   ,S(-20, 8)     ,S(-69, 21)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-24, -109)  ,S(-11, -54)   ,S(-49, -13)   ,S(-92, -27)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(100, 202), S(422, 617), S(436, 661), S(585, 1182), S(1267, 1436), };
constexpr PScore knightMob[9] = {S(-26, -127), S(-7, -51), S(4, -4), S(11, 21), S(16, 31), S(21, 45), S(29, 44), S(40, 39), S(50, 13), };
constexpr PScore bishopMob[14] = {S(-48, -181), S(-18, -105), S(0, -51), S(6, -23), S(17, -3), S(22, 15), S(25, 27), S(24, 36), S(23, 44), S(28, 46), S(35, 40), S(57, 25), S(62, 30), S(85, -13), };
constexpr PScore rookMob[15] = {S(-23, -139), S(-27, -90), S(-20, -57), S(-17, -40), S(-17, -23), S(-18, -5), S(-16, 5), S(-11, 6), S(-7, 10), S(2, 15), S(2, 21), S(7, 24), S(10, 25), S(28, 6), S(91, -29), };
constexpr PScore queenMob[28] = {S(-128, -451), S(-85, -473), S(-47, -380), S(-29, -290), S(-26, -196), S(-24, -140), S(-20, -105), S(-16, -86), S(-13, -66), S(-9, -56), S(-5, -48), S(0, -44), S(3, -42), S(7, -39), S(9, -39), S(10, -42), S(11, -41), S(6, -40), S(9, -45), S(12, -56), S(25, -80), S(31, -98), S(31, -112), S(42, -136), S(19, -141), S(26, -167), S(-4, -134), S(-11, -107), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 861.8603515625;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -3.0881688594818115;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 1054.139404296875;
constexpr double KSBEG = 1;
constexpr double KSCEG = 2.778475522994995;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);