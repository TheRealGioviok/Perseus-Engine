#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,
		S(235, 416)   ,S(213, 424)   ,S(159, 400)   ,S(198, 282)   ,S(216, 162)   ,S(179, 84)    ,S(-4, 153)    ,S(-4, 194)    ,
		S(103, 393)   ,S(130, 382)   ,S(120, 341)   ,S(130, 242)   ,S(172, 153)   ,S(217, 132)   ,S(163, 163)   ,S(108, 205)   ,
		S(117, 285)   ,S(117, 262)   ,S(113, 240)   ,S(115, 207)   ,S(140, 178)   ,S(138, 174)   ,S(85, 204)    ,S(80, 207)    ,
		S(120, 230)   ,S(114, 228)   ,S(115, 213)   ,S(112, 203)   ,S(113, 191)   ,S(103, 196)   ,S(74, 205)    ,S(64, 211)    ,
		S(131, 203)   ,S(146, 198)   ,S(120, 212)   ,S(113, 211)   ,S(102, 206)   ,S(90, 210)    ,S(62, 215)    ,S(62, 215)    ,
		S(132, 197)   ,S(160, 192)   ,S(142, 207)   ,S(96, 222)    ,S(84, 219)    ,S(76, 222)    ,S(57, 224)    ,S(60, 222)    ,
		S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,
	},
	{
		S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,
		S(-34, 252)   ,S(-54, 212)   ,S(178, 132)   ,S(219, 151)   ,S(223, 203)   ,S(200, 281)   ,S(178, 339)   ,S(224, 336)   ,
		S(119, 228)   ,S(155, 217)   ,S(221, 185)   ,S(147, 168)   ,S(137, 184)   ,S(132, 249)   ,S(114, 295)   ,S(100, 315)   ,
		S(97, 217)    ,S(100, 218)   ,S(137, 192)   ,S(133, 186)   ,S(122, 169)   ,S(110, 203)   ,S(107, 221)   ,S(103, 246)   ,
		S(91, 204)    ,S(97, 211)    ,S(114, 204)   ,S(116, 195)   ,S(113, 183)   ,S(107, 189)   ,S(95, 206)    ,S(94, 218)    ,
		S(104, 194)   ,S(117, 202)   ,S(108, 223)   ,S(120, 214)   ,S(109, 193)   ,S(105, 196)   ,S(102, 197)   ,S(98, 208)    ,
		S(108, 174)   ,S(135, 202)   ,S(132, 231)   ,S(97, 231)    ,S(98, 204)    ,S(93, 201)    ,S(97, 200)    ,S(95, 214)    ,
		S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,S(107, 201)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(235, 443)   ,S(274, 509)   ,S(300, 549)   ,S(424, 512)   ,S(420, 507)   ,S(312, 537)   ,S(388, 493)   ,S(258, 402)   ,
		S(400, 488)   ,S(423, 513)   ,S(463, 509)   ,S(498, 536)   ,S(488, 529)   ,S(483, 502)   ,S(425, 508)   ,S(441, 476)   ,
		S(374, 517)   ,S(438, 523)   ,S(462, 558)   ,S(466, 559)   ,S(476, 548)   ,S(455, 552)   ,S(429, 521)   ,S(437, 498)   ,
		S(420, 532)   ,S(451, 535)   ,S(477, 557)   ,S(485, 574)   ,S(482, 579)   ,S(468, 565)   ,S(451, 548)   ,S(457, 529)   ,
		S(419, 539)   ,S(444, 542)   ,S(447, 564)   ,S(453, 571)   ,S(467, 572)   ,S(459, 558)   ,S(468, 542)   ,S(443, 539)   ,
		S(375, 502)   ,S(396, 525)   ,S(412, 538)   ,S(414, 563)   ,S(427, 564)   ,S(408, 539)   ,S(410, 517)   ,S(388, 502)   ,
		S(360, 516)   ,S(360, 530)   ,S(382, 513)   ,S(390, 532)   ,S(400, 535)   ,S(393, 519)   ,S(364, 533)   ,S(364, 525)   ,
		S(327, 445)   ,S(345, 511)   ,S(369, 513)   ,S(375, 532)   ,S(373, 524)   ,S(368, 507)   ,S(369, 504)   ,S(329, 491)   ,
	},
	{
		S(263, 425)   ,S(362, 550)   ,S(300, 601)   ,S(416, 571)   ,S(377, 574)   ,S(256, 604)   ,S(267, 558)   ,S(180, 488)   ,
		S(435, 537)   ,S(397, 558)   ,S(489, 548)   ,S(473, 589)   ,S(458, 589)   ,S(432, 553)   ,S(389, 555)   ,S(382, 530)   ,
		S(406, 562)   ,S(395, 594)   ,S(459, 607)   ,S(457, 597)   ,S(444, 600)   ,S(440, 594)   ,S(408, 560)   ,S(376, 538)   ,
		S(431, 587)   ,S(436, 607)   ,S(459, 615)   ,S(455, 634)   ,S(453, 622)   ,S(450, 592)   ,S(433, 565)   ,S(413, 557)   ,
		S(419, 593)   ,S(449, 594)   ,S(440, 605)   ,S(444, 622)   ,S(434, 611)   ,S(430, 596)   ,S(420, 573)   ,S(408, 563)   ,
		S(382, 538)   ,S(399, 562)   ,S(401, 571)   ,S(411, 599)   ,S(412, 597)   ,S(404, 574)   ,S(399, 546)   ,S(386, 515)   ,
		S(373, 561)   ,S(369, 560)   ,S(379, 547)   ,S(389, 569)   ,S(391, 569)   ,S(380, 547)   ,S(373, 552)   ,S(361, 546)   ,
		S(325, 491)   ,S(369, 525)   ,S(373, 553)   ,S(370, 559)   ,S(376, 557)   ,S(374, 527)   ,S(377, 511)   ,S(340, 493)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(381, 630)   ,S(341, 622)   ,S(346, 614)   ,S(314, 622)   ,S(302, 607)   ,S(299, 608)   ,S(441, 602)   ,S(382, 622)   ,
		S(385, 617)   ,S(398, 618)   ,S(428, 606)   ,S(383, 606)   ,S(393, 597)   ,S(448, 579)   ,S(400, 603)   ,S(365, 594)   ,
		S(436, 613)   ,S(455, 607)   ,S(446, 606)   ,S(436, 603)   ,S(453, 590)   ,S(455, 597)   ,S(433, 593)   ,S(439, 602)   ,
		S(434, 612)   ,S(450, 605)   ,S(440, 613)   ,S(446, 614)   ,S(474, 599)   ,S(446, 584)   ,S(458, 599)   ,S(432, 597)   ,
		S(430, 597)   ,S(440, 600)   ,S(442, 607)   ,S(463, 601)   ,S(453, 597)   ,S(447, 591)   ,S(448, 579)   ,S(434, 590)   ,
		S(432, 586)   ,S(461, 590)   ,S(458, 597)   ,S(445, 592)   ,S(446, 594)   ,S(433, 585)   ,S(436, 582)   ,S(421, 591)   ,
		S(447, 570)   ,S(475, 574)   ,S(449, 582)   ,S(433, 588)   ,S(420, 591)   ,S(427, 578)   ,S(425, 569)   ,S(431, 579)   ,
		S(446, 554)   ,S(408, 581)   ,S(421, 592)   ,S(414, 589)   ,S(408, 590)   ,S(410, 594)   ,S(420, 594)   ,S(437, 570)   ,
	},
	{
		S(364, 639)   ,S(395, 628)   ,S(280, 639)   ,S(312, 644)   ,S(286, 666)   ,S(287, 657)   ,S(347, 656)   ,S(366, 663)   ,
		S(379, 632)   ,S(366, 637)   ,S(404, 624)   ,S(379, 631)   ,S(372, 639)   ,S(406, 635)   ,S(392, 648)   ,S(362, 648)   ,
		S(407, 654)   ,S(404, 649)   ,S(413, 654)   ,S(429, 630)   ,S(417, 628)   ,S(434, 631)   ,S(419, 640)   ,S(424, 635)   ,
		S(402, 649)   ,S(427, 644)   ,S(428, 635)   ,S(433, 646)   ,S(435, 642)   ,S(417, 627)   ,S(430, 632)   ,S(404, 641)   ,
		S(416, 622)   ,S(425, 627)   ,S(422, 635)   ,S(438, 637)   ,S(427, 636)   ,S(424, 636)   ,S(425, 618)   ,S(412, 622)   ,
		S(422, 620)   ,S(426, 613)   ,S(423, 621)   ,S(423, 631)   ,S(426, 629)   ,S(425, 625)   ,S(439, 616)   ,S(420, 617)   ,
		S(423, 571)   ,S(438, 598)   ,S(422, 608)   ,S(411, 623)   ,S(411, 620)   ,S(428, 605)   ,S(431, 591)   ,S(435, 607)   ,
		S(425, 560)   ,S(400, 601)   ,S(405, 627)   ,S(398, 619)   ,S(405, 614)   ,S(408, 618)   ,S(428, 613)   ,S(442, 594)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(678, 1148)  ,S(646, 1169)  ,S(622, 1177)  ,S(593, 1181)  ,S(604, 1168)  ,S(666, 1143)  ,S(657, 1143)  ,S(621, 1164)  ,
		S(645, 1144)  ,S(644, 1151)  ,S(653, 1147)  ,S(640, 1155)  ,S(638, 1142)  ,S(648, 1129)  ,S(622, 1131)  ,S(622, 1127)  ,
		S(632, 1137)  ,S(691, 1113)  ,S(658, 1137)  ,S(673, 1113)  ,S(685, 1098)  ,S(659, 1112)  ,S(699, 1087)  ,S(636, 1113)  ,
		S(617, 1134)  ,S(634, 1130)  ,S(654, 1124)  ,S(656, 1121)  ,S(656, 1106)  ,S(643, 1107)  ,S(654, 1098)  ,S(636, 1102)  ,
		S(582, 1122)  ,S(611, 1129)  ,S(587, 1142)  ,S(588, 1135)  ,S(592, 1117)  ,S(598, 1116)  ,S(603, 1115)  ,S(586, 1106)  ,
		S(560, 1095)  ,S(605, 1103)  ,S(581, 1113)  ,S(587, 1108)  ,S(593, 1093)  ,S(594, 1094)  ,S(609, 1093)  ,S(586, 1080)  ,
		S(521, 1104)  ,S(576, 1093)  ,S(593, 1099)  ,S(587, 1099)  ,S(593, 1087)  ,S(602, 1079)  ,S(611, 1071)  ,S(563, 1084)  ,
		S(558, 1100)  ,S(576, 1109)  ,S(606, 1108)  ,S(604, 1097)  ,S(604, 1085)  ,S(614, 1086)  ,S(619, 1084)  ,S(596, 1086)  ,
	},
	{
		S(630, 1218)  ,S(636, 1219)  ,S(647, 1222)  ,S(569, 1230)  ,S(591, 1222)  ,S(571, 1237)  ,S(608, 1225)  ,S(615, 1218)  ,
		S(613, 1195)  ,S(623, 1200)  ,S(656, 1188)  ,S(613, 1213)  ,S(638, 1205)  ,S(618, 1210)  ,S(595, 1218)  ,S(605, 1207)  ,
		S(627, 1178)  ,S(697, 1153)  ,S(689, 1166)  ,S(674, 1155)  ,S(669, 1160)  ,S(631, 1184)  ,S(655, 1169)  ,S(598, 1192)  ,
		S(618, 1172)  ,S(642, 1169)  ,S(653, 1166)  ,S(644, 1166)  ,S(660, 1161)  ,S(631, 1173)  ,S(621, 1173)  ,S(598, 1179)  ,
		S(576, 1160)  ,S(610, 1177)  ,S(593, 1181)  ,S(587, 1174)  ,S(597, 1169)  ,S(580, 1181)  ,S(577, 1183)  ,S(576, 1165)  ,
		S(577, 1123)  ,S(614, 1150)  ,S(595, 1154)  ,S(589, 1149)  ,S(594, 1146)  ,S(574, 1157)  ,S(582, 1159)  ,S(568, 1145)  ,
		S(508, 1141)  ,S(606, 1129)  ,S(606, 1136)  ,S(590, 1139)  ,S(593, 1136)  ,S(581, 1144)  ,S(580, 1137)  ,S(547, 1145)  ,
		S(574, 1117)  ,S(593, 1147)  ,S(605, 1157)  ,S(601, 1137)  ,S(605, 1137)  ,S(594, 1148)  ,S(587, 1147)  ,S(589, 1141)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1287, 2162) ,S(1306, 2181) ,S(1300, 2191) ,S(1268, 2252) ,S(1277, 2241) ,S(1344, 2203) ,S(1284, 2213) ,S(1291, 2173) ,
		S(1302, 2176) ,S(1246, 2230) ,S(1285, 2217) ,S(1229, 2277) ,S(1229, 2299) ,S(1363, 2189) ,S(1275, 2208) ,S(1296, 2173) ,
		S(1297, 2196) ,S(1307, 2166) ,S(1296, 2192) ,S(1296, 2207) ,S(1302, 2230) ,S(1294, 2246) ,S(1327, 2167) ,S(1341, 2170) ,
		S(1309, 2172) ,S(1283, 2236) ,S(1283, 2207) ,S(1270, 2255) ,S(1288, 2242) ,S(1321, 2202) ,S(1342, 2196) ,S(1333, 2176) ,
		S(1295, 2168) ,S(1299, 2218) ,S(1280, 2235) ,S(1294, 2256) ,S(1292, 2235) ,S(1311, 2219) ,S(1327, 2181) ,S(1329, 2165) ,
		S(1285, 2158) ,S(1311, 2161) ,S(1310, 2192) ,S(1309, 2184) ,S(1311, 2173) ,S(1320, 2177) ,S(1335, 2145) ,S(1335, 2137) ,
		S(1264, 2098) ,S(1305, 2114) ,S(1344, 2070) ,S(1335, 2136) ,S(1323, 2132) ,S(1340, 2109) ,S(1345, 2103) ,S(1343, 2109) ,
		S(1290, 2021) ,S(1313, 2049) ,S(1315, 2083) ,S(1325, 2116) ,S(1332, 2115) ,S(1326, 2099) ,S(1316, 2129) ,S(1325, 2096) ,
	},
	{
		S(1280, 2311) ,S(1311, 2328) ,S(1308, 2334) ,S(1244, 2339) ,S(1257, 2323) ,S(1252, 2309) ,S(1263, 2282) ,S(1232, 2287) ,
		S(1318, 2300) ,S(1252, 2371) ,S(1340, 2308) ,S(1208, 2376) ,S(1212, 2345) ,S(1270, 2276) ,S(1214, 2312) ,S(1274, 2258) ,
		S(1278, 2343) ,S(1261, 2353) ,S(1277, 2336) ,S(1272, 2317) ,S(1276, 2287) ,S(1267, 2276) ,S(1277, 2256) ,S(1273, 2260) ,
		S(1309, 2304) ,S(1300, 2341) ,S(1291, 2337) ,S(1253, 2348) ,S(1253, 2328) ,S(1276, 2262) ,S(1278, 2289) ,S(1284, 2245) ,
		S(1312, 2274) ,S(1306, 2280) ,S(1295, 2304) ,S(1273, 2326) ,S(1274, 2333) ,S(1283, 2275) ,S(1299, 2269) ,S(1291, 2231) ,
		S(1317, 2202) ,S(1318, 2220) ,S(1301, 2265) ,S(1296, 2247) ,S(1295, 2256) ,S(1299, 2267) ,S(1312, 2230) ,S(1300, 2208) ,
		S(1292, 2174) ,S(1324, 2142) ,S(1334, 2145) ,S(1315, 2204) ,S(1312, 2220) ,S(1318, 2179) ,S(1311, 2199) ,S(1304, 2190) ,
		S(1301, 2069) ,S(1296, 2140) ,S(1302, 2169) ,S(1324, 2171) ,S(1326, 2209) ,S(1320, 2184) ,S(1312, 2179) ,S(1307, 2187) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-41, -201)  ,S(75, -101)   ,S(80, -81)    ,S(109, -64)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-16, -45)   ,S(104, 16)    ,S(150, 5)     ,S(158, -13)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(40, -6)     ,S(126, 43)    ,S(160, 44)    ,S(137, 38)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-24, 6)     ,S(91, 40)     ,S(100, 59)    ,S(79, 68)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-28, -29)   ,S(43, 32)     ,S(61, 57)     ,S(14, 78)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-43, -32)   ,S(-23, 17)    ,S(-4, 38)     ,S(-23, 61)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(17, -69)    ,S(-32, -10)   ,S(-56, 22)    ,S(-97, 35)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(19, -163)   ,S(-4, -73)    ,S(-53, -30)   ,S(-70, -46)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(6, -205)    ,S(13, -9)     ,S(57, -43)    ,S(93, -55)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-47, -51)   ,S(55, 52)     ,S(147, -6)    ,S(162, -9)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(14, -2)     ,S(188, 45)    ,S(252, 30)    ,S(154, 31)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-57, 2)     ,S(102, 39)    ,S(127, 61)    ,S(90, 72)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-59, -27)   ,S(47, 33)     ,S(57, 64)     ,S(44, 86)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-31, -29)   ,S(-16, 22)    ,S(4, 50)      ,S(-2, 70)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(29, -64)    ,S(-17, 5)     ,S(-53, 37)    ,S(-78, 44)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(30, -150)   ,S(-7, -45)    ,S(-55, -12)   ,S(-61, -40)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(107, 201), S(382, 519), S(395, 574), S(590, 1112), S(1293, 2190), };
constexpr PScore knightMob[9] = {S(65, 164), S(60, 83), S(72, 130), S(77, 155), S(82, 166), S(87, 181), S(94, 182), S(103, 178), S(113, 155), };
constexpr PScore bishopMob[14] = {S(7, 133), S(43, 27), S(59, 72), S(68, 100), S(79, 120), S(82, 142), S(86, 156), S(85, 168), S(87, 180), S(92, 185), S(99, 181), S(123, 170), S(133, 178), S(149, 140), };
constexpr PScore rookMob[15] = {S(11, 77), S(8, 28), S(17, 53), S(19, 70), S(20, 88), S(18, 104), S(22, 113), S(27, 114), S(31, 119), S(39, 124), S(39, 130), S(45, 135), S(47, 138), S(65, 119), S(130, 81), };
constexpr PScore queenMob[28] = {S(-132, 299), S(-93, 281), S(-42, 170), S(-17, 58), S(-6, 21), S(1, 35), S(5, 61), S(9, 78), S(13, 99), S(17, 111), S(21, 119), S(27, 123), S(31, 126), S(35, 128), S(37, 129), S(39, 129), S(39, 127), S(35, 126), S(38, 121), S(41, 111), S(53, 86), S(60, 66), S(59, 49), S(70, 25), S(45, 20), S(44, 0), S(34, 2), S(7, 53), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 870.9237670898438;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.857856512069702;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 158.4738311767578;
constexpr double KSBEG = 1;
constexpr double KSCEG = -0.47032395005226135;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);