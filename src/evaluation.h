#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,
		S(190, 267)   ,S(148, 268)   ,S(188, 214)   ,S(195, 171)   ,S(175, 178)   ,S(120, 226)   ,S(-80, 316)   ,S(-50, 327)   ,
		S(95, 299)    ,S(120, 279)   ,S(142, 233)   ,S(136, 190)   ,S(149, 199)   ,S(203, 235)   ,S(148, 273)   ,S(108, 282)   ,
		S(90, 252)    ,S(93, 236)    ,S(100, 216)   ,S(115, 186)   ,S(126, 201)   ,S(133, 214)   ,S(97, 241)    ,S(92, 237)    ,
		S(84, 225)    ,S(80, 219)    ,S(95, 200)    ,S(103, 191)   ,S(109, 197)   ,S(112, 206)   ,S(97, 209)    ,S(94, 207)    ,
		S(87, 215)    ,S(85, 209)    ,S(91, 206)    ,S(101, 202)   ,S(112, 217)   ,S(103, 218)   ,S(118, 194)   ,S(107, 192)   ,
		S(84, 225)    ,S(81, 215)    ,S(80, 216)    ,S(89, 219)    ,S(88, 239)    ,S(126, 231)   ,S(137, 204)   ,S(107, 183)   ,
		S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,
	},
	{
		S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,
		S(130, 325)   ,S(96, 336)    ,S(176, 296)   ,S(185, 223)   ,S(176, 209)   ,S(193, 189)   ,S(83, 265)    ,S(74, 268)    ,
		S(118, 318)   ,S(171, 309)   ,S(169, 279)   ,S(152, 232)   ,S(158, 207)   ,S(153, 236)   ,S(144, 257)   ,S(88, 278)    ,
		S(126, 249)   ,S(119, 247)   ,S(124, 229)   ,S(129, 211)   ,S(125, 209)   ,S(109, 222)   ,S(76, 246)    ,S(81, 248)    ,
		S(121, 215)   ,S(111, 218)   ,S(121, 208)   ,S(117, 206)   ,S(105, 201)   ,S(90, 215)    ,S(68, 225)    ,S(65, 229)    ,
		S(123, 203)   ,S(134, 195)   ,S(118, 214)   ,S(107, 217)   ,S(95, 212)    ,S(86, 214)    ,S(72, 220)    ,S(64, 222)    ,
		S(126, 201)   ,S(149, 198)   ,S(136, 224)   ,S(98, 237)    ,S(78, 229)    ,S(74, 228)    ,S(66, 230)    ,S(65, 231)    ,
		S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(243, 579)   ,S(331, 658)   ,S(312, 705)   ,S(426, 675)   ,S(475, 669)   ,S(338, 705)   ,S(333, 671)   ,S(305, 553)   ,
		S(462, 625)   ,S(462, 651)   ,S(511, 652)   ,S(533, 691)   ,S(527, 692)   ,S(552, 644)   ,S(454, 658)   ,S(480, 629)   ,
		S(447, 640)   ,S(475, 665)   ,S(494, 705)   ,S(502, 709)   ,S(531, 703)   ,S(514, 711)   ,S(468, 687)   ,S(456, 665)   ,
		S(476, 664)   ,S(481, 673)   ,S(493, 705)   ,S(488, 733)   ,S(489, 744)   ,S(498, 726)   ,S(477, 718)   ,S(477, 696)   ,
		S(464, 665)   ,S(471, 675)   ,S(471, 703)   ,S(473, 715)   ,S(479, 727)   ,S(479, 712)   ,S(488, 695)   ,S(470, 693)   ,
		S(442, 618)   ,S(453, 653)   ,S(450, 678)   ,S(461, 708)   ,S(460, 705)   ,S(448, 680)   ,S(450, 669)   ,S(441, 648)   ,
		S(424, 637)   ,S(431, 652)   ,S(437, 649)   ,S(445, 673)   ,S(441, 676)   ,S(434, 649)   ,S(423, 660)   ,S(429, 667)   ,
		S(411, 597)   ,S(435, 614)   ,S(430, 627)   ,S(433, 663)   ,S(430, 667)   ,S(425, 659)   ,S(425, 640)   ,S(389, 628)   ,
	},
	{
		S(271, 542)   ,S(340, 641)   ,S(340, 692)   ,S(450, 662)   ,S(447, 660)   ,S(302, 697)   ,S(320, 660)   ,S(271, 556)   ,
		S(453, 624)   ,S(449, 659)   ,S(512, 657)   ,S(567, 673)   ,S(529, 680)   ,S(534, 647)   ,S(460, 647)   ,S(468, 618)   ,
		S(430, 661)   ,S(491, 672)   ,S(492, 712)   ,S(515, 709)   ,S(531, 698)   ,S(510, 698)   ,S(498, 652)   ,S(455, 640)   ,
		S(464, 678)   ,S(485, 690)   ,S(493, 717)   ,S(503, 726)   ,S(501, 727)   ,S(497, 704)   ,S(483, 689)   ,S(476, 662)   ,
		S(470, 676)   ,S(471, 687)   ,S(480, 705)   ,S(482, 715)   ,S(485, 716)   ,S(477, 703)   ,S(472, 680)   ,S(474, 658)   ,
		S(419, 650)   ,S(444, 664)   ,S(455, 679)   ,S(456, 702)   ,S(458, 701)   ,S(447, 676)   ,S(445, 646)   ,S(428, 618)   ,
		S(414, 673)   ,S(404, 675)   ,S(427, 656)   ,S(436, 668)   ,S(441, 671)   ,S(430, 651)   ,S(414, 656)   ,S(416, 629)   ,
		S(379, 646)   ,S(406, 646)   ,S(416, 656)   ,S(411, 666)   ,S(427, 654)   ,S(431, 620)   ,S(424, 620)   ,S(402, 586)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(417, 747)   ,S(396, 746)   ,S(340, 747)   ,S(333, 756)   ,S(357, 743)   ,S(322, 743)   ,S(427, 726)   ,S(412, 735)   ,
		S(415, 736)   ,S(475, 729)   ,S(474, 725)   ,S(441, 731)   ,S(469, 723)   ,S(464, 728)   ,S(433, 739)   ,S(435, 725)   ,
		S(474, 728)   ,S(479, 733)   ,S(502, 728)   ,S(484, 724)   ,S(497, 724)   ,S(491, 751)   ,S(476, 740)   ,S(465, 746)   ,
		S(461, 730)   ,S(497, 723)   ,S(480, 725)   ,S(502, 745)   ,S(505, 750)   ,S(498, 733)   ,S(502, 736)   ,S(453, 744)   ,
		S(470, 708)   ,S(476, 715)   ,S(469, 740)   ,S(489, 740)   ,S(496, 742)   ,S(470, 734)   ,S(478, 722)   ,S(478, 710)   ,
		S(473, 708)   ,S(487, 716)   ,S(476, 730)   ,S(478, 733)   ,S(474, 732)   ,S(476, 729)   ,S(480, 713)   ,S(483, 719)   ,
		S(485, 699)   ,S(481, 688)   ,S(479, 704)   ,S(458, 722)   ,S(458, 724)   ,S(476, 707)   ,S(490, 705)   ,S(480, 685)   ,
		S(491, 696)   ,S(477, 711)   ,S(458, 714)   ,S(451, 709)   ,S(446, 719)   ,S(453, 727)   ,S(455, 710)   ,S(478, 695)   ,
	},
	{
		S(388, 740)   ,S(356, 736)   ,S(367, 734)   ,S(351, 740)   ,S(338, 746)   ,S(320, 743)   ,S(432, 731)   ,S(396, 751)   ,
		S(392, 731)   ,S(438, 742)   ,S(460, 730)   ,S(439, 724)   ,S(456, 724)   ,S(480, 723)   ,S(475, 734)   ,S(441, 722)   ,
		S(462, 744)   ,S(494, 736)   ,S(494, 735)   ,S(503, 725)   ,S(502, 717)   ,S(504, 731)   ,S(495, 725)   ,S(482, 728)   ,
		S(459, 731)   ,S(501, 728)   ,S(490, 736)   ,S(508, 741)   ,S(519, 738)   ,S(491, 721)   ,S(500, 725)   ,S(477, 729)   ,
		S(477, 713)   ,S(466, 725)   ,S(484, 732)   ,S(498, 738)   ,S(496, 737)   ,S(481, 727)   ,S(482, 708)   ,S(464, 709)   ,
		S(475, 714)   ,S(486, 716)   ,S(487, 730)   ,S(489, 722)   ,S(481, 726)   ,S(482, 719)   ,S(481, 708)   ,S(465, 708)   ,
		S(475, 711)   ,S(499, 695)   ,S(481, 710)   ,S(464, 719)   ,S(462, 716)   ,S(465, 703)   ,S(469, 692)   ,S(479, 680)   ,
		S(487, 699)   ,S(456, 709)   ,S(454, 718)   ,S(450, 708)   ,S(451, 707)   ,S(457, 710)   ,S(470, 707)   ,S(483, 694)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(637, 1297)  ,S(631, 1302)  ,S(601, 1313)  ,S(608, 1310)  ,S(600, 1317)  ,S(661, 1309)  ,S(651, 1311)  ,S(655, 1302)  ,
		S(614, 1294)  ,S(600, 1306)  ,S(623, 1301)  ,S(639, 1302)  ,S(624, 1310)  ,S(659, 1287)  ,S(619, 1301)  ,S(626, 1289)  ,
		S(606, 1281)  ,S(659, 1261)  ,S(636, 1277)  ,S(668, 1256)  ,S(683, 1254)  ,S(684, 1270)  ,S(704, 1251)  ,S(635, 1275)  ,
		S(606, 1271)  ,S(628, 1265)  ,S(638, 1265)  ,S(668, 1254)  ,S(654, 1263)  ,S(663, 1262)  ,S(650, 1270)  ,S(630, 1270)  ,
		S(584, 1252)  ,S(585, 1268)  ,S(588, 1262)  ,S(605, 1254)  ,S(594, 1260)  ,S(599, 1265)  ,S(619, 1261)  ,S(598, 1245)  ,
		S(580, 1228)  ,S(592, 1243)  ,S(582, 1239)  ,S(602, 1230)  ,S(597, 1233)  ,S(599, 1237)  ,S(628, 1228)  ,S(597, 1208)  ,
		S(564, 1222)  ,S(594, 1220)  ,S(592, 1227)  ,S(602, 1220)  ,S(600, 1221)  ,S(613, 1214)  ,S(622, 1204)  ,S(548, 1224)  ,
		S(600, 1222)  ,S(602, 1229)  ,S(604, 1231)  ,S(612, 1221)  ,S(611, 1222)  ,S(615, 1240)  ,S(610, 1230)  ,S(600, 1203)  ,
	},
	{
		S(651, 1293)  ,S(612, 1316)  ,S(630, 1315)  ,S(623, 1303)  ,S(627, 1299)  ,S(633, 1291)  ,S(665, 1279)  ,S(666, 1280)  ,
		S(590, 1301)  ,S(614, 1303)  ,S(646, 1294)  ,S(636, 1296)  ,S(637, 1290)  ,S(650, 1276)  ,S(617, 1288)  ,S(630, 1281)  ,
		S(601, 1287)  ,S(663, 1264)  ,S(651, 1280)  ,S(675, 1252)  ,S(688, 1243)  ,S(658, 1258)  ,S(688, 1242)  ,S(633, 1267)  ,
		S(592, 1276)  ,S(637, 1267)  ,S(654, 1264)  ,S(658, 1254)  ,S(658, 1253)  ,S(645, 1255)  ,S(646, 1251)  ,S(629, 1261)  ,
		S(564, 1241)  ,S(599, 1254)  ,S(592, 1263)  ,S(593, 1255)  ,S(595, 1251)  ,S(590, 1257)  ,S(592, 1260)  ,S(589, 1245)  ,
		S(553, 1214)  ,S(598, 1227)  ,S(600, 1228)  ,S(591, 1226)  ,S(590, 1228)  ,S(589, 1231)  ,S(607, 1230)  ,S(585, 1215)  ,
		S(461, 1241)  ,S(576, 1209)  ,S(595, 1219)  ,S(593, 1219)  ,S(596, 1214)  ,S(600, 1211)  ,S(602, 1206)  ,S(558, 1208)  ,
		S(554, 1226)  ,S(579, 1238)  ,S(608, 1229)  ,S(610, 1222)  ,S(608, 1216)  ,S(606, 1220)  ,S(612, 1215)  ,S(600, 1207)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1238, 1472) ,S(1269, 1468) ,S(1250, 1505) ,S(1253, 1513) ,S(1240, 1543) ,S(1273, 1543) ,S(1276, 1506) ,S(1265, 1483) ,
		S(1266, 1450) ,S(1211, 1497) ,S(1262, 1472) ,S(1201, 1540) ,S(1206, 1577) ,S(1284, 1551) ,S(1201, 1552) ,S(1279, 1495) ,
		S(1269, 1454) ,S(1275, 1445) ,S(1262, 1469) ,S(1271, 1485) ,S(1280, 1521) ,S(1284, 1538) ,S(1280, 1538) ,S(1261, 1553) ,
		S(1282, 1440) ,S(1282, 1474) ,S(1272, 1462) ,S(1257, 1531) ,S(1256, 1553) ,S(1293, 1548) ,S(1303, 1539) ,S(1300, 1513) ,
		S(1286, 1414) ,S(1286, 1460) ,S(1273, 1474) ,S(1269, 1525) ,S(1270, 1521) ,S(1285, 1507) ,S(1297, 1482) ,S(1302, 1466) ,
		S(1292, 1395) ,S(1298, 1425) ,S(1288, 1458) ,S(1286, 1453) ,S(1287, 1442) ,S(1291, 1466) ,S(1307, 1429) ,S(1303, 1403) ,
		S(1295, 1385) ,S(1298, 1391) ,S(1307, 1378) ,S(1301, 1413) ,S(1302, 1401) ,S(1320, 1342) ,S(1308, 1347) ,S(1275, 1395) ,
		S(1296, 1377) ,S(1299, 1378) ,S(1305, 1379) ,S(1312, 1407) ,S(1313, 1365) ,S(1286, 1365) ,S(1285, 1335) ,S(1281, 1358) ,
	},
	{
		S(1280, 1414) ,S(1274, 1453) ,S(1266, 1486) ,S(1261, 1516) ,S(1248, 1513) ,S(1267, 1479) ,S(1263, 1456) ,S(1267, 1438) ,
		S(1258, 1463) ,S(1197, 1514) ,S(1269, 1507) ,S(1198, 1564) ,S(1185, 1578) ,S(1264, 1472) ,S(1214, 1500) ,S(1284, 1433) ,
		S(1266, 1492) ,S(1269, 1488) ,S(1257, 1517) ,S(1282, 1505) ,S(1283, 1482) ,S(1268, 1483) ,S(1299, 1429) ,S(1298, 1446) ,
		S(1282, 1474) ,S(1296, 1511) ,S(1284, 1509) ,S(1275, 1536) ,S(1271, 1520) ,S(1285, 1459) ,S(1301, 1466) ,S(1304, 1447) ,
		S(1290, 1428) ,S(1290, 1480) ,S(1283, 1488) ,S(1279, 1513) ,S(1283, 1495) ,S(1283, 1464) ,S(1296, 1440) ,S(1293, 1415) ,
		S(1269, 1421) ,S(1295, 1420) ,S(1292, 1455) ,S(1291, 1433) ,S(1292, 1435) ,S(1296, 1436) ,S(1303, 1412) ,S(1298, 1378) ,
		S(1250, 1388) ,S(1285, 1356) ,S(1316, 1339) ,S(1310, 1386) ,S(1305, 1400) ,S(1313, 1356) ,S(1311, 1365) ,S(1306, 1351) ,
		S(1254, 1361) ,S(1281, 1331) ,S(1286, 1332) ,S(1305, 1347) ,S(1311, 1365) ,S(1314, 1343) ,S(1313, 1356) ,S(1305, 1341) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(82, -40)    ,S(69, -37)    ,S(58, -34)    ,S(-33, -189)  ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(144, 12)    ,S(159, 29)    ,S(78, 62)     ,S(-8, -28)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(164, 40)    ,S(229, 46)    ,S(176, 54)    ,S(37, 11)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(119, 60)    ,S(144, 52)    ,S(118, 34)    ,S(-56, 17)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(76, 60)     ,S(82, 39)     ,S(77, 10)     ,S(-63, -17)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(25, 49)     ,S(27, 27)     ,S(18, 1)      ,S(-47, -16)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-69, 41)    ,S(-54, 37)    ,S(-7, 1)      ,S(-1, -40)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-70, -26)   ,S(-97, 10)    ,S(-8, -34)    ,S(2, -123)    ,
	},
	{
		S(-13, -205)  ,S(48, -80)    ,S(85, -66)    ,S(104, -39)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-48, -39)   ,S(92, 34)     ,S(149, 13)    ,S(191, -15)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(3, 12)      ,S(177, 38)    ,S(203, 34)    ,S(177, 25)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-44, 15)    ,S(131, 18)    ,S(152, 39)    ,S(121, 45)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-55, -31)   ,S(72, 1)      ,S(117, 22)    ,S(75, 46)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-72, -19)   ,S(12, -10)    ,S(39, 9)      ,S(22, 33)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-12, -34)   ,S(-15, -13)   ,S(-20, 10)    ,S(-70, 23)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-26, -108)  ,S(-12, -53)   ,S(-50, -11)   ,S(-93, -25)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};


constexpr PScore materialValues[5] = {S(101, 206), S(424, 623), S(440, 667), S(591, 1199), S(1272, 1414), };
constexpr PScore knightMob[9] = {S(-26, -129), S(-8, -52), S(5, -5), S(10, 20), S(16, 32), S(21, 45), S(29, 43), S(40, 38), S(50, 12), };
constexpr PScore bishopMob[14] = {S(-49, -181), S(-18, -105), S(0, -51), S(6, -24), S(17, -3), S(22, 15), S(25, 27), S(24, 35), S(24, 44), S(27, 46), S(36, 39), S(59, 24), S(64, 31), S(87, -13), };
constexpr PScore rookMob[15] = {S(-21, -141), S(-27, -92), S(-18, -58), S(-17, -42), S(-16, -24), S(-17, -5), S(-15, 5), S(-10, 5), S(-6, 10), S(2, 15), S(2, 19), S(8, 24), S(12, 24), S(28, 4), S(92, -29), };
constexpr PScore queenMob[28] = {S(-128, -451), S(-85, -477), S(-47, -384), S(-28, -292), S(-26, -198), S(-23, -140), S(-19, -105), S(-16, -88), S(-12, -67), S(-9, -55), S(-4, -47), S(0, -43), S(3, -42), S(7, -39), S(9, -40), S(11, -41), S(11, -42), S(7, -40), S(10, -47), S(13, -56), S(26, -82), S(33, -100), S(33, -115), S(45, -138), S(21, -143), S(24, -164), S(-5, -131), S(-25, -91), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 868.1723022460938;
constexpr double KSBMG = 1.644446611404419;
constexpr double KSCMG = -3.1236159801483154;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 1093.0008544921875;
constexpr double KSBEG = 2.106160879135132;
constexpr double KSCEG = 2.667117118835449;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);