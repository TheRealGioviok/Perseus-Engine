#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,
		S(193, 267)   ,S(150, 268)   ,S(191, 214)   ,S(198, 171)   ,S(177, 178)   ,S(122, 226)   ,S(-78, 316)   ,S(-46, 328)   ,
		S(95, 297)    ,S(120, 275)   ,S(143, 231)   ,S(137, 188)   ,S(150, 198)   ,S(204, 233)   ,S(150, 272)   ,S(108, 282)   ,
		S(91, 250)    ,S(94, 233)    ,S(100, 214)   ,S(115, 183)   ,S(127, 199)   ,S(134, 213)   ,S(97, 239)    ,S(94, 237)    ,
		S(84, 223)    ,S(80, 216)    ,S(96, 197)    ,S(104, 190)   ,S(108, 195)   ,S(113, 205)   ,S(98, 210)    ,S(95, 207)    ,
		S(87, 212)    ,S(85, 207)    ,S(92, 205)    ,S(101, 201)   ,S(112, 217)   ,S(103, 219)   ,S(118, 195)   ,S(107, 193)   ,
		S(84, 222)    ,S(81, 214)    ,S(81, 214)    ,S(89, 217)    ,S(88, 239)    ,S(126, 232)   ,S(137, 204)   ,S(108, 182)   ,
		S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,
	},
	{
		S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,
		S(132, 327)   ,S(102, 336)   ,S(180, 296)   ,S(186, 224)   ,S(179, 209)   ,S(195, 188)   ,S(85, 263)    ,S(75, 268)    ,
		S(118, 316)   ,S(171, 308)   ,S(171, 278)   ,S(152, 231)   ,S(158, 204)   ,S(155, 233)   ,S(146, 253)   ,S(88, 275)    ,
		S(127, 246)   ,S(121, 245)   ,S(125, 228)   ,S(130, 210)   ,S(126, 207)   ,S(109, 219)   ,S(77, 244)    ,S(82, 246)    ,
		S(122, 213)   ,S(110, 215)   ,S(121, 206)   ,S(117, 205)   ,S(106, 200)   ,S(90, 211)    ,S(69, 222)    ,S(66, 228)    ,
		S(125, 202)   ,S(134, 194)   ,S(118, 214)   ,S(107, 216)   ,S(95, 211)    ,S(87, 212)    ,S(72, 218)    ,S(63, 218)    ,
		S(126, 199)   ,S(149, 197)   ,S(136, 224)   ,S(98, 236)    ,S(78, 229)    ,S(74, 226)    ,S(66, 228)    ,S(65, 229)    ,
		S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,S(100, 200)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(241, 582)   ,S(331, 657)   ,S(312, 705)   ,S(425, 674)   ,S(474, 670)   ,S(336, 706)   ,S(335, 670)   ,S(304, 554)   ,
		S(460, 626)   ,S(461, 651)   ,S(510, 652)   ,S(534, 690)   ,S(526, 692)   ,S(552, 643)   ,S(453, 658)   ,S(480, 629)   ,
		S(446, 638)   ,S(474, 665)   ,S(494, 704)   ,S(500, 707)   ,S(531, 700)   ,S(514, 709)   ,S(469, 685)   ,S(456, 663)   ,
		S(476, 661)   ,S(481, 674)   ,S(492, 706)   ,S(487, 733)   ,S(489, 743)   ,S(497, 724)   ,S(476, 717)   ,S(476, 694)   ,
		S(463, 665)   ,S(470, 677)   ,S(469, 703)   ,S(471, 715)   ,S(478, 727)   ,S(477, 713)   ,S(487, 695)   ,S(468, 692)   ,
		S(441, 618)   ,S(451, 652)   ,S(449, 678)   ,S(459, 707)   ,S(458, 705)   ,S(448, 679)   ,S(450, 668)   ,S(440, 647)   ,
		S(422, 637)   ,S(429, 652)   ,S(436, 648)   ,S(444, 673)   ,S(440, 676)   ,S(434, 650)   ,S(422, 660)   ,S(427, 667)   ,
		S(410, 596)   ,S(434, 614)   ,S(430, 628)   ,S(432, 664)   ,S(428, 666)   ,S(424, 660)   ,S(423, 640)   ,S(388, 627)   ,
	},
	{
		S(271, 542)   ,S(338, 644)   ,S(342, 690)   ,S(450, 661)   ,S(448, 659)   ,S(303, 696)   ,S(319, 660)   ,S(273, 553)   ,
		S(452, 624)   ,S(449, 659)   ,S(512, 656)   ,S(569, 671)   ,S(529, 677)   ,S(534, 646)   ,S(458, 646)   ,S(467, 616)   ,
		S(430, 660)   ,S(490, 671)   ,S(492, 710)   ,S(514, 708)   ,S(530, 696)   ,S(509, 697)   ,S(498, 650)   ,S(455, 638)   ,
		S(464, 676)   ,S(484, 689)   ,S(491, 716)   ,S(502, 725)   ,S(499, 726)   ,S(496, 703)   ,S(482, 688)   ,S(475, 661)   ,
		S(469, 677)   ,S(472, 689)   ,S(479, 706)   ,S(481, 716)   ,S(484, 716)   ,S(477, 705)   ,S(472, 681)   ,S(473, 660)   ,
		S(418, 651)   ,S(443, 663)   ,S(454, 678)   ,S(454, 701)   ,S(457, 701)   ,S(445, 676)   ,S(444, 647)   ,S(427, 620)   ,
		S(414, 675)   ,S(402, 676)   ,S(426, 656)   ,S(435, 668)   ,S(440, 671)   ,S(430, 651)   ,S(412, 658)   ,S(414, 632)   ,
		S(378, 644)   ,S(405, 646)   ,S(415, 656)   ,S(408, 665)   ,S(426, 653)   ,S(430, 621)   ,S(423, 621)   ,S(401, 585)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(415, 746)   ,S(395, 746)   ,S(339, 747)   ,S(332, 755)   ,S(355, 742)   ,S(321, 742)   ,S(423, 727)   ,S(410, 735)   ,
		S(414, 734)   ,S(474, 727)   ,S(471, 722)   ,S(439, 731)   ,S(467, 722)   ,S(463, 728)   ,S(432, 738)   ,S(434, 723)   ,
		S(471, 726)   ,S(476, 731)   ,S(501, 726)   ,S(481, 722)   ,S(495, 724)   ,S(490, 749)   ,S(474, 738)   ,S(464, 744)   ,
		S(460, 726)   ,S(495, 722)   ,S(478, 724)   ,S(501, 743)   ,S(503, 749)   ,S(496, 731)   ,S(502, 734)   ,S(452, 742)   ,
		S(468, 706)   ,S(474, 715)   ,S(468, 740)   ,S(488, 738)   ,S(495, 741)   ,S(470, 734)   ,S(477, 721)   ,S(476, 710)   ,
		S(472, 707)   ,S(485, 715)   ,S(474, 728)   ,S(478, 731)   ,S(472, 730)   ,S(476, 728)   ,S(478, 712)   ,S(481, 717)   ,
		S(484, 699)   ,S(479, 686)   ,S(478, 703)   ,S(456, 720)   ,S(458, 724)   ,S(475, 706)   ,S(488, 703)   ,S(478, 685)   ,
		S(490, 696)   ,S(477, 710)   ,S(457, 713)   ,S(450, 708)   ,S(445, 718)   ,S(451, 724)   ,S(453, 709)   ,S(477, 693)   ,
	},
	{
		S(385, 741)   ,S(353, 738)   ,S(366, 735)   ,S(348, 742)   ,S(338, 746)   ,S(318, 743)   ,S(431, 730)   ,S(394, 751)   ,
		S(390, 729)   ,S(436, 741)   ,S(458, 729)   ,S(438, 723)   ,S(455, 724)   ,S(478, 723)   ,S(473, 731)   ,S(439, 722)   ,
		S(460, 742)   ,S(492, 736)   ,S(493, 735)   ,S(501, 726)   ,S(501, 716)   ,S(503, 729)   ,S(493, 723)   ,S(480, 728)   ,
		S(459, 728)   ,S(501, 727)   ,S(488, 734)   ,S(507, 740)   ,S(517, 737)   ,S(488, 719)   ,S(498, 723)   ,S(476, 726)   ,
		S(475, 712)   ,S(464, 724)   ,S(482, 730)   ,S(497, 737)   ,S(494, 735)   ,S(479, 726)   ,S(481, 708)   ,S(463, 708)   ,
		S(473, 714)   ,S(484, 716)   ,S(486, 727)   ,S(489, 722)   ,S(479, 725)   ,S(479, 717)   ,S(479, 706)   ,S(464, 707)   ,
		S(473, 711)   ,S(498, 694)   ,S(480, 709)   ,S(463, 717)   ,S(460, 715)   ,S(464, 703)   ,S(468, 691)   ,S(477, 678)   ,
		S(485, 697)   ,S(455, 709)   ,S(452, 718)   ,S(449, 708)   ,S(449, 707)   ,S(455, 708)   ,S(469, 707)   ,S(481, 693)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(634, 1295)  ,S(630, 1300)  ,S(599, 1310)  ,S(606, 1306)  ,S(599, 1314)  ,S(660, 1306)  ,S(648, 1308)  ,S(652, 1301)  ,
		S(614, 1288)  ,S(600, 1302)  ,S(623, 1295)  ,S(639, 1296)  ,S(624, 1304)  ,S(660, 1282)  ,S(620, 1295)  ,S(626, 1283)  ,
		S(606, 1275)  ,S(659, 1256)  ,S(636, 1271)  ,S(668, 1251)  ,S(683, 1248)  ,S(684, 1265)  ,S(705, 1246)  ,S(636, 1266)  ,
		S(605, 1260)  ,S(627, 1259)  ,S(636, 1258)  ,S(666, 1248)  ,S(653, 1258)  ,S(662, 1257)  ,S(651, 1264)  ,S(631, 1261)  ,
		S(584, 1244)  ,S(584, 1263)  ,S(588, 1259)  ,S(604, 1250)  ,S(593, 1257)  ,S(597, 1263)  ,S(618, 1259)  ,S(597, 1240)  ,
		S(579, 1221)  ,S(590, 1240)  ,S(582, 1235)  ,S(600, 1225)  ,S(597, 1229)  ,S(597, 1234)  ,S(626, 1227)  ,S(597, 1203)  ,
		S(562, 1217)  ,S(594, 1216)  ,S(592, 1223)  ,S(601, 1214)  ,S(599, 1216)  ,S(611, 1209)  ,S(621, 1201)  ,S(547, 1218)  ,
		S(601, 1217)  ,S(601, 1222)  ,S(603, 1223)  ,S(612, 1214)  ,S(611, 1216)  ,S(615, 1236)  ,S(609, 1224)  ,S(599, 1197)  ,
	},
	{
		S(648, 1291)  ,S(607, 1315)  ,S(630, 1311)  ,S(619, 1300)  ,S(627, 1295)  ,S(633, 1286)  ,S(663, 1276)  ,S(665, 1278)  ,
		S(591, 1296)  ,S(614, 1298)  ,S(647, 1290)  ,S(637, 1291)  ,S(637, 1287)  ,S(651, 1271)  ,S(617, 1283)  ,S(630, 1276)  ,
		S(602, 1281)  ,S(662, 1261)  ,S(651, 1275)  ,S(674, 1248)  ,S(688, 1237)  ,S(658, 1254)  ,S(688, 1237)  ,S(632, 1260)  ,
		S(594, 1269)  ,S(636, 1262)  ,S(654, 1260)  ,S(659, 1250)  ,S(657, 1247)  ,S(645, 1249)  ,S(646, 1244)  ,S(630, 1250)  ,
		S(563, 1235)  ,S(597, 1253)  ,S(589, 1263)  ,S(592, 1253)  ,S(594, 1248)  ,S(589, 1255)  ,S(591, 1256)  ,S(589, 1238)  ,
		S(551, 1209)  ,S(596, 1225)  ,S(598, 1227)  ,S(590, 1222)  ,S(590, 1224)  ,S(588, 1227)  ,S(606, 1227)  ,S(585, 1210)  ,
		S(460, 1237)  ,S(575, 1206)  ,S(593, 1217)  ,S(592, 1215)  ,S(596, 1210)  ,S(598, 1207)  ,S(601, 1202)  ,S(557, 1203)  ,
		S(554, 1221)  ,S(579, 1233)  ,S(608, 1222)  ,S(610, 1216)  ,S(608, 1209)  ,S(606, 1212)  ,S(612, 1207)  ,S(600, 1200)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1237, 1470) ,S(1268, 1464) ,S(1248, 1503) ,S(1251, 1511) ,S(1239, 1540) ,S(1270, 1541) ,S(1273, 1507) ,S(1262, 1483) ,
		S(1264, 1446) ,S(1210, 1495) ,S(1261, 1468) ,S(1201, 1537) ,S(1205, 1575) ,S(1285, 1546) ,S(1202, 1546) ,S(1280, 1488) ,
		S(1267, 1447) ,S(1274, 1442) ,S(1261, 1468) ,S(1270, 1481) ,S(1279, 1517) ,S(1284, 1535) ,S(1279, 1535) ,S(1261, 1547) ,
		S(1282, 1432) ,S(1281, 1470) ,S(1272, 1458) ,S(1255, 1528) ,S(1256, 1548) ,S(1291, 1545) ,S(1301, 1536) ,S(1298, 1508) ,
		S(1284, 1410) ,S(1283, 1457) ,S(1272, 1472) ,S(1265, 1523) ,S(1268, 1519) ,S(1282, 1504) ,S(1294, 1481) ,S(1300, 1462) ,
		S(1290, 1390) ,S(1296, 1422) ,S(1286, 1455) ,S(1284, 1450) ,S(1285, 1441) ,S(1289, 1465) ,S(1304, 1427) ,S(1301, 1399) ,
		S(1293, 1380) ,S(1296, 1387) ,S(1304, 1374) ,S(1299, 1410) ,S(1300, 1398) ,S(1318, 1341) ,S(1306, 1343) ,S(1273, 1389) ,
		S(1295, 1373) ,S(1298, 1374) ,S(1303, 1374) ,S(1309, 1402) ,S(1311, 1362) ,S(1282, 1360) ,S(1283, 1332) ,S(1279, 1353) ,
	},
	{
		S(1276, 1418) ,S(1274, 1452) ,S(1272, 1478) ,S(1260, 1515) ,S(1245, 1512) ,S(1268, 1475) ,S(1262, 1455) ,S(1266, 1437) ,
		S(1258, 1463) ,S(1198, 1511) ,S(1268, 1508) ,S(1199, 1562) ,S(1186, 1575) ,S(1264, 1468) ,S(1215, 1495) ,S(1284, 1431) ,
		S(1264, 1487) ,S(1269, 1485) ,S(1257, 1516) ,S(1280, 1506) ,S(1283, 1480) ,S(1268, 1479) ,S(1298, 1429) ,S(1297, 1440) ,
		S(1282, 1469) ,S(1294, 1510) ,S(1284, 1505) ,S(1273, 1534) ,S(1271, 1516) ,S(1284, 1456) ,S(1300, 1462) ,S(1303, 1440) ,
		S(1287, 1425) ,S(1288, 1479) ,S(1281, 1488) ,S(1276, 1514) ,S(1281, 1494) ,S(1280, 1462) ,S(1293, 1437) ,S(1290, 1411) ,
		S(1266, 1416) ,S(1293, 1418) ,S(1291, 1454) ,S(1289, 1432) ,S(1290, 1432) ,S(1293, 1433) ,S(1301, 1407) ,S(1296, 1373) ,
		S(1247, 1383) ,S(1282, 1352) ,S(1314, 1336) ,S(1307, 1384) ,S(1302, 1397) ,S(1310, 1353) ,S(1310, 1362) ,S(1305, 1345) ,
		S(1253, 1358) ,S(1279, 1327) ,S(1285, 1330) ,S(1303, 1345) ,S(1309, 1363) ,S(1311, 1339) ,S(1311, 1352) ,S(1303, 1337) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(91, -41)    ,S(67, -33)    ,S(56, -30)    ,S(-27, -188)  ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(145, 14)    ,S(154, 31)    ,S(72, 65)     ,S(-7, -30)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(166, 42)    ,S(230, 48)    ,S(174, 56)    ,S(37, 9)      ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(118, 62)    ,S(142, 56)    ,S(115, 37)    ,S(-55, 14)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(74, 63)     ,S(79, 42)     ,S(76, 14)     ,S(-65, -15)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(24, 51)     ,S(27, 29)     ,S(18, 1)      ,S(-46, -17)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-66, 38)    ,S(-52, 35)    ,S(-5, -2)     ,S(2, -42)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-69, -29)   ,S(-95, 8)     ,S(-5, -37)    ,S(2, -126)    ,
	},
	{
		S(-17, -198)  ,S(49, -77)    ,S(84, -62)    ,S(102, -35)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-43, -43)   ,S(88, 37)     ,S(144, 16)    ,S(189, -12)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(5, 11)      ,S(172, 42)    ,S(201, 37)    ,S(173, 30)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-43, 13)    ,S(127, 21)    ,S(147, 43)    ,S(119, 49)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-55, -30)   ,S(70, 5)      ,S(115, 26)    ,S(71, 51)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-72, -19)   ,S(11, -9)     ,S(38, 11)     ,S(18, 34)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-11, -34)   ,S(-14, -15)   ,S(-20, 7)     ,S(-69, 21)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-24, -109)  ,S(-12, -54)   ,S(-50, -13)   ,S(-91, -26)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(100, 200), S(420, 615), S(433, 657), S(579, 1168), S(1258, 1396), };
constexpr PScore knightMob[9] = {S(-26, -129), S(-7, -52), S(4, -6), S(11, 20), S(16, 30), S(22, 46), S(29, 44), S(39, 39), S(50, 14), };
constexpr PScore bishopMob[14] = {S(-49, -180), S(-18, -105), S(-1, -52), S(7, -23), S(17, -4), S(22, 16), S(25, 28), S(24, 35), S(24, 45), S(27, 47), S(36, 40), S(58, 25), S(64, 32), S(87, -11), };
constexpr PScore rookMob[15] = {S(-22, -138), S(-28, -90), S(-18, -55), S(-18, -39), S(-16, -22), S(-19, -4), S(-16, 6), S(-11, 7), S(-8, 10), S(2, 16), S(1, 20), S(7, 24), S(11, 26), S(28, 6), S(91, -29), };
constexpr PScore queenMob[28] = {S(-128, -449), S(-86, -473), S(-47, -380), S(-29, -290), S(-26, -196), S(-23, -138), S(-21, -104), S(-17, -86), S(-13, -65), S(-9, -54), S(-5, -47), S(0, -43), S(3, -41), S(7, -39), S(9, -39), S(11, -41), S(10, -42), S(6, -40), S(9, -45), S(12, -56), S(26, -80), S(32, -98), S(33, -111), S(44, -135), S(22, -141), S(29, -166), S(-1, -133), S(-9, -105), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 856.4735717773438;
constexpr double KSBMG = 1.6870042085647583;
constexpr double KSCMG = -3.129648208618164;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 1082.604248046875;
constexpr double KSBEG = 2.093083381652832;
constexpr double KSCEG = 2.657895565032959;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);