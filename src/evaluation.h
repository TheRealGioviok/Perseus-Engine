#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,
		S(200, 260)   ,S(157, 262)   ,S(198, 207)   ,S(203, 168)   ,S(179, 179)   ,S(123, 229)   ,S(-90, 322)   ,S(-45, 326)   ,
		S(101, 298)   ,S(128, 276)   ,S(149, 233)   ,S(142, 192)   ,S(152, 204)   ,S(204, 242)   ,S(148, 278)   ,S(112, 287)   ,
		S(96, 250)    ,S(100, 234)   ,S(108, 214)   ,S(117, 190)   ,S(127, 208)   ,S(135, 220)   ,S(97, 246)    ,S(95, 243)    ,
		S(89, 224)    ,S(87, 217)    ,S(103, 198)   ,S(110, 193)   ,S(112, 202)   ,S(116, 208)   ,S(98, 216)    ,S(97, 211)    ,
		S(91, 213)    ,S(91, 208)    ,S(98, 204)    ,S(105, 203)   ,S(118, 219)   ,S(111, 222)   ,S(120, 200)   ,S(110, 195)   ,
		S(89, 223)    ,S(89, 212)    ,S(88, 213)    ,S(94, 217)    ,S(96, 236)    ,S(133, 229)   ,S(143, 202)   ,S(111, 182)   ,
		S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,
	},
	{
		S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,
		S(132, 324)   ,S(98, 337)    ,S(176, 297)   ,S(188, 224)   ,S(184, 209)   ,S(202, 186)   ,S(90, 258)    ,S(84, 261)    ,
		S(118, 321)   ,S(170, 315)   ,S(166, 284)   ,S(153, 236)   ,S(164, 208)   ,S(160, 236)   ,S(153, 255)   ,S(96, 278)    ,
		S(126, 249)   ,S(119, 248)   ,S(126, 231)   ,S(129, 216)   ,S(129, 210)   ,S(115, 222)   ,S(83, 246)    ,S(87, 248)    ,
		S(124, 214)   ,S(111, 221)   ,S(122, 208)   ,S(122, 209)   ,S(110, 201)   ,S(97, 214)    ,S(75, 225)    ,S(71, 229)    ,
		S(128, 202)   ,S(136, 197)   ,S(123, 216)   ,S(114, 220)   ,S(102, 214)   ,S(94, 216)    ,S(78, 221)    ,S(68, 220)    ,
		S(130, 199)   ,S(154, 196)   ,S(141, 221)   ,S(107, 233)   ,S(85, 226)    ,S(82, 226)    ,S(74, 226)    ,S(71, 227)    ,
		S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(283, 603)   ,S(377, 676)   ,S(362, 724)   ,S(475, 697)   ,S(513, 692)   ,S(387, 729)   ,S(379, 693)   ,S(343, 578)   ,
		S(487, 653)   ,S(494, 675)   ,S(530, 680)   ,S(551, 716)   ,S(559, 718)   ,S(571, 671)   ,S(487, 683)   ,S(507, 656)   ,
		S(483, 662)   ,S(503, 687)   ,S(535, 724)   ,S(537, 729)   ,S(548, 726)   ,S(544, 731)   ,S(481, 713)   ,S(493, 685)   ,
		S(521, 680)   ,S(532, 690)   ,S(546, 724)   ,S(544, 753)   ,S(549, 762)   ,S(548, 740)   ,S(526, 733)   ,S(519, 713)   ,
		S(511, 686)   ,S(524, 697)   ,S(525, 722)   ,S(530, 738)   ,S(536, 748)   ,S(531, 734)   ,S(539, 718)   ,S(512, 718)   ,
		S(487, 640)   ,S(498, 672)   ,S(499, 703)   ,S(508, 728)   ,S(503, 728)   ,S(493, 704)   ,S(489, 693)   ,S(478, 673)   ,
		S(463, 661)   ,S(474, 676)   ,S(477, 669)   ,S(487, 696)   ,S(482, 698)   ,S(470, 676)   ,S(462, 686)   ,S(465, 690)   ,
		S(449, 619)   ,S(475, 637)   ,S(470, 652)   ,S(474, 684)   ,S(469, 687)   ,S(467, 678)   ,S(465, 658)   ,S(426, 648)   ,
	},
	{
		S(307, 568)   ,S(389, 664)   ,S(389, 711)   ,S(490, 687)   ,S(494, 679)   ,S(351, 715)   ,S(358, 686)   ,S(312, 578)   ,
		S(481, 649)   ,S(476, 684)   ,S(529, 684)   ,S(590, 697)   ,S(563, 701)   ,S(553, 675)   ,S(495, 667)   ,S(496, 641)   ,
		S(462, 684)   ,S(505, 698)   ,S(518, 732)   ,S(545, 730)   ,S(555, 720)   ,S(550, 715)   ,S(524, 675)   ,S(487, 663)   ,
		S(505, 696)   ,S(530, 707)   ,S(544, 734)   ,S(559, 745)   ,S(560, 742)   ,S(550, 720)   ,S(532, 705)   ,S(522, 678)   ,
		S(513, 700)   ,S(521, 710)   ,S(532, 726)   ,S(539, 737)   ,S(540, 736)   ,S(530, 721)   ,S(527, 701)   ,S(519, 682)   ,
		S(455, 674)   ,S(481, 687)   ,S(497, 702)   ,S(499, 724)   ,S(502, 722)   ,S(494, 699)   ,S(489, 668)   ,S(470, 644)   ,
		S(452, 695)   ,S(443, 699)   ,S(463, 680)   ,S(475, 693)   ,S(482, 692)   ,S(471, 672)   ,S(456, 680)   ,S(454, 656)   ,
		S(415, 666)   ,S(446, 663)   ,S(456, 674)   ,S(452, 685)   ,S(469, 672)   ,S(470, 646)   ,S(465, 643)   ,S(439, 608)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(464, 767)   ,S(440, 764)   ,S(386, 760)   ,S(376, 768)   ,S(396, 752)   ,S(370, 752)   ,S(464, 742)   ,S(458, 751)   ,
		S(455, 753)   ,S(486, 753)   ,S(501, 738)   ,S(463, 750)   ,S(469, 743)   ,S(489, 735)   ,S(453, 753)   ,S(468, 741)   ,
		S(517, 743)   ,S(512, 746)   ,S(526, 741)   ,S(507, 737)   ,S(514, 734)   ,S(503, 761)   ,S(491, 754)   ,S(496, 759)   ,
		S(500, 747)   ,S(523, 739)   ,S(512, 732)   ,S(525, 748)   ,S(522, 756)   ,S(514, 747)   ,S(516, 754)   ,S(486, 754)   ,
		S(505, 730)   ,S(516, 727)   ,S(513, 744)   ,S(517, 742)   ,S(525, 747)   ,S(510, 747)   ,S(513, 736)   ,S(504, 731)   ,
		S(512, 723)   ,S(529, 727)   ,S(513, 737)   ,S(513, 742)   ,S(511, 743)   ,S(510, 738)   ,S(514, 731)   ,S(510, 737)   ,
		S(524, 713)   ,S(523, 699)   ,S(517, 717)   ,S(499, 733)   ,S(499, 735)   ,S(514, 718)   ,S(527, 712)   ,S(512, 699)   ,
		S(531, 710)   ,S(515, 730)   ,S(497, 736)   ,S(491, 728)   ,S(487, 735)   ,S(492, 740)   ,S(492, 725)   ,S(514, 705)   ,
	},
	{
		S(432, 757)   ,S(399, 753)   ,S(408, 748)   ,S(387, 754)   ,S(371, 760)   ,S(357, 759)   ,S(469, 747)   ,S(442, 767)   ,
		S(425, 749)   ,S(460, 758)   ,S(485, 742)   ,S(456, 739)   ,S(462, 742)   ,S(501, 735)   ,S(498, 750)   ,S(478, 738)   ,
		S(494, 760)   ,S(508, 754)   ,S(509, 746)   ,S(519, 739)   ,S(522, 727)   ,S(529, 740)   ,S(524, 736)   ,S(519, 744)   ,
		S(483, 747)   ,S(520, 742)   ,S(502, 748)   ,S(523, 750)   ,S(540, 742)   ,S(518, 725)   ,S(523, 739)   ,S(513, 741)   ,
		S(504, 731)   ,S(494, 738)   ,S(518, 741)   ,S(527, 743)   ,S(524, 738)   ,S(524, 732)   ,S(524, 718)   ,S(497, 728)   ,
		S(499, 733)   ,S(515, 731)   ,S(518, 739)   ,S(523, 734)   ,S(516, 735)   ,S(518, 727)   ,S(522, 720)   ,S(503, 721)   ,
		S(503, 724)   ,S(533, 705)   ,S(516, 719)   ,S(504, 730)   ,S(500, 727)   ,S(505, 716)   ,S(509, 702)   ,S(518, 694)   ,
		S(521, 710)   ,S(491, 723)   ,S(493, 733)   ,S(490, 724)   ,S(490, 724)   ,S(495, 729)   ,S(507, 726)   ,S(521, 708)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(684, 1292)  ,S(678, 1295)  ,S(644, 1308)  ,S(657, 1299)  ,S(630, 1314)  ,S(691, 1308)  ,S(695, 1304)  ,S(687, 1302)  ,
		S(664, 1280)  ,S(653, 1289)  ,S(675, 1284)  ,S(693, 1285)  ,S(663, 1299)  ,S(698, 1277)  ,S(671, 1286)  ,S(669, 1277)  ,
		S(656, 1267)  ,S(711, 1247)  ,S(686, 1262)  ,S(721, 1241)  ,S(722, 1245)  ,S(724, 1260)  ,S(746, 1239)  ,S(674, 1264)  ,
		S(657, 1253)  ,S(679, 1250)  ,S(686, 1251)  ,S(714, 1241)  ,S(693, 1257)  ,S(699, 1255)  ,S(688, 1259)  ,S(670, 1258)  ,
		S(630, 1241)  ,S(635, 1259)  ,S(635, 1256)  ,S(651, 1247)  ,S(635, 1260)  ,S(642, 1265)  ,S(659, 1260)  ,S(634, 1243)  ,
		S(625, 1213)  ,S(639, 1228)  ,S(630, 1225)  ,S(650, 1214)  ,S(639, 1224)  ,S(644, 1229)  ,S(671, 1218)  ,S(638, 1197)  ,
		S(606, 1209)  ,S(640, 1205)  ,S(638, 1212)  ,S(649, 1203)  ,S(643, 1211)  ,S(656, 1205)  ,S(667, 1192)  ,S(588, 1210)  ,
		S(645, 1203)  ,S(647, 1210)  ,S(651, 1211)  ,S(659, 1202)  ,S(654, 1207)  ,S(658, 1224)  ,S(652, 1214)  ,S(641, 1187)  ,
	},
	{
		S(683, 1290)  ,S(649, 1311)  ,S(665, 1310)  ,S(643, 1303)  ,S(674, 1291)  ,S(677, 1283)  ,S(712, 1272)  ,S(709, 1277)  ,
		S(630, 1289)  ,S(662, 1288)  ,S(686, 1282)  ,S(675, 1283)  ,S(691, 1274)  ,S(699, 1260)  ,S(670, 1272)  ,S(680, 1266)  ,
		S(637, 1278)  ,S(704, 1254)  ,S(687, 1270)  ,S(713, 1241)  ,S(736, 1229)  ,S(704, 1246)  ,S(738, 1228)  ,S(679, 1253)  ,
		S(628, 1264)  ,S(675, 1256)  ,S(685, 1258)  ,S(693, 1248)  ,S(703, 1237)  ,S(690, 1239)  ,S(693, 1235)  ,S(677, 1242)  ,
		S(595, 1237)  ,S(635, 1253)  ,S(623, 1264)  ,S(633, 1253)  ,S(640, 1243)  ,S(634, 1251)  ,S(640, 1251)  ,S(633, 1235)  ,
		S(592, 1201)  ,S(643, 1215)  ,S(644, 1216)  ,S(635, 1212)  ,S(639, 1211)  ,S(637, 1216)  ,S(653, 1216)  ,S(629, 1202)  ,
		S(503, 1224)  ,S(622, 1193)  ,S(637, 1205)  ,S(636, 1205)  ,S(643, 1198)  ,S(643, 1197)  ,S(647, 1191)  ,S(601, 1193)  ,
		S(593, 1207)  ,S(622, 1218)  ,S(651, 1209)  ,S(653, 1203)  ,S(653, 1194)  ,S(651, 1199)  ,S(656, 1195)  ,S(645, 1187)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1329, 2261) ,S(1357, 2260) ,S(1335, 2290) ,S(1341, 2301) ,S(1323, 2316) ,S(1367, 2307) ,S(1380, 2289) ,S(1364, 2269) ,
		S(1350, 2242) ,S(1289, 2297) ,S(1341, 2267) ,S(1282, 2330) ,S(1269, 2366) ,S(1362, 2309) ,S(1297, 2340) ,S(1359, 2285) ,
		S(1350, 2242) ,S(1351, 2241) ,S(1337, 2265) ,S(1341, 2279) ,S(1341, 2293) ,S(1334, 2318) ,S(1328, 2319) ,S(1326, 2340) ,
		S(1361, 2228) ,S(1356, 2266) ,S(1346, 2255) ,S(1320, 2323) ,S(1313, 2344) ,S(1344, 2332) ,S(1357, 2331) ,S(1362, 2296) ,
		S(1364, 2214) ,S(1368, 2256) ,S(1352, 2269) ,S(1338, 2327) ,S(1335, 2319) ,S(1352, 2302) ,S(1363, 2273) ,S(1370, 2261) ,
		S(1374, 2189) ,S(1381, 2212) ,S(1367, 2250) ,S(1363, 2244) ,S(1362, 2233) ,S(1363, 2256) ,S(1380, 2216) ,S(1375, 2195) ,
		S(1378, 2174) ,S(1381, 2180) ,S(1388, 2165) ,S(1381, 2200) ,S(1384, 2187) ,S(1401, 2124) ,S(1388, 2135) ,S(1352, 2181) ,
		S(1380, 2164) ,S(1380, 2167) ,S(1388, 2167) ,S(1393, 2191) ,S(1394, 2154) ,S(1370, 2145) ,S(1366, 2127) ,S(1363, 2139) ,
	},
	{
		S(1353, 2213) ,S(1358, 2252) ,S(1354, 2266) ,S(1339, 2297) ,S(1340, 2291) ,S(1366, 2251) ,S(1356, 2240) ,S(1354, 2232) ,
		S(1323, 2252) ,S(1268, 2307) ,S(1331, 2296) ,S(1260, 2351) ,S(1257, 2369) ,S(1345, 2244) ,S(1298, 2288) ,S(1367, 2222) ,
		S(1323, 2278) ,S(1309, 2279) ,S(1302, 2302) ,S(1338, 2282) ,S(1346, 2269) ,S(1344, 2259) ,S(1368, 2219) ,S(1371, 2236) ,
		S(1335, 2252) ,S(1340, 2301) ,S(1326, 2294) ,S(1323, 2317) ,S(1329, 2304) ,S(1351, 2238) ,S(1368, 2254) ,S(1377, 2226) ,
		S(1351, 2215) ,S(1348, 2262) ,S(1341, 2272) ,S(1338, 2302) ,S(1346, 2288) ,S(1355, 2257) ,S(1374, 2229) ,S(1366, 2211) ,
		S(1335, 2200) ,S(1363, 2191) ,S(1360, 2230) ,S(1362, 2212) ,S(1365, 2214) ,S(1369, 2224) ,S(1381, 2202) ,S(1373, 2172) ,
		S(1322, 2161) ,S(1359, 2125) ,S(1390, 2107) ,S(1384, 2163) ,S(1380, 2178) ,S(1389, 2137) ,S(1389, 2148) ,S(1381, 2142) ,
		S(1330, 2135) ,S(1356, 2112) ,S(1366, 2102) ,S(1383, 2123) ,S(1389, 2142) ,S(1390, 2123) ,S(1388, 2138) ,S(1382, 2124) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(101, -44)   ,S(64, -30)    ,S(77, -41)    ,S(2, -165)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(143, 20)    ,S(164, 32)    ,S(76, 63)     ,S(32, -7)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(149, 50)    ,S(216, 55)    ,S(158, 60)    ,S(73, 34)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(77, 76)     ,S(108, 67)    ,S(80, 49)     ,S(-29, 38)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(24, 72)     ,S(35, 51)     ,S(27, 24)     ,S(-31, 5)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-20, 52)    ,S(-11, 33)    ,S(-23, 5)     ,S(1, 2)       ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-93, 28)    ,S(-74, 26)    ,S(-21, -15)   ,S(50, -21)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-79, -47)   ,S(-98, -5)    ,S(-9, -53)    ,S(45, -95)    ,
	},
	{
		S(1, -202)    ,S(65, -73)    ,S(99, -58)    ,S(122, -38)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-28, -46)   ,S(100, 39)    ,S(154, 23)    ,S(198, -7)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(6, 9)       ,S(162, 50)    ,S(183, 49)    ,S(160, 39)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-55, 15)    ,S(98, 36)     ,S(113, 59)    ,S(89, 61)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-70, -29)   ,S(29, 16)     ,S(72, 38)     ,S(31, 59)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-84, -22)   ,S(-22, -4)    ,S(3, 18)      ,S(-16, 37)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-5, -50)    ,S(-19, -26)   ,S(-29, 1)     ,S(-87, 11)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-10, -128)  ,S(-2, -69)    ,S(-42, -26)   ,S(-93, -43)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(106, 207), S(466, 648), S(473, 684), S(637, 1199), S(1351, 2195), };
constexpr PScore knightMob[9] = {S(-41, -156), S(-21, -77), S(-10, -30), S(-4, -5), S(3, 6), S(7, 20), S(14, 21), S(24, 16), S(35, -7), };
constexpr PScore bishopMob[14] = {S(-58, -205), S(-30, -131), S(-14, -80), S(-7, -50), S(4, -28), S(8, -8), S(10, 6), S(11, 15), S(13, 27), S(21, 29), S(28, 24), S(54, 8), S(66, 14), S(86, -27), };
constexpr PScore rookMob[15] = {S(-26, -140), S(-33, -96), S(-24, -61), S(-22, -44), S(-23, -25), S(-23, -7), S(-21, 3), S(-16, 5), S(-12, 11), S(-4, 18), S(-4, 25), S(1, 31), S(4, 33), S(20, 14), S(83, -19), };
constexpr PScore queenMob[28] = {S(-147, -378), S(-105, -397), S(-69, -308), S(-50, -222), S(-47, -127), S(-45, -70), S(-41, -34), S(-38, -15), S(-35, 6), S(-31, 19), S(-26, 28), S(-22, 33), S(-17, 37), S(-14, 38), S(-12, 39), S(-10, 39), S(-11, 36), S(-13, 36), S(-10, 28), S(-6, 15), S(7, -10), S(15, -33), S(17, -53), S(24, -75), S(1, -84), S(3, -111), S(-38, -71), S(-28, -64), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 901.5151977539062;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.690682888031006;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 378.3019104003906;
constexpr double KSBEG = 1;
constexpr double KSCEG = -0.7805653214454651;

constexpr PScore DAMPEN = S(static_cast<S16>(0.09197794646024704 * RESOLUTION), static_cast<S16>(0.844261884689331 * RESOLUTION));

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);