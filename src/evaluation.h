#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,
		S(201, 261)   ,S(158, 263)   ,S(200, 206)   ,S(202, 165)   ,S(172, 175)   ,S(120, 223)   ,S(-89, 316)   ,S(-47, 324)   ,
		S(101, 296)   ,S(129, 273)   ,S(150, 228)   ,S(142, 183)   ,S(150, 194)   ,S(200, 233)   ,S(147, 271)   ,S(109, 278)   ,
		S(96, 250)    ,S(101, 233)   ,S(108, 212)   ,S(117, 184)   ,S(126, 196)   ,S(135, 210)   ,S(97, 236)    ,S(94, 235)    ,
		S(89, 223)    ,S(87, 215)    ,S(103, 196)   ,S(110, 190)   ,S(111, 198)   ,S(115, 205)   ,S(96, 212)    ,S(97, 208)    ,
		S(92, 213)    ,S(92, 206)    ,S(99, 203)    ,S(105, 202)   ,S(118, 217)   ,S(109, 220)   ,S(119, 198)   ,S(109, 194)   ,
		S(89, 223)    ,S(89, 214)    ,S(87, 214)    ,S(94, 220)    ,S(95, 239)    ,S(133, 232)   ,S(142, 206)   ,S(111, 183)   ,
		S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,
	},
	{
		S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,
		S(137, 321)   ,S(103, 332)   ,S(177, 294)   ,S(183, 222)   ,S(177, 206)   ,S(206, 179)   ,S(90, 259)    ,S(81, 263)    ,
		S(117, 315)   ,S(169, 308)   ,S(164, 279)   ,S(151, 230)   ,S(160, 201)   ,S(162, 226)   ,S(154, 248)   ,S(94, 272)    ,
		S(126, 247)   ,S(119, 245)   ,S(124, 228)   ,S(128, 208)   ,S(128, 204)   ,S(116, 215)   ,S(85, 240)    ,S(88, 243)    ,
		S(124, 214)   ,S(109, 221)   ,S(120, 209)   ,S(120, 207)   ,S(110, 200)   ,S(98, 210)    ,S(76, 221)    ,S(72, 225)    ,
		S(126, 203)   ,S(135, 199)   ,S(120, 216)   ,S(113, 218)   ,S(102, 213)   ,S(94, 212)    ,S(78, 216)    ,S(71, 218)    ,
		S(129, 202)   ,S(151, 202)   ,S(140, 227)   ,S(105, 237)   ,S(84, 230)    ,S(83, 226)    ,S(75, 227)    ,S(72, 227)    ,
		S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,S(105, 206)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(274, 615)   ,S(371, 688)   ,S(356, 732)   ,S(467, 704)   ,S(507, 698)   ,S(379, 734)   ,S(373, 699)   ,S(336, 584)   ,
		S(478, 665)   ,S(484, 687)   ,S(521, 688)   ,S(542, 725)   ,S(550, 723)   ,S(561, 680)   ,S(478, 694)   ,S(498, 664)   ,
		S(474, 673)   ,S(494, 698)   ,S(527, 732)   ,S(528, 736)   ,S(538, 731)   ,S(533, 742)   ,S(473, 722)   ,S(483, 692)   ,
		S(511, 694)   ,S(522, 702)   ,S(538, 731)   ,S(535, 760)   ,S(540, 768)   ,S(540, 746)   ,S(518, 737)   ,S(511, 718)   ,
		S(500, 702)   ,S(515, 708)   ,S(517, 733)   ,S(522, 747)   ,S(529, 756)   ,S(524, 742)   ,S(533, 725)   ,S(505, 725)   ,
		S(476, 656)   ,S(489, 686)   ,S(490, 712)   ,S(501, 738)   ,S(497, 737)   ,S(488, 710)   ,S(484, 699)   ,S(473, 678)   ,
		S(453, 674)   ,S(465, 688)   ,S(470, 682)   ,S(479, 706)   ,S(476, 706)   ,S(466, 683)   ,S(458, 692)   ,S(460, 697)   ,
		S(439, 633)   ,S(466, 650)   ,S(462, 663)   ,S(467, 695)   ,S(463, 698)   ,S(461, 689)   ,S(458, 666)   ,S(422, 655)   ,
	},
	{
		S(302, 571)   ,S(388, 667)   ,S(392, 714)   ,S(486, 690)   ,S(486, 685)   ,S(349, 719)   ,S(358, 689)   ,S(306, 588)   ,
		S(475, 656)   ,S(468, 695)   ,S(521, 692)   ,S(582, 704)   ,S(554, 709)   ,S(548, 679)   ,S(489, 678)   ,S(489, 652)   ,
		S(455, 689)   ,S(499, 709)   ,S(510, 743)   ,S(536, 738)   ,S(545, 729)   ,S(543, 723)   ,S(518, 683)   ,S(479, 670)   ,
		S(500, 701)   ,S(523, 716)   ,S(537, 742)   ,S(551, 752)   ,S(552, 751)   ,S(543, 726)   ,S(523, 714)   ,S(512, 690)   ,
		S(507, 711)   ,S(513, 722)   ,S(526, 736)   ,S(532, 747)   ,S(533, 747)   ,S(523, 731)   ,S(519, 709)   ,S(510, 692)   ,
		S(451, 683)   ,S(477, 699)   ,S(492, 711)   ,S(493, 733)   ,S(496, 733)   ,S(487, 709)   ,S(481, 678)   ,S(461, 655)   ,
		S(447, 706)   ,S(437, 708)   ,S(459, 688)   ,S(471, 701)   ,S(476, 703)   ,S(465, 682)   ,S(449, 689)   ,S(447, 663)   ,
		S(411, 673)   ,S(441, 674)   ,S(451, 687)   ,S(447, 694)   ,S(462, 683)   ,S(464, 653)   ,S(457, 653)   ,S(432, 618)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(452, 784)   ,S(428, 780)   ,S(374, 779)   ,S(366, 785)   ,S(391, 769)   ,S(362, 769)   ,S(456, 758)   ,S(444, 771)   ,
		S(445, 770)   ,S(477, 765)   ,S(490, 753)   ,S(453, 762)   ,S(459, 757)   ,S(479, 753)   ,S(441, 768)   ,S(454, 762)   ,
		S(508, 757)   ,S(504, 757)   ,S(518, 750)   ,S(498, 749)   ,S(504, 753)   ,S(489, 777)   ,S(480, 771)   ,S(485, 776)   ,
		S(489, 761)   ,S(515, 752)   ,S(503, 745)   ,S(517, 760)   ,S(513, 767)   ,S(506, 759)   ,S(507, 766)   ,S(477, 770)   ,
		S(495, 744)   ,S(507, 742)   ,S(504, 756)   ,S(509, 755)   ,S(519, 757)   ,S(503, 757)   ,S(505, 750)   ,S(495, 745)   ,
		S(500, 740)   ,S(519, 740)   ,S(505, 746)   ,S(507, 750)   ,S(505, 749)   ,S(505, 744)   ,S(508, 737)   ,S(503, 744)   ,
		S(514, 730)   ,S(512, 713)   ,S(509, 725)   ,S(493, 742)   ,S(494, 744)   ,S(508, 727)   ,S(522, 721)   ,S(506, 707)   ,
		S(520, 725)   ,S(506, 742)   ,S(489, 746)   ,S(484, 738)   ,S(482, 744)   ,S(486, 751)   ,S(487, 735)   ,S(508, 716)   ,
	},
	{
		S(418, 776)   ,S(389, 768)   ,S(402, 762)   ,S(385, 766)   ,S(370, 773)   ,S(346, 777)   ,S(458, 767)   ,S(429, 790)   ,
		S(415, 764)   ,S(450, 770)   ,S(474, 757)   ,S(447, 752)   ,S(452, 757)   ,S(492, 753)   ,S(488, 765)   ,S(466, 758)   ,
		S(486, 774)   ,S(500, 766)   ,S(500, 758)   ,S(511, 752)   ,S(513, 744)   ,S(521, 753)   ,S(516, 752)   ,S(508, 762)   ,
		S(475, 763)   ,S(511, 757)   ,S(494, 762)   ,S(516, 759)   ,S(531, 757)   ,S(509, 741)   ,S(514, 754)   ,S(504, 758)   ,
		S(496, 749)   ,S(486, 756)   ,S(510, 756)   ,S(520, 756)   ,S(517, 754)   ,S(515, 745)   ,S(515, 735)   ,S(488, 743)   ,
		S(492, 747)   ,S(508, 746)   ,S(512, 751)   ,S(517, 743)   ,S(510, 746)   ,S(511, 736)   ,S(513, 732)   ,S(493, 737)   ,
		S(497, 739)   ,S(527, 720)   ,S(510, 732)   ,S(497, 741)   ,S(494, 739)   ,S(498, 726)   ,S(502, 714)   ,S(508, 709)   ,
		S(515, 723)   ,S(485, 735)   ,S(488, 745)   ,S(484, 735)   ,S(483, 735)   ,S(488, 740)   ,S(498, 738)   ,S(512, 722)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(683, 1290)  ,S(678, 1292)  ,S(644, 1305)  ,S(657, 1296)  ,S(627, 1315)  ,S(693, 1307)  ,S(695, 1304)  ,S(690, 1302)  ,
		S(662, 1279)  ,S(651, 1290)  ,S(671, 1286)  ,S(691, 1284)  ,S(659, 1299)  ,S(694, 1277)  ,S(668, 1287)  ,S(667, 1279)  ,
		S(653, 1266)  ,S(709, 1245)  ,S(682, 1263)  ,S(716, 1241)  ,S(717, 1245)  ,S(720, 1260)  ,S(743, 1239)  ,S(671, 1265)  ,
		S(653, 1256)  ,S(674, 1252)  ,S(682, 1255)  ,S(710, 1243)  ,S(687, 1256)  ,S(695, 1254)  ,S(683, 1261)  ,S(665, 1260)  ,
		S(626, 1243)  ,S(632, 1261)  ,S(630, 1259)  ,S(646, 1249)  ,S(631, 1260)  ,S(637, 1267)  ,S(655, 1262)  ,S(631, 1246)  ,
		S(620, 1222)  ,S(633, 1238)  ,S(624, 1236)  ,S(644, 1226)  ,S(634, 1234)  ,S(638, 1238)  ,S(664, 1228)  ,S(631, 1208)  ,
		S(601, 1219)  ,S(634, 1216)  ,S(632, 1224)  ,S(643, 1216)  ,S(636, 1220)  ,S(650, 1215)  ,S(659, 1205)  ,S(581, 1224)  ,
		S(639, 1219)  ,S(640, 1224)  ,S(644, 1225)  ,S(652, 1215)  ,S(648, 1218)  ,S(652, 1236)  ,S(645, 1226)  ,S(633, 1203)  ,
	},
	{
		S(682, 1292)  ,S(652, 1311)  ,S(666, 1313)  ,S(643, 1306)  ,S(675, 1286)  ,S(679, 1281)  ,S(716, 1265)  ,S(715, 1270)  ,
		S(629, 1292)  ,S(661, 1290)  ,S(678, 1290)  ,S(672, 1288)  ,S(690, 1271)  ,S(697, 1260)  ,S(670, 1269)  ,S(680, 1263)  ,
		S(635, 1279)  ,S(705, 1256)  ,S(683, 1276)  ,S(707, 1249)  ,S(734, 1226)  ,S(703, 1244)  ,S(737, 1224)  ,S(680, 1248)  ,
		S(624, 1271)  ,S(672, 1262)  ,S(680, 1266)  ,S(687, 1254)  ,S(699, 1241)  ,S(687, 1242)  ,S(690, 1237)  ,S(674, 1243)  ,
		S(591, 1244)  ,S(633, 1258)  ,S(619, 1273)  ,S(628, 1260)  ,S(636, 1245)  ,S(631, 1253)  ,S(637, 1253)  ,S(630, 1236)  ,
		S(586, 1217)  ,S(637, 1227)  ,S(636, 1234)  ,S(628, 1229)  ,S(634, 1222)  ,S(631, 1226)  ,S(647, 1225)  ,S(625, 1208)  ,
		S(495, 1243)  ,S(615, 1211)  ,S(631, 1223)  ,S(629, 1220)  ,S(637, 1209)  ,S(637, 1206)  ,S(641, 1201)  ,S(594, 1203)  ,
		S(586, 1226)  ,S(615, 1237)  ,S(644, 1229)  ,S(646, 1219)  ,S(648, 1209)  ,S(645, 1213)  ,S(650, 1209)  ,S(639, 1201)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1312, 2318) ,S(1341, 2315) ,S(1318, 2347) ,S(1324, 2354) ,S(1304, 2372) ,S(1343, 2369) ,S(1364, 2343) ,S(1351, 2320) ,
		S(1332, 2305) ,S(1271, 2360) ,S(1324, 2326) ,S(1267, 2386) ,S(1257, 2415) ,S(1343, 2370) ,S(1285, 2389) ,S(1346, 2336) ,
		S(1334, 2303) ,S(1334, 2304) ,S(1319, 2327) ,S(1326, 2335) ,S(1324, 2353) ,S(1323, 2363) ,S(1315, 2366) ,S(1318, 2379) ,
		S(1344, 2292) ,S(1339, 2332) ,S(1329, 2314) ,S(1304, 2380) ,S(1300, 2391) ,S(1332, 2378) ,S(1343, 2376) ,S(1351, 2340) ,
		S(1347, 2279) ,S(1351, 2319) ,S(1335, 2329) ,S(1322, 2384) ,S(1319, 2376) ,S(1338, 2353) ,S(1348, 2325) ,S(1356, 2311) ,
		S(1356, 2255) ,S(1363, 2280) ,S(1351, 2316) ,S(1345, 2308) ,S(1346, 2296) ,S(1347, 2313) ,S(1365, 2273) ,S(1359, 2253) ,
		S(1360, 2242) ,S(1363, 2247) ,S(1370, 2230) ,S(1364, 2268) ,S(1366, 2253) ,S(1384, 2192) ,S(1371, 2199) ,S(1336, 2245) ,
		S(1362, 2230) ,S(1363, 2232) ,S(1369, 2234) ,S(1376, 2260) ,S(1377, 2222) ,S(1352, 2214) ,S(1349, 2189) ,S(1344, 2207) ,
	},
	{
		S(1339, 2272) ,S(1346, 2304) ,S(1346, 2315) ,S(1324, 2354) ,S(1330, 2341) ,S(1352, 2308) ,S(1341, 2298) ,S(1344, 2282) ,
		S(1310, 2311) ,S(1253, 2371) ,S(1316, 2354) ,S(1249, 2406) ,S(1245, 2423) ,S(1331, 2307) ,S(1283, 2351) ,S(1350, 2286) ,
		S(1314, 2333) ,S(1299, 2339) ,S(1289, 2362) ,S(1323, 2345) ,S(1331, 2328) ,S(1330, 2320) ,S(1353, 2282) ,S(1358, 2292) ,
		S(1323, 2310) ,S(1328, 2356) ,S(1316, 2345) ,S(1309, 2373) ,S(1315, 2363) ,S(1336, 2301) ,S(1352, 2316) ,S(1362, 2287) ,
		S(1338, 2276) ,S(1335, 2325) ,S(1328, 2333) ,S(1323, 2365) ,S(1333, 2348) ,S(1341, 2314) ,S(1361, 2286) ,S(1351, 2270) ,
		S(1320, 2272) ,S(1348, 2264) ,S(1346, 2300) ,S(1347, 2281) ,S(1349, 2286) ,S(1354, 2289) ,S(1365, 2266) ,S(1358, 2235) ,
		S(1306, 2236) ,S(1342, 2208) ,S(1374, 2185) ,S(1369, 2235) ,S(1364, 2250) ,S(1373, 2204) ,S(1373, 2216) ,S(1367, 2206) ,
		S(1314, 2210) ,S(1340, 2183) ,S(1350, 2179) ,S(1366, 2198) ,S(1372, 2216) ,S(1375, 2192) ,S(1373, 2205) ,S(1366, 2191) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(118, -69)   ,S(86, -58)    ,S(89, -62)    ,S(-24, -212)  ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(167, -7)    ,S(182, 6)     ,S(100, 37)    ,S(-2, -50)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(162, 40)    ,S(227, 43)    ,S(170, 49)    ,S(45, -11)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(95, 76)     ,S(123, 65)    ,S(96, 44)     ,S(-45, -8)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(38, 89)     ,S(48, 67)     ,S(42, 38)     ,S(-43, -39)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-10, 73)    ,S(-4, 51)     ,S(-19, 23)    ,S(-16, -42)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-89, 51)    ,S(-74, 46)    ,S(-22, 6)     ,S(41, -83)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-76, -31)   ,S(-97, 5)     ,S(-10, -42)   ,S(39, -165)   ,
	},
	{
		S(13, -230)   ,S(78, -104)   ,S(114, -88)   ,S(137, -66)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-8, -73)    ,S(121, 12)    ,S(165, -1)    ,S(219, -36)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(26, -7)     ,S(172, 36)    ,S(195, 36)    ,S(167, 28)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-31, 2)     ,S(107, 30)    ,S(120, 56)    ,S(93, 63)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-54, -29)   ,S(36, 26)     ,S(77, 50)     ,S(30, 77)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-77, -17)   ,S(-23, 12)    ,S(3, 33)      ,S(-17, 58)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-10, -38)   ,S(-26, -7)    ,S(-36, 18)    ,S(-92, 34)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-16, -120)  ,S(-7, -62)    ,S(-46, -21)   ,S(-95, -32)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(105, 206), S(461, 659), S(467, 700), S(635, 1209), S(1338, 2260), };
constexpr PScore knightMob[9] = {S(-44, -147), S(-25, -69), S(-13, -23), S(-7, 2), S(-1, 13), S(4, 28), S(11, 28), S(21, 23), S(31, 0), };
constexpr PScore bishopMob[14] = {S(-61, -197), S(-34, -122), S(-18, -71), S(-10, -41), S(0, -20), S(4, 3), S(6, 19), S(6, 30), S(6, 44), S(12, 50), S(19, 48), S(43, 38), S(53, 47), S(71, 10), };
constexpr PScore rookMob[15] = {S(-26, -137), S(-34, -91), S(-25, -57), S(-23, -41), S(-23, -22), S(-23, -4), S(-20, 6), S(-15, 8), S(-12, 13), S(-3, 18), S(-4, 25), S(1, 29), S(4, 32), S(20, 14), S(84, -21), };
constexpr PScore queenMob[28] = {S(-146, -378), S(-106, -390), S(-69, -300), S(-50, -213), S(-48, -120), S(-45, -63), S(-41, -29), S(-37, -10), S(-35, 11), S(-30, 23), S(-26, 31), S(-21, 35), S(-17, 38), S(-14, 40), S(-11, 41), S(-10, 40), S(-10, 38), S(-13, 37), S(-10, 31), S(-7, 20), S(7, -6), S(13, -28), S(9, -41), S(23, -69), S(-5, -72), S(3, -104), S(-22, -82), S(-37, -48), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 909.1275634765625;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.596628427505493;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 373.98785400390625;
constexpr double KSBEG = 1;
constexpr double KSCEG = 0.5333287715911865;

constexpr PScore DAMPEN = S(static_cast<S16>(0.09197794646024704 * RESOLUTION), static_cast<S16>(0.844261884689331 * RESOLUTION));

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);