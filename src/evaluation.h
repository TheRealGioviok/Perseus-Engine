#pragma once

#include "BBmacros.h"
#include "Position.h"

/**
 * @brief The simpleEval function evaluates a given board, taking into account the material value of the board.
 * @param board The board to evaluate.
 * @return The value of the board.
 * @note This evaluation function is not very good, but it is a good starting point.
 */

const PScore materialValues[5] = {
    S(109,181), S(435,509), S(453,543), S(571,940), S(1261,1596)
};

const PScore pawnTable[64] = {
    S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    ,
    S(45,75)  , S(6,79)   , S(41,44)  , S(71,-10) , S(67,-11) , S(41,18)  , S(-63,81) , S(-59,87) ,
    S(-9,57)  , S(26,50)  , S(49,7)   , S(48,-32) , S(61,-37) , S(83,-10) , S(52,32)  , S(-6,49)  ,
    S(-12,20) , S(-17,11) , S(1,-10)  , S(13,-31) , S(24,-33) , S(16,-20) , S(-16,7)  , S(-12,11) ,
    S(-25,-3) , S(-32,-6) , S(-15,-20), S(2,-30)  , S(1,-32)  , S(-1,-22) , S(-25,-12), S(-22,-10),
    S(-23,-9) , S(-17,-14), S(-15,-12), S(-7,-16) , S(4,-15)  , S(-13,-10), S(-6,-18) , S(-17,-18),
    S(-24,-2) , S(-19,-3) , S(-19,6)  , S(-20,6)  , S(-17,4)  , S(-7,7)   , S(-1,-8)  , S(-27,-12),
    S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    
};

const PScore knightTable[64] = {
    S(-151,-57), S(-103,-1) , S(-72,29)  , S(10,8)    , S(36,6)    , S(-66,22)  , S(-111,11) , S(-100,-91),
    S(7,-21)   , S(0,9)     , S(56,4)    , S(127,6)   , S(89,18)   , S(116,-6)  , S(-3,1)    , S(24,-26)  ,
    S(24,-8)   , S(60,1)    , S(65,35)   , S(78,36)   , S(115,24)  , S(92,28)   , S(82,-5)   , S(31,-6)   ,
    S(28,5)    , S(41,20)   , S(53,41)   , S(63,51)   , S(58,53)   , S(73,34)   , S(55,24)   , S(35,7)    ,
    S(11,17)   , S(25,14)   , S(14,37)   , S(17,45)   , S(28,46)   , S(19,36)   , S(41,14)   , S(14,12)   ,
    S(-35,-15) , S(-20,-6)  , S(-18,17)  , S(-14,33)  , S(-13,35)  , S(-18,18)  , S(-16,-4)  , S(-26,-20) ,
    S(-43,0)   , S(-59,1)   , S(-39,-11) , S(-27,6)   , S(-26,7)   , S(-41,-10) , S(-50,-7)  , S(-43,0)   ,
    S(-63,-28) , S(-39,-17) , S(-35,-21) , S(-42,-10) , S(-39,-3)  , S(-42,-16) , S(-41,-15) , S(-70,-41) 
};

const PScore bishopTable[64] = {
    S(-36,28) , S(-62,19) , S(-79,19) , S(-98,25) , S(-80,27) , S(-102,18), S(-38,12) , S(-38,15) ,
    S(-36,9)  , S(-2,16)  , S(5,13)   , S(-9,8)   , S(23,0)   , S(16,10)  , S(2,15)   , S(-25,6)  ,
    S(16,18)  , S(34,13)  , S(28,11)  , S(36,2)   , S(42,5)   , S(47,11)  , S(48,9)   , S(35,13)  ,
    S(7,11)   , S(26,11)  , S(30,6)   , S(49,19)  , S(52,18)  , S(35,9)   , S(30,11)  , S(6,15)   ,
    S(6,-2)   , S(-1,5)   , S(6,20)   , S(25,16)  , S(29,18)  , S(3,16)   , S(2,4)    , S(2,-3)   ,
    S(8,-5)   , S(18,3)   , S(6,10)   , S(8,11)   , S(5,12)   , S(5,8)    , S(12,-1)  , S(12,-4)  ,
    S(18,-8)  , S(9,-21)  , S(2,-10)  , S(-18,3)  , S(-16,5)  , S(-6,-6)  , S(13,-17) , S(9,-17)  ,
    S(23,-13) , S(6,-2)   , S(-9,5)   , S(-23,-8) , S(-29,-3) , S(-19,7)  , S(-1,-1)  , S(13,-16) 
};

const PScore rookTable[64] = {
    S(46,38)  , S(24,47)  , S(13,55)  , S(20,49)  , S(29,50)  , S(31,51)  , S(46,47)  , S(66,35)  ,
    S(7,40)   , S(2,48)   , S(24,45)  , S(44,37)  , S(41,39)  , S(56,34)  , S(24,41)  , S(28,36)  ,
    S(-6,37)  , S(49,18)  , S(26,31)  , S(51,19)  , S(71,13)  , S(64,18)  , S(90,8)   , S(34,25)  ,
    S(-11,29) , S(18,23)  , S(20,26)  , S(36,17)  , S(33,18)  , S(35,17)  , S(43,18)  , S(22,21)  ,
    S(-44,9)  , S(-22,20) , S(-26,20) , S(-25,18) , S(-29,17) , S(-23,22) , S(-3,17)  , S(-22,5)  ,
    S(-55,-10), S(-15,-2) , S(-30,1)  , S(-31,0)  , S(-26,-3) , S(-23,-1) , S(17,-14) , S(-22,-27),
    S(-81,-11), S(-38,-12), S(-26,-7) , S(-23,-10), S(-21,-14), S(-10,-18), S(-1,-29) , S(-62,-24),
    S(-36,-9) , S(-24,-9) , S(-19,-6) , S(-12,-13), S(-12,-16), S(-9,-6)  , S(-7,-14) , S(-18,-22)
};

const PScore queenTable[64] = {
    S(63,-24) , S(32,21)  , S(43,41)  , S(67,53)  , S(59,65)  , S(56,54)  , S(45,27)  , S(46,13)  ,
    S(23,-20) , S(-34,32) , S(5,50)   , S(-17,91) , S(1,106)  , S(40,61)  , S(-34,57) , S(18,12)  ,
    S(35,10)  , S(38,-1)  , S(21,53)  , S(28,69)  , S(40,64)  , S(57,87)  , S(86,14)  , S(81,36)  ,
    S(17,24)  , S(30,41)  , S(28,38)  , S(15,68)  , S(15,86)  , S(31,73)  , S(43,74)  , S(44,56)  ,
    S(-14,58) , S(-8,87)  , S(-23,102), S(-24,129), S(-17,121), S(-19,119), S(2,89)   , S(8,79)   ,
    S(-11,24) , S(-2,35)  , S(-10,63) , S(-16,60) , S(-12,57) , S(-9,72)  , S(12,41)  , S(6,24)   ,
    S(-17,8)  , S(-1,-9)  , S(7,-13)  , S(4,9)    , S(1,14)   , S(11,-18) , S(5,-16)  , S(-18,0)  ,
    S(-13,-8) , S(1,-15)  , S(3,-17)  , S(6,1)    , S(4,-10)  , S(4,-29)  , S(9,-24)  , S(-6,-29) 
};

const PScore kingTable[64] = {
    S(-9,-146), S(15,-62) , S(15,-45) , S(-5,-16) , S(12,-28) , S(33,-26) , S(76,-30) , S(13,-155),
    S(-47,-29), S(33,34)  , S(6,31)   , S(67,5)   , S(38,19)  , S(77,31)  , S(62,45)  , S(48,-34) ,
    S(-27,9)  , S(89,45)  , S(66,48)  , S(20,51)  , S(40,49)  , S(118,45) , S(107,48) , S(28,5)   ,
    S(-43,7)  , S(31,35)  , S(15,58)  , S(-37,67) , S(-14,62) , S(33,56)  , S(39,42)  , S(-45,7)  ,
    S(-57,-19), S(-1,17)  , S(-28,47) , S(-86,67) , S(-83,66) , S(-34,47) , S(-22,24) , S(-79,-11),
    S(-37,-17), S(-30,4)  , S(-59,30) , S(-111,52), S(-105,49), S(-81,33) , S(-47,7)  , S(-46,-15),
    S(63,-41) , S(2,-12)  , S(-39,8)  , S(-112,25), S(-101,21), S(-74,16) , S(11,-17) , S(59,-49) ,
    S(65,-113), S(57,-65) , S(10,-35) , S(-59,-39), S(-14,-55), S(-51,-26), S(61,-67) , S(86,-127)
};

const PScore knightMob[9] = {
    S(-25,-85), S(-10,-20), S(4,16), S(13,37), S(22,47), S(29,59), S(38,59), S(50,53), S(61,35)
};

const PScore bishopMob[14] = {
    S(-82,-142), S(-37,-75), S(-13,-22), S(-3,5), S(7,23), S(14,40), S(20,52), S(23,58), S(28,66), S(35,69), S(50,65), S(75,56), S(90,57), S(110,28)
};

const PScore rookMob[15] = {
    S(-20,-108), S(-27,-62), S(-16,-14), S(-14,-3), S(-13,15), S(-16,33), S(-12,42), S(-6,43), S(-3,50), S(6,55), S(10,60), S(19,64), S(23,69), S(44,53), S(83,41)
};

const PScore queenMob[28] = {
    S(-124,-344), S(-87,-303), S(-46,-233), S(-28,-133), S(-26,-31), S(-22,29), S(-14,63), S(-10,83), S(-5,104), S(1,112), S(7,118), S(12,125), S(17,128), S(20,136), S(22,141), S(24,145), S(26,148), S(23,156), S(25,157), S(34,155), S(43,150), S(52,145), S(67,134), S(89,123), S(115,90), S(131,83), S(105,30), S(91,24)
};

extern const PScore* pestoTables[6];

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };
extern PScore PSQTs[12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);