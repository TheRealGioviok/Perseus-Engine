#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,
		S(190, 405)   ,S(169, 421)   ,S(129, 398)   ,S(187, 298)   ,S(232, 192)   ,S(225, 136)   ,S(67, 180)    ,S(43, 200)    ,
		S(95, 383)    ,S(124, 372)   ,S(123, 329)   ,S(139, 246)   ,S(187, 171)   ,S(212, 166)   ,S(158, 188)   ,S(104, 223)   ,
		S(111, 286)   ,S(112, 268)   ,S(115, 240)   ,S(119, 212)   ,S(142, 188)   ,S(139, 185)   ,S(85, 212)    ,S(74, 222)    ,
		S(115, 240)   ,S(112, 238)   ,S(116, 218)   ,S(113, 208)   ,S(115, 194)   ,S(102, 201)   ,S(70, 208)    ,S(55, 220)    ,
		S(126, 218)   ,S(143, 213)   ,S(118, 223)   ,S(112, 217)   ,S(103, 210)   ,S(89, 210)    ,S(58, 214)    ,S(55, 221)    ,
		S(125, 212)   ,S(157, 209)   ,S(138, 219)   ,S(95, 230)    ,S(84, 222)    ,S(73, 222)    ,S(53, 223)    ,S(53, 229)    ,
		S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,
	},
	{
		S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,
		S(26, 255)    ,S(38, 228)    ,S(224, 171)   ,S(210, 189)   ,S(193, 227)   ,S(157, 284)   ,S(119, 337)   ,S(161, 326)   ,
		S(126, 235)   ,S(167, 222)   ,S(230, 190)   ,S(161, 180)   ,S(143, 190)   ,S(125, 247)   ,S(102, 292)   ,S(85, 311)    ,
		S(102, 224)   ,S(107, 219)   ,S(144, 193)   ,S(138, 191)   ,S(126, 176)   ,S(108, 209)   ,S(100, 231)   ,S(90, 254)    ,
		S(95, 208)    ,S(102, 211)   ,S(119, 205)   ,S(117, 197)   ,S(115, 189)   ,S(106, 199)   ,S(88, 220)    ,S(83, 231)    ,
		S(107, 197)   ,S(123, 202)   ,S(109, 227)   ,S(122, 217)   ,S(110, 199)   ,S(102, 206)   ,S(95, 209)    ,S(87, 220)    ,
		S(108, 179)   ,S(138, 205)   ,S(130, 235)   ,S(97, 236)    ,S(99, 213)    ,S(92, 211)    ,S(90, 212)    ,S(84, 227)    ,
		S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,S(106, 207)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(291, 626)   ,S(323, 700)   ,S(348, 737)   ,S(475, 695)   ,S(474, 687)   ,S(363, 716)   ,S(437, 678)   ,S(313, 574)   ,
		S(457, 670)   ,S(481, 698)   ,S(521, 690)   ,S(554, 719)   ,S(549, 704)   ,S(551, 675)   ,S(490, 682)   ,S(510, 655)   ,
		S(427, 701)   ,S(494, 703)   ,S(518, 740)   ,S(529, 734)   ,S(548, 721)   ,S(543, 718)   ,S(510, 687)   ,S(510, 673)   ,
		S(472, 715)   ,S(504, 718)   ,S(531, 743)   ,S(543, 751)   ,S(541, 757)   ,S(533, 737)   ,S(516, 722)   ,S(518, 709)   ,
		S(471, 726)   ,S(495, 728)   ,S(498, 752)   ,S(505, 757)   ,S(520, 754)   ,S(513, 740)   ,S(523, 723)   ,S(498, 724)   ,
		S(429, 691)   ,S(447, 713)   ,S(463, 726)   ,S(464, 751)   ,S(477, 750)   ,S(457, 731)   ,S(461, 707)   ,S(439, 694)   ,
		S(411, 707)   ,S(409, 717)   ,S(430, 702)   ,S(438, 724)   ,S(448, 723)   ,S(441, 708)   ,S(414, 723)   ,S(418, 711)   ,
		S(387, 660)   ,S(393, 709)   ,S(414, 704)   ,S(423, 723)   ,S(422, 716)   ,S(418, 698)   ,S(419, 696)   ,S(388, 694)   ,
	},
	{
		S(321, 601)   ,S(426, 723)   ,S(362, 777)   ,S(474, 746)   ,S(427, 759)   ,S(310, 789)   ,S(321, 745)   ,S(237, 673)   ,
		S(511, 707)   ,S(467, 731)   ,S(566, 716)   ,S(537, 764)   ,S(519, 768)   ,S(486, 739)   ,S(444, 743)   ,S(440, 720)   ,
		S(490, 724)   ,S(483, 748)   ,S(554, 763)   ,S(528, 769)   ,S(506, 778)   ,S(492, 782)   ,S(459, 749)   ,S(428, 730)   ,
		S(496, 757)   ,S(506, 774)   ,S(530, 778)   ,S(515, 812)   ,S(513, 801)   ,S(502, 783)   ,S(485, 757)   ,S(465, 748)   ,
		S(478, 776)   ,S(513, 765)   ,S(498, 787)   ,S(501, 806)   ,S(488, 801)   ,S(481, 790)   ,S(471, 767)   ,S(462, 755)   ,
		S(440, 733)   ,S(455, 748)   ,S(455, 760)   ,S(464, 788)   ,S(465, 787)   ,S(455, 767)   ,S(450, 738)   ,S(440, 705)   ,
		S(425, 755)   ,S(421, 751)   ,S(431, 736)   ,S(438, 760)   ,S(441, 760)   ,S(432, 737)   ,S(427, 743)   ,S(415, 736)   ,
		S(385, 715)   ,S(419, 722)   ,S(422, 744)   ,S(421, 750)   ,S(428, 749)   ,S(427, 718)   ,S(431, 704)   ,S(401, 689)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(426, 811)   ,S(383, 802)   ,S(394, 792)   ,S(352, 802)   ,S(339, 790)   ,S(347, 779)   ,S(495, 766)   ,S(433, 784)   ,
		S(434, 791)   ,S(441, 801)   ,S(473, 787)   ,S(425, 784)   ,S(440, 773)   ,S(501, 749)   ,S(468, 764)   ,S(424, 759)   ,
		S(483, 787)   ,S(502, 785)   ,S(489, 785)   ,S(486, 775)   ,S(508, 757)   ,S(517, 761)   ,S(497, 753)   ,S(492, 771)   ,
		S(479, 784)   ,S(495, 778)   ,S(488, 783)   ,S(494, 785)   ,S(520, 767)   ,S(494, 751)   ,S(506, 766)   ,S(480, 769)   ,
		S(473, 770)   ,S(490, 767)   ,S(489, 777)   ,S(508, 773)   ,S(496, 771)   ,S(490, 766)   ,S(492, 755)   ,S(477, 768)   ,
		S(477, 758)   ,S(508, 760)   ,S(503, 767)   ,S(488, 765)   ,S(489, 770)   ,S(475, 766)   ,S(480, 761)   ,S(466, 766)   ,
		S(492, 746)   ,S(518, 744)   ,S(492, 753)   ,S(474, 763)   ,S(463, 768)   ,S(470, 757)   ,S(468, 749)   ,S(475, 758)   ,
		S(489, 748)   ,S(450, 760)   ,S(461, 770)   ,S(453, 766)   ,S(451, 766)   ,S(451, 778)   ,S(465, 773)   ,S(481, 754)   ,
	},
	{
		S(415, 805)   ,S(446, 793)   ,S(324, 813)   ,S(351, 821)   ,S(335, 837)   ,S(345, 825)   ,S(405, 825)   ,S(419, 836)   ,
		S(439, 791)   ,S(427, 801)   ,S(460, 793)   ,S(432, 802)   ,S(424, 812)   ,S(457, 810)   ,S(445, 822)   ,S(416, 825)   ,
		S(464, 810)   ,S(473, 804)   ,S(480, 812)   ,S(487, 794)   ,S(466, 798)   ,S(482, 808)   ,S(467, 818)   ,S(472, 813)   ,
		S(455, 807)   ,S(479, 808)   ,S(482, 797)   ,S(483, 814)   ,S(489, 810)   ,S(462, 800)   ,S(479, 807)   ,S(452, 820)   ,
		S(464, 792)   ,S(476, 795)   ,S(470, 807)   ,S(486, 809)   ,S(474, 808)   ,S(473, 809)   ,S(472, 792)   ,S(460, 798)   ,
		S(471, 794)   ,S(475, 789)   ,S(470, 798)   ,S(468, 806)   ,S(473, 801)   ,S(472, 799)   ,S(490, 791)   ,S(469, 789)   ,
		S(469, 757)   ,S(483, 774)   ,S(466, 785)   ,S(455, 800)   ,S(458, 794)   ,S(475, 777)   ,S(481, 764)   ,S(486, 779)   ,
		S(469, 763)   ,S(443, 785)   ,S(447, 803)   ,S(441, 795)   ,S(451, 789)   ,S(456, 796)   ,S(478, 788)   ,S(493, 770)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(679, 1298)  ,S(650, 1320)  ,S(632, 1325)  ,S(602, 1331)  ,S(619, 1319)  ,S(668, 1304)  ,S(646, 1311)  ,S(629, 1324)  ,
		S(644, 1298)  ,S(641, 1308)  ,S(649, 1303)  ,S(635, 1312)  ,S(633, 1302)  ,S(653, 1288)  ,S(615, 1297)  ,S(618, 1292)  ,
		S(634, 1291)  ,S(684, 1272)  ,S(658, 1291)  ,S(667, 1273)  ,S(675, 1263)  ,S(655, 1276)  ,S(697, 1254)  ,S(624, 1283)  ,
		S(620, 1288)  ,S(636, 1288)  ,S(657, 1278)  ,S(658, 1278)  ,S(654, 1267)  ,S(644, 1267)  ,S(653, 1263)  ,S(629, 1268)  ,
		S(586, 1275)  ,S(615, 1283)  ,S(589, 1296)  ,S(591, 1288)  ,S(593, 1273)  ,S(597, 1272)  ,S(601, 1275)  ,S(583, 1267)  ,
		S(565, 1249)  ,S(605, 1259)  ,S(582, 1264)  ,S(586, 1261)  ,S(588, 1252)  ,S(590, 1249)  ,S(605, 1252)  ,S(582, 1240)  ,
		S(525, 1255)  ,S(576, 1247)  ,S(591, 1250)  ,S(585, 1252)  ,S(589, 1244)  ,S(597, 1236)  ,S(607, 1228)  ,S(558, 1246)  ,
		S(560, 1258)  ,S(576, 1266)  ,S(603, 1262)  ,S(601, 1251)  ,S(601, 1241)  ,S(612, 1242)  ,S(616, 1240)  ,S(592, 1245)  ,
	},
	{
		S(656, 1366)  ,S(650, 1373)  ,S(654, 1375)  ,S(585, 1381)  ,S(601, 1376)  ,S(583, 1391)  ,S(617, 1379)  ,S(622, 1373)  ,
		S(634, 1344)  ,S(635, 1355)  ,S(672, 1338)  ,S(619, 1366)  ,S(636, 1364)  ,S(618, 1367)  ,S(595, 1375)  ,S(605, 1366)  ,
		S(640, 1328)  ,S(719, 1299)  ,S(700, 1318)  ,S(680, 1310)  ,S(669, 1319)  ,S(632, 1345)  ,S(655, 1331)  ,S(597, 1354)  ,
		S(631, 1322)  ,S(664, 1315)  ,S(666, 1315)  ,S(656, 1319)  ,S(667, 1319)  ,S(636, 1334)  ,S(625, 1335)  ,S(601, 1341)  ,
		S(592, 1305)  ,S(629, 1322)  ,S(603, 1328)  ,S(598, 1323)  ,S(603, 1326)  ,S(585, 1339)  ,S(580, 1345)  ,S(579, 1325)  ,
		S(590, 1271)  ,S(629, 1293)  ,S(603, 1300)  ,S(596, 1299)  ,S(598, 1301)  ,S(578, 1313)  ,S(586, 1317)  ,S(573, 1303)  ,
		S(521, 1290)  ,S(618, 1274)  ,S(612, 1282)  ,S(597, 1288)  ,S(598, 1289)  ,S(586, 1300)  ,S(585, 1295)  ,S(552, 1301)  ,
		S(584, 1270)  ,S(603, 1295)  ,S(612, 1304)  ,S(609, 1288)  ,S(609, 1290)  ,S(598, 1302)  ,S(591, 1302)  ,S(594, 1296)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1173, 2253) ,S(1198, 2266) ,S(1194, 2273) ,S(1197, 2291) ,S(1196, 2300) ,S(1287, 2222) ,S(1227, 2233) ,S(1239, 2200) ,
		S(1187, 2256) ,S(1129, 2313) ,S(1176, 2288) ,S(1117, 2351) ,S(1121, 2375) ,S(1279, 2233) ,S(1188, 2248) ,S(1218, 2211) ,
		S(1187, 2269) ,S(1199, 2236) ,S(1186, 2262) ,S(1189, 2272) ,S(1221, 2278) ,S(1257, 2257) ,S(1286, 2180) ,S(1254, 2227) ,
		S(1205, 2235) ,S(1177, 2302) ,S(1175, 2277) ,S(1172, 2317) ,S(1194, 2292) ,S(1225, 2260) ,S(1247, 2258) ,S(1237, 2232) ,
		S(1198, 2230) ,S(1204, 2282) ,S(1186, 2300) ,S(1196, 2323) ,S(1192, 2298) ,S(1211, 2283) ,S(1229, 2237) ,S(1227, 2225) ,
		S(1186, 2233) ,S(1214, 2234) ,S(1211, 2258) ,S(1207, 2253) ,S(1207, 2245) ,S(1214, 2251) ,S(1232, 2210) ,S(1229, 2208) ,
		S(1165, 2202) ,S(1206, 2185) ,S(1245, 2130) ,S(1231, 2207) ,S(1218, 2210) ,S(1232, 2185) ,S(1238, 2176) ,S(1236, 2181) ,
		S(1188, 2164) ,S(1210, 2139) ,S(1209, 2154) ,S(1217, 2195) ,S(1227, 2189) ,S(1220, 2166) ,S(1211, 2207) ,S(1220, 2158) ,
	},
	{
		S(1249, 2317) ,S(1254, 2357) ,S(1246, 2371) ,S(1191, 2373) ,S(1181, 2380) ,S(1165, 2381) ,S(1170, 2360) ,S(1127, 2377) ,
		S(1246, 2338) ,S(1151, 2436) ,S(1264, 2353) ,S(1113, 2442) ,S(1092, 2436) ,S(1140, 2383) ,S(1088, 2418) ,S(1148, 2362) ,
		S(1202, 2395) ,S(1240, 2351) ,S(1239, 2356) ,S(1186, 2376) ,S(1154, 2380) ,S(1142, 2377) ,S(1148, 2365) ,S(1149, 2362) ,
		S(1221, 2362) ,S(1221, 2387) ,S(1200, 2398) ,S(1157, 2412) ,S(1144, 2413) ,S(1151, 2364) ,S(1158, 2386) ,S(1162, 2347) ,
		S(1218, 2343) ,S(1221, 2337) ,S(1202, 2372) ,S(1176, 2396) ,S(1170, 2418) ,S(1177, 2365) ,S(1186, 2363) ,S(1182, 2321) ,
		S(1222, 2278) ,S(1225, 2293) ,S(1202, 2342) ,S(1194, 2329) ,S(1188, 2345) ,S(1190, 2356) ,S(1203, 2322) ,S(1189, 2299) ,
		S(1193, 2280) ,S(1222, 2228) ,S(1231, 2224) ,S(1210, 2291) ,S(1207, 2309) ,S(1210, 2264) ,S(1202, 2286) ,S(1196, 2284) ,
		S(1197, 2226) ,S(1193, 2230) ,S(1198, 2244) ,S(1220, 2255) ,S(1218, 2302) ,S(1211, 2272) ,S(1204, 2268) ,S(1198, 2275) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-9, -184)   ,S(83, -86)    ,S(71, -57)    ,S(83, -39)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-12, -26)   ,S(71, 40)     ,S(131, 23)    ,S(124, 3)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(40, 4)      ,S(124, 47)    ,S(142, 47)    ,S(116, 33)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-16, 8)     ,S(83, 34)     ,S(84, 52)     ,S(47, 56)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-16, -36)   ,S(57, 10)     ,S(55, 41)     ,S(-4, 60)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-51, -26)   ,S(-13, 3)     ,S(1, 25)      ,S(-31, 50)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(4, -50)     ,S(-23, -13)   ,S(-52, 19)    ,S(-93, 33)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(14, -136)   ,S(7, -68)     ,S(-46, -24)   ,S(-63, -37)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(15, -204)   ,S(-7, 10)     ,S(50, -25)    ,S(79, -41)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-33, -44)   ,S(42, 66)     ,S(117, 7)     ,S(146, -6)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(26, 4)      ,S(180, 39)    ,S(233, 14)    ,S(137, 18)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-36, 9)     ,S(111, 25)    ,S(122, 45)    ,S(60, 54)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-48, -23)   ,S(62, 15)     ,S(53, 51)     ,S(24, 68)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-41, -13)   ,S(-4, 15)     ,S(7, 43)      ,S(-9, 59)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(9, -34)     ,S(-8, 5)      ,S(-53, 38)    ,S(-75, 39)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(18, -120)   ,S(2, -42)     ,S(-52, -4)    ,S(-52, -36)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};


constexpr PScore materialValues[5] = {S(106, 207), S(433, 691), S(439, 735), S(594, 1260), S(1191, 2255), };
constexpr PScore knightMob[9] = {S(-39, -155), S(-19, -81), S(-7, -33), S(0, -7), S(6, 5), S(10, 19), S(19, 19), S(29, 13), S(39, -11), };
constexpr PScore bishopMob[14] = {S(-58, -203), S(-29, -131), S(-11, -80), S(-2, -51), S(9, -29), S(13, -8), S(17, 6), S(18, 18), S(20, 29), S(27, 34), S(36, 27), S(61, 15), S(71, 23), S(99, -24), };
constexpr PScore rookMob[15] = {S(-29, -129), S(-36, -87), S(-27, -57), S(-24, -38), S(-23, -20), S(-25, -3), S(-21, 8), S(-16, 9), S(-12, 14), S(-4, 19), S(-3, 26), S(2, 31), S(5, 34), S(23, 13), S(90, -26), };
constexpr PScore queenMob[28] = {S(-152, -360), S(-111, -370), S(-70, -288), S(-49, -203), S(-46, -107), S(-43, -51), S(-38, -16), S(-35, 3), S(-31, 25), S(-26, 37), S(-21, 45), S(-16, 50), S(-11, 52), S(-7, 53), S(-4, 54), S(-2, 52), S(-1, 48), S(-1, 47), S(5, 38), S(11, 24), S(31, -9), S(43, -38), S(51, -65), S(69, -97), S(56, -116), S(73, -161), S(66, -156), S(65, -137), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 658.162353515625;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -0.8206978440284729;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 734.9951782226562;
constexpr double KSBEG = 1;
constexpr double KSCEG = -3.050929546356201;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);