#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,
		S(200, 261)   ,S(157, 261)   ,S(199, 207)   ,S(203, 166)   ,S(179, 177)   ,S(120, 226)   ,S(-89, 318)   ,S(-50, 325)   ,
		S(99, 299)    ,S(127, 278)   ,S(148, 234)   ,S(142, 192)   ,S(151, 203)   ,S(202, 240)   ,S(146, 278)   ,S(110, 285)   ,
		S(96, 250)    ,S(100, 233)   ,S(107, 214)   ,S(117, 190)   ,S(126, 205)   ,S(135, 217)   ,S(97, 243)    ,S(94, 238)    ,
		S(90, 225)    ,S(86, 216)    ,S(102, 198)   ,S(110, 192)   ,S(112, 202)   ,S(116, 208)   ,S(96, 213)    ,S(98, 209)    ,
		S(91, 214)    ,S(91, 207)    ,S(99, 206)    ,S(105, 204)   ,S(118, 218)   ,S(109, 221)   ,S(121, 199)   ,S(110, 194)   ,
		S(88, 223)    ,S(88, 213)    ,S(87, 214)    ,S(94, 217)    ,S(96, 236)    ,S(133, 229)   ,S(143, 202)   ,S(111, 182)   ,
		S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,
	},
	{
		S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,
		S(131, 323)   ,S(99, 334)    ,S(175, 296)   ,S(187, 221)   ,S(182, 207)   ,S(203, 182)   ,S(90, 258)    ,S(81, 262)    ,
		S(117, 321)   ,S(170, 314)   ,S(166, 284)   ,S(152, 236)   ,S(162, 208)   ,S(159, 235)   ,S(152, 255)   ,S(93, 277)    ,
		S(126, 249)   ,S(120, 248)   ,S(125, 231)   ,S(129, 215)   ,S(128, 210)   ,S(115, 220)   ,S(82, 244)    ,S(86, 246)    ,
		S(125, 214)   ,S(110, 221)   ,S(122, 208)   ,S(121, 209)   ,S(110, 203)   ,S(97, 214)    ,S(75, 224)    ,S(70, 229)    ,
		S(126, 202)   ,S(136, 197)   ,S(123, 216)   ,S(113, 219)   ,S(101, 214)   ,S(93, 215)    ,S(78, 219)    ,S(69, 221)    ,
		S(130, 200)   ,S(154, 197)   ,S(141, 221)   ,S(106, 233)   ,S(85, 227)    ,S(82, 226)    ,S(73, 226)    ,S(70, 228)    ,
		S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,S(105, 207)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(280, 604)   ,S(376, 677)   ,S(359, 722)   ,S(470, 693)   ,S(511, 687)   ,S(383, 725)   ,S(375, 691)   ,S(342, 575)   ,
		S(485, 653)   ,S(491, 675)   ,S(527, 677)   ,S(548, 712)   ,S(557, 713)   ,S(569, 667)   ,S(484, 681)   ,S(504, 654)   ,
		S(479, 664)   ,S(501, 688)   ,S(532, 723)   ,S(535, 726)   ,S(547, 722)   ,S(540, 728)   ,S(478, 710)   ,S(492, 681)   ,
		S(518, 683)   ,S(530, 691)   ,S(542, 722)   ,S(541, 749)   ,S(546, 759)   ,S(546, 734)   ,S(524, 726)   ,S(516, 709)   ,
		S(507, 688)   ,S(521, 697)   ,S(523, 724)   ,S(528, 739)   ,S(534, 746)   ,S(530, 734)   ,S(537, 714)   ,S(509, 717)   ,
		S(482, 643)   ,S(495, 675)   ,S(496, 706)   ,S(505, 730)   ,S(501, 730)   ,S(491, 707)   ,S(487, 694)   ,S(477, 672)   ,
		S(460, 664)   ,S(470, 678)   ,S(475, 673)   ,S(483, 698)   ,S(480, 699)   ,S(469, 676)   ,S(461, 686)   ,S(463, 690)   ,
		S(446, 623)   ,S(473, 640)   ,S(468, 653)   ,S(471, 687)   ,S(467, 688)   ,S(464, 679)   ,S(461, 658)   ,S(424, 649)   ,
	},
	{
		S(305, 566)   ,S(393, 659)   ,S(390, 707)   ,S(488, 682)   ,S(491, 675)   ,S(347, 713)   ,S(358, 684)   ,S(313, 576)   ,
		S(480, 648)   ,S(475, 683)   ,S(526, 681)   ,S(587, 693)   ,S(560, 697)   ,S(551, 671)   ,S(494, 667)   ,S(494, 643)   ,
		S(458, 683)   ,S(503, 698)   ,S(516, 731)   ,S(542, 727)   ,S(553, 717)   ,S(547, 713)   ,S(522, 675)   ,S(486, 662)   ,
		S(504, 695)   ,S(528, 706)   ,S(542, 731)   ,S(557, 741)   ,S(557, 739)   ,S(549, 718)   ,S(530, 704)   ,S(519, 679)   ,
		S(511, 701)   ,S(519, 709)   ,S(531, 725)   ,S(537, 736)   ,S(538, 735)   ,S(529, 722)   ,S(524, 700)   ,S(516, 682)   ,
		S(454, 676)   ,S(479, 690)   ,S(495, 705)   ,S(497, 725)   ,S(500, 724)   ,S(492, 702)   ,S(488, 671)   ,S(467, 644)   ,
		S(451, 696)   ,S(441, 699)   ,S(461, 681)   ,S(474, 694)   ,S(480, 694)   ,S(469, 674)   ,S(454, 682)   ,S(453, 656)   ,
		S(413, 667)   ,S(444, 666)   ,S(454, 677)   ,S(450, 685)   ,S(466, 674)   ,S(468, 646)   ,S(462, 644)   ,S(436, 611)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(461, 769)   ,S(438, 765)   ,S(382, 763)   ,S(371, 772)   ,S(392, 755)   ,S(369, 755)   ,S(463, 744)   ,S(454, 754)   ,
		S(452, 756)   ,S(484, 753)   ,S(498, 740)   ,S(460, 750)   ,S(466, 744)   ,S(489, 739)   ,S(449, 756)   ,S(465, 745)   ,
		S(514, 744)   ,S(510, 746)   ,S(524, 741)   ,S(504, 738)   ,S(514, 738)   ,S(497, 766)   ,S(489, 755)   ,S(492, 763)   ,
		S(497, 747)   ,S(521, 739)   ,S(509, 734)   ,S(524, 750)   ,S(520, 759)   ,S(512, 747)   ,S(513, 755)   ,S(483, 757)   ,
		S(502, 730)   ,S(514, 727)   ,S(511, 744)   ,S(515, 745)   ,S(523, 747)   ,S(508, 748)   ,S(511, 739)   ,S(501, 733)   ,
		S(509, 724)   ,S(526, 727)   ,S(511, 737)   ,S(511, 741)   ,S(510, 743)   ,S(508, 738)   ,S(513, 731)   ,S(508, 737)   ,
		S(522, 716)   ,S(519, 699)   ,S(515, 717)   ,S(498, 733)   ,S(497, 734)   ,S(512, 719)   ,S(525, 712)   ,S(510, 699)   ,
		S(528, 712)   ,S(512, 731)   ,S(495, 737)   ,S(488, 729)   ,S(486, 735)   ,S(490, 741)   ,S(490, 726)   ,S(513, 707)   ,
	},
	{
		S(428, 761)   ,S(396, 755)   ,S(405, 750)   ,S(385, 756)   ,S(371, 762)   ,S(355, 762)   ,S(467, 751)   ,S(437, 772)   ,
		S(423, 751)   ,S(456, 760)   ,S(481, 744)   ,S(453, 741)   ,S(459, 744)   ,S(501, 738)   ,S(496, 752)   ,S(475, 742)   ,
		S(491, 762)   ,S(505, 755)   ,S(505, 747)   ,S(517, 740)   ,S(520, 730)   ,S(527, 742)   ,S(522, 739)   ,S(516, 749)   ,
		S(480, 750)   ,S(517, 744)   ,S(500, 751)   ,S(521, 751)   ,S(538, 745)   ,S(516, 727)   ,S(521, 741)   ,S(510, 744)   ,
		S(501, 734)   ,S(491, 742)   ,S(515, 743)   ,S(526, 746)   ,S(523, 741)   ,S(521, 734)   ,S(521, 720)   ,S(495, 731)   ,
		S(497, 735)   ,S(512, 734)   ,S(516, 740)   ,S(522, 734)   ,S(514, 736)   ,S(516, 727)   ,S(520, 721)   ,S(501, 722)   ,
		S(501, 727)   ,S(530, 707)   ,S(514, 722)   ,S(502, 730)   ,S(499, 728)   ,S(503, 716)   ,S(508, 703)   ,S(515, 695)   ,
		S(519, 713)   ,S(489, 725)   ,S(491, 734)   ,S(487, 726)   ,S(488, 725)   ,S(493, 729)   ,S(504, 726)   ,S(519, 710)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(684, 1279)  ,S(678, 1283)  ,S(644, 1296)  ,S(656, 1287)  ,S(629, 1305)  ,S(694, 1297)  ,S(698, 1293)  ,S(689, 1291)  ,
		S(665, 1267)  ,S(653, 1277)  ,S(674, 1272)  ,S(693, 1271)  ,S(663, 1287)  ,S(698, 1265)  ,S(672, 1275)  ,S(670, 1267)  ,
		S(656, 1253)  ,S(712, 1234)  ,S(687, 1250)  ,S(721, 1228)  ,S(723, 1232)  ,S(724, 1248)  ,S(749, 1226)  ,S(675, 1252)  ,
		S(657, 1241)  ,S(680, 1237)  ,S(687, 1239)  ,S(716, 1227)  ,S(696, 1245)  ,S(701, 1243)  ,S(690, 1248)  ,S(671, 1246)  ,
		S(630, 1228)  ,S(636, 1247)  ,S(636, 1243)  ,S(652, 1234)  ,S(638, 1248)  ,S(642, 1254)  ,S(661, 1250)  ,S(636, 1232)  ,
		S(626, 1203)  ,S(639, 1219)  ,S(630, 1215)  ,S(650, 1205)  ,S(640, 1216)  ,S(644, 1220)  ,S(671, 1211)  ,S(638, 1190)  ,
		S(607, 1200)  ,S(640, 1197)  ,S(638, 1203)  ,S(649, 1196)  ,S(642, 1202)  ,S(656, 1197)  ,S(666, 1186)  ,S(588, 1203)  ,
		S(645, 1196)  ,S(647, 1203)  ,S(650, 1203)  ,S(659, 1194)  ,S(654, 1199)  ,S(658, 1217)  ,S(651, 1206)  ,S(641, 1181)  ,
	},
	{
		S(683, 1279)  ,S(651, 1300)  ,S(668, 1298)  ,S(647, 1292)  ,S(674, 1278)  ,S(676, 1273)  ,S(712, 1261)  ,S(712, 1263)  ,
		S(631, 1278)  ,S(663, 1278)  ,S(685, 1273)  ,S(676, 1272)  ,S(691, 1262)  ,S(700, 1249)  ,S(671, 1260)  ,S(681, 1254)  ,
		S(638, 1266)  ,S(706, 1244)  ,S(688, 1259)  ,S(713, 1231)  ,S(738, 1215)  ,S(706, 1233)  ,S(738, 1216)  ,S(681, 1240)  ,
		S(629, 1253)  ,S(677, 1246)  ,S(686, 1248)  ,S(695, 1237)  ,S(704, 1226)  ,S(692, 1228)  ,S(693, 1224)  ,S(678, 1230)  ,
		S(597, 1227)  ,S(637, 1244)  ,S(625, 1255)  ,S(634, 1244)  ,S(642, 1232)  ,S(635, 1239)  ,S(641, 1240)  ,S(634, 1224)  ,
		S(592, 1195)  ,S(643, 1207)  ,S(644, 1210)  ,S(636, 1206)  ,S(640, 1202)  ,S(636, 1206)  ,S(653, 1207)  ,S(631, 1190)  ,
		S(503, 1219)  ,S(623, 1187)  ,S(637, 1199)  ,S(636, 1198)  ,S(644, 1190)  ,S(643, 1187)  ,S(647, 1182)  ,S(600, 1184)  ,
		S(592, 1202)  ,S(622, 1213)  ,S(651, 1204)  ,S(653, 1196)  ,S(654, 1187)  ,S(651, 1191)  ,S(657, 1188)  ,S(644, 1179)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1310, 1547) ,S(1342, 1541) ,S(1319, 1573) ,S(1327, 1580) ,S(1307, 1599) ,S(1354, 1588) ,S(1363, 1574) ,S(1346, 1554) ,
		S(1331, 1526) ,S(1271, 1581) ,S(1323, 1549) ,S(1266, 1610) ,S(1253, 1649) ,S(1347, 1596) ,S(1281, 1623) ,S(1343, 1567) ,
		S(1331, 1529) ,S(1333, 1526) ,S(1318, 1549) ,S(1325, 1563) ,S(1325, 1580) ,S(1315, 1608) ,S(1310, 1609) ,S(1308, 1629) ,
		S(1342, 1515) ,S(1336, 1554) ,S(1327, 1540) ,S(1301, 1615) ,S(1295, 1635) ,S(1326, 1629) ,S(1337, 1626) ,S(1344, 1590) ,
		S(1345, 1497) ,S(1351, 1537) ,S(1334, 1556) ,S(1319, 1616) ,S(1316, 1615) ,S(1333, 1600) ,S(1343, 1575) ,S(1351, 1555) ,
		S(1355, 1473) ,S(1362, 1498) ,S(1350, 1537) ,S(1343, 1536) ,S(1342, 1529) ,S(1343, 1558) ,S(1360, 1518) ,S(1354, 1494) ,
		S(1358, 1462) ,S(1361, 1467) ,S(1368, 1455) ,S(1362, 1493) ,S(1363, 1484) ,S(1380, 1423) ,S(1367, 1436) ,S(1332, 1481) ,
		S(1361, 1453) ,S(1361, 1458) ,S(1368, 1457) ,S(1374, 1483) ,S(1374, 1447) ,S(1350, 1441) ,S(1344, 1427) ,S(1342, 1435) ,
	},
	{
		S(1340, 1493) ,S(1349, 1527) ,S(1332, 1556) ,S(1326, 1578) ,S(1321, 1577) ,S(1348, 1534) ,S(1341, 1522) ,S(1337, 1517) ,
		S(1306, 1536) ,S(1251, 1592) ,S(1312, 1584) ,S(1245, 1635) ,S(1243, 1649) ,S(1327, 1532) ,S(1282, 1568) ,S(1349, 1504) ,
		S(1306, 1566) ,S(1291, 1569) ,S(1282, 1594) ,S(1320, 1572) ,S(1329, 1554) ,S(1325, 1546) ,S(1352, 1502) ,S(1354, 1516) ,
		S(1315, 1547) ,S(1320, 1596) ,S(1306, 1591) ,S(1302, 1614) ,S(1310, 1596) ,S(1333, 1525) ,S(1349, 1541) ,S(1359, 1512) ,
		S(1332, 1509) ,S(1328, 1563) ,S(1322, 1569) ,S(1318, 1599) ,S(1328, 1579) ,S(1337, 1544) ,S(1356, 1514) ,S(1348, 1494) ,
		S(1316, 1499) ,S(1343, 1493) ,S(1340, 1532) ,S(1342, 1509) ,S(1345, 1510) ,S(1350, 1514) ,S(1362, 1489) ,S(1355, 1457) ,
		S(1302, 1460) ,S(1338, 1427) ,S(1371, 1406) ,S(1365, 1460) ,S(1361, 1472) ,S(1369, 1428) ,S(1370, 1437) ,S(1363, 1431) ,
		S(1309, 1432) ,S(1336, 1409) ,S(1346, 1399) ,S(1362, 1419) ,S(1369, 1435) ,S(1370, 1415) ,S(1368, 1430) ,S(1363, 1415) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(102, -47)   ,S(61, -33)    ,S(74, -42)    ,S(-4, -185)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(142, 20)    ,S(161, 31)    ,S(77, 61)     ,S(11, -19)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(152, 51)    ,S(218, 55)    ,S(157, 60)    ,S(56, 24)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(81, 81)     ,S(111, 72)    ,S(83, 51)     ,S(-36, 30)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(27, 80)     ,S(40, 58)     ,S(34, 28)     ,S(-36, 0)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-15, 59)    ,S(-5, 39)     ,S(-19, 9)     ,S(-8, -6)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-91, 33)    ,S(-72, 33)    ,S(-20, -10)   ,S(46, -43)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-78, -42)   ,S(-99, -4)    ,S(-9, -52)    ,S(42, -126)   ,
	},
	{
		S(-2, -207)   ,S(70, -83)    ,S(101, -65)   ,S(117, -41)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-26, -51)   ,S(98, 36)     ,S(152, 19)    ,S(201, -11)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(7, 8)       ,S(159, 48)    ,S(184, 48)    ,S(161, 39)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-52, 14)    ,S(98, 36)     ,S(112, 61)    ,S(87, 67)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-66, -28)   ,S(33, 19)     ,S(75, 42)     ,S(32, 66)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-81, -21)   ,S(-17, -1)    ,S(7, 22)      ,S(-14, 44)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-6, -49)    ,S(-19, -22)   ,S(-29, 5)     ,S(-87, 17)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-11, -130)  ,S(-3, -70)    ,S(-43, -26)   ,S(-94, -40)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(105, 207), S(465, 649), S(472, 687), S(638, 1185), S(1328, 1482), };
constexpr PScore knightMob[9] = {S(-41, -153), S(-21, -75), S(-10, -28), S(-3, -3), S(2, 8), S(8, 21), S(15, 20), S(24, 14), S(36, -11), };
constexpr PScore bishopMob[14] = {S(-58, -202), S(-31, -128), S(-14, -76), S(-7, -47), S(3, -25), S(7, -4), S(9, 10), S(10, 20), S(12, 32), S(18, 35), S(27, 32), S(52, 18), S(62, 26), S(87, -16), };
constexpr PScore rookMob[15] = {S(-28, -130), S(-35, -87), S(-26, -51), S(-25, -33), S(-25, -16), S(-26, 3), S(-23, 13), S(-18, 15), S(-14, 20), S(-6, 26), S(-6, 34), S(0, 39), S(2, 41), S(17, 22), S(83, -12), };
constexpr PScore queenMob[28] = {S(-144, -379), S(-102, -395), S(-66, -304), S(-48, -216), S(-45, -120), S(-43, -61), S(-39, -26), S(-37, -6), S(-32, 16), S(-28, 29), S(-25, 37), S(-20, 43), S(-16, 46), S(-13, 49), S(-10, 49), S(-8, 49), S(-8, 47), S(-12, 45), S(-8, 38), S(-4, 27), S(10, 2), S(17, -20), S(18, -40), S(25, -60), S(-4, -65), S(4, -99), S(-42, -56), S(-28, -51), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 779.9406127929688;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.772094964981079;
constexpr S32 DAMPENMG = 94;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 835.1619873046875;
constexpr double KSBEG = 1;
constexpr double KSCEG = -2.156595468521118;
constexpr S32 DAMPENEG = 812;

constexpr PScore DAMPEN = S(static_cast<S16>(0.09197794646024704 * RESOLUTION), static_cast<S16>(0.844261884689331 * RESOLUTION));

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);