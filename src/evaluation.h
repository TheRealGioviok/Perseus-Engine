#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,
		S(183, 271)   ,S(146, 266)   ,S(188, 208)   ,S(201, 158)   ,S(182, 161)   ,S(138, 211)   ,S(-69, 303)   ,S(-47, 324)   ,
		S(97, 298)    ,S(124, 273)   ,S(147, 224)   ,S(145, 175)   ,S(161, 177)   ,S(217, 212)   ,S(164, 253)   ,S(114, 273)   ,
		S(92, 252)    ,S(97, 232)    ,S(103, 211)   ,S(120, 178)   ,S(133, 190)   ,S(142, 200)   ,S(106, 227)   ,S(98, 231)    ,
		S(86, 225)    ,S(83, 214)    ,S(99, 195)    ,S(108, 186)   ,S(114, 191)   ,S(117, 198)   ,S(101, 203)   ,S(97, 206)    ,
		S(89, 214)    ,S(87, 206)    ,S(94, 205)    ,S(105, 200)   ,S(115, 215)   ,S(108, 218)   ,S(120, 195)   ,S(109, 194)   ,
		S(86, 224)    ,S(84, 215)    ,S(83, 215)    ,S(92, 218)    ,S(92, 239)    ,S(128, 233)   ,S(139, 205)   ,S(108, 185)   ,
		S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,
	},
	{
		S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,
		S(131, 323)   ,S(115, 326)   ,S(191, 287)   ,S(199, 207)   ,S(189, 192)   ,S(191, 183)   ,S(81, 265)    ,S(69, 272)    ,
		S(125, 311)   ,S(182, 297)   ,S(183, 261)   ,S(165, 210)   ,S(170, 186)   ,S(162, 219)   ,S(154, 246)   ,S(93, 274)    ,
		S(130, 246)   ,S(126, 239)   ,S(132, 218)   ,S(137, 199)   ,S(132, 197)   ,S(115, 211)   ,S(82, 238)    ,S(85, 246)    ,
		S(123, 213)   ,S(116, 214)   ,S(127, 200)   ,S(123, 200)   ,S(111, 193)   ,S(94, 207)    ,S(73, 219)    ,S(69, 227)    ,
		S(125, 205)   ,S(136, 195)   ,S(121, 213)   ,S(112, 215)   ,S(99, 210)    ,S(90, 210)    ,S(76, 215)    ,S(67, 220)    ,
		S(127, 204)   ,S(150, 201)   ,S(137, 224)   ,S(102, 238)   ,S(82, 227)    ,S(78, 226)    ,S(69, 227)    ,S(67, 230)    ,
		S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,S(105, 203)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(240, 585)   ,S(334, 663)   ,S(315, 708)   ,S(426, 675)   ,S(464, 669)   ,S(309, 702)   ,S(323, 668)   ,S(306, 548)   ,
		S(469, 630)   ,S(470, 655)   ,S(515, 655)   ,S(535, 690)   ,S(531, 688)   ,S(550, 642)   ,S(463, 657)   ,S(486, 624)   ,
		S(455, 642)   ,S(484, 668)   ,S(497, 708)   ,S(505, 707)   ,S(537, 699)   ,S(528, 702)   ,S(479, 679)   ,S(459, 660)   ,
		S(485, 666)   ,S(490, 677)   ,S(500, 710)   ,S(495, 732)   ,S(496, 740)   ,S(507, 718)   ,S(488, 707)   ,S(485, 688)   ,
		S(472, 670)   ,S(480, 681)   ,S(480, 710)   ,S(481, 720)   ,S(487, 727)   ,S(488, 714)   ,S(496, 691)   ,S(478, 691)   ,
		S(449, 622)   ,S(462, 657)   ,S(458, 685)   ,S(470, 712)   ,S(469, 710)   ,S(457, 684)   ,S(458, 672)   ,S(450, 651)   ,
		S(433, 642)   ,S(440, 656)   ,S(446, 653)   ,S(454, 678)   ,S(450, 681)   ,S(444, 655)   ,S(432, 665)   ,S(438, 671)   ,
		S(419, 598)   ,S(443, 619)   ,S(439, 633)   ,S(442, 666)   ,S(439, 671)   ,S(435, 664)   ,S(433, 645)   ,S(398, 628)   ,
	},
	{
		S(268, 543)   ,S(346, 644)   ,S(336, 693)   ,S(454, 658)   ,S(448, 657)   ,S(297, 702)   ,S(319, 664)   ,S(267, 559)   ,
		S(458, 625)   ,S(459, 660)   ,S(521, 654)   ,S(569, 671)   ,S(530, 679)   ,S(537, 652)   ,S(466, 652)   ,S(475, 621)   ,
		S(437, 660)   ,S(499, 671)   ,S(501, 711)   ,S(521, 708)   ,S(537, 695)   ,S(514, 700)   ,S(506, 657)   ,S(460, 644)   ,
		S(474, 674)   ,S(495, 686)   ,S(503, 715)   ,S(510, 724)   ,S(506, 726)   ,S(506, 704)   ,S(492, 689)   ,S(486, 663)   ,
		S(478, 678)   ,S(480, 689)   ,S(490, 707)   ,S(489, 718)   ,S(493, 719)   ,S(485, 708)   ,S(482, 681)   ,S(481, 662)   ,
		S(428, 654)   ,S(453, 667)   ,S(465, 684)   ,S(465, 704)   ,S(468, 706)   ,S(455, 682)   ,S(454, 650)   ,S(436, 624)   ,
		S(424, 681)   ,S(412, 681)   ,S(437, 659)   ,S(445, 672)   ,S(451, 676)   ,S(440, 654)   ,S(424, 661)   ,S(425, 635)   ,
		S(389, 647)   ,S(414, 650)   ,S(425, 661)   ,S(421, 668)   ,S(437, 658)   ,S(441, 625)   ,S(433, 624)   ,S(411, 585)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(422, 752)   ,S(399, 754)   ,S(346, 754)   ,S(336, 765)   ,S(355, 754)   ,S(321, 753)   ,S(422, 732)   ,S(417, 741)   ,
		S(421, 740)   ,S(481, 735)   ,S(477, 733)   ,S(446, 741)   ,S(473, 731)   ,S(472, 736)   ,S(441, 745)   ,S(439, 731)   ,
		S(479, 733)   ,S(483, 739)   ,S(508, 734)   ,S(489, 730)   ,S(502, 731)   ,S(496, 756)   ,S(482, 747)   ,S(473, 747)   ,
		S(467, 735)   ,S(502, 730)   ,S(484, 731)   ,S(508, 749)   ,S(510, 753)   ,S(503, 739)   ,S(508, 739)   ,S(458, 748)   ,
		S(475, 715)   ,S(482, 721)   ,S(476, 746)   ,S(497, 744)   ,S(502, 746)   ,S(478, 739)   ,S(484, 727)   ,S(485, 714)   ,
		S(480, 712)   ,S(492, 721)   ,S(482, 733)   ,S(485, 739)   ,S(481, 738)   ,S(483, 734)   ,S(487, 718)   ,S(491, 723)   ,
		S(490, 705)   ,S(487, 692)   ,S(484, 708)   ,S(464, 727)   ,S(465, 731)   ,S(483, 713)   ,S(497, 710)   ,S(486, 691)   ,
		S(497, 699)   ,S(484, 716)   ,S(465, 719)   ,S(457, 715)   ,S(454, 725)   ,S(460, 732)   ,S(461, 718)   ,S(485, 699)   ,
	},
	{
		S(387, 751)   ,S(363, 744)   ,S(374, 747)   ,S(342, 756)   ,S(346, 758)   ,S(323, 754)   ,S(436, 739)   ,S(397, 762)   ,
		S(398, 734)   ,S(446, 750)   ,S(466, 741)   ,S(444, 735)   ,S(459, 736)   ,S(485, 734)   ,S(481, 742)   ,S(445, 732)   ,
		S(469, 746)   ,S(499, 744)   ,S(501, 742)   ,S(508, 735)   ,S(508, 724)   ,S(510, 738)   ,S(499, 734)   ,S(488, 737)   ,
		S(466, 735)   ,S(507, 735)   ,S(496, 743)   ,S(515, 748)   ,S(527, 743)   ,S(495, 729)   ,S(505, 732)   ,S(482, 737)   ,
		S(483, 720)   ,S(472, 731)   ,S(491, 738)   ,S(505, 743)   ,S(502, 743)   ,S(488, 735)   ,S(488, 716)   ,S(470, 716)   ,
		S(482, 720)   ,S(493, 723)   ,S(496, 735)   ,S(497, 730)   ,S(487, 733)   ,S(487, 726)   ,S(488, 712)   ,S(470, 714)   ,
		S(482, 716)   ,S(506, 702)   ,S(488, 716)   ,S(471, 725)   ,S(468, 722)   ,S(471, 709)   ,S(475, 698)   ,S(485, 684)   ,
		S(494, 704)   ,S(463, 717)   ,S(460, 727)   ,S(456, 716)   ,S(457, 714)   ,S(464, 715)   ,S(476, 715)   ,S(489, 698)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(645, 1314)  ,S(641, 1316)  ,S(610, 1327)  ,S(623, 1318)  ,S(619, 1323)  ,S(670, 1322)  ,S(650, 1326)  ,S(653, 1321)  ,
		S(627, 1304)  ,S(613, 1316)  ,S(637, 1310)  ,S(655, 1308)  ,S(640, 1314)  ,S(678, 1290)  ,S(628, 1306)  ,S(637, 1296)  ,
		S(618, 1292)  ,S(671, 1273)  ,S(647, 1288)  ,S(681, 1267)  ,S(699, 1260)  ,S(704, 1273)  ,S(722, 1256)  ,S(647, 1280)  ,
		S(618, 1280)  ,S(640, 1277)  ,S(649, 1277)  ,S(682, 1263)  ,S(667, 1270)  ,S(678, 1267)  ,S(665, 1273)  ,S(644, 1274)  ,
		S(596, 1263)  ,S(596, 1282)  ,S(600, 1277)  ,S(616, 1266)  ,S(607, 1270)  ,S(612, 1274)  ,S(635, 1268)  ,S(611, 1253)  ,
		S(592, 1239)  ,S(603, 1257)  ,S(593, 1253)  ,S(613, 1241)  ,S(610, 1243)  ,S(612, 1248)  ,S(642, 1236)  ,S(612, 1215)  ,
		S(575, 1234)  ,S(606, 1233)  ,S(604, 1239)  ,S(614, 1230)  ,S(613, 1230)  ,S(626, 1223)  ,S(636, 1213)  ,S(562, 1231)  ,
		S(613, 1233)  ,S(614, 1239)  ,S(616, 1240)  ,S(625, 1231)  ,S(624, 1232)  ,S(628, 1249)  ,S(623, 1239)  ,S(613, 1211)  ,
	},
	{
		S(653, 1313)  ,S(620, 1333)  ,S(637, 1330)  ,S(639, 1315)  ,S(649, 1307)  ,S(644, 1304)  ,S(677, 1293)  ,S(674, 1297)  ,
		S(603, 1312)  ,S(627, 1313)  ,S(657, 1305)  ,S(650, 1305)  ,S(655, 1298)  ,S(665, 1285)  ,S(629, 1297)  ,S(644, 1291)  ,
		S(613, 1298)  ,S(677, 1276)  ,S(667, 1290)  ,S(687, 1265)  ,S(704, 1251)  ,S(672, 1269)  ,S(701, 1253)  ,S(644, 1278)  ,
		S(606, 1283)  ,S(653, 1275)  ,S(669, 1274)  ,S(673, 1264)  ,S(673, 1260)  ,S(659, 1266)  ,S(661, 1259)  ,S(643, 1269)  ,
		S(577, 1252)  ,S(611, 1266)  ,S(606, 1276)  ,S(607, 1268)  ,S(610, 1261)  ,S(603, 1272)  ,S(603, 1274)  ,S(602, 1257)  ,
		S(567, 1224)  ,S(610, 1237)  ,S(612, 1240)  ,S(605, 1237)  ,S(605, 1238)  ,S(600, 1244)  ,S(619, 1244)  ,S(598, 1226)  ,
		S(474, 1254)  ,S(588, 1223)  ,S(608, 1230)  ,S(606, 1230)  ,S(611, 1224)  ,S(613, 1222)  ,S(615, 1218)  ,S(572, 1218)  ,
		S(566, 1236)  ,S(592, 1249)  ,S(622, 1239)  ,S(624, 1231)  ,S(622, 1224)  ,S(620, 1228)  ,S(626, 1224)  ,S(614, 1216)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1253, 1459) ,S(1290, 1445) ,S(1271, 1474) ,S(1278, 1478) ,S(1262, 1504) ,S(1299, 1500) ,S(1295, 1466) ,S(1268, 1457) ,
		S(1284, 1442) ,S(1230, 1487) ,S(1285, 1447) ,S(1232, 1516) ,S(1235, 1549) ,S(1301, 1538) ,S(1220, 1528) ,S(1295, 1475) ,
		S(1286, 1441) ,S(1290, 1440) ,S(1279, 1462) ,S(1293, 1476) ,S(1300, 1506) ,S(1301, 1515) ,S(1295, 1510) ,S(1275, 1533) ,
		S(1299, 1425) ,S(1299, 1461) ,S(1292, 1451) ,S(1277, 1515) ,S(1281, 1533) ,S(1318, 1513) ,S(1327, 1515) ,S(1321, 1487) ,
		S(1303, 1395) ,S(1302, 1444) ,S(1292, 1453) ,S(1287, 1502) ,S(1288, 1501) ,S(1305, 1489) ,S(1317, 1460) ,S(1324, 1445) ,
		S(1310, 1376) ,S(1316, 1401) ,S(1306, 1433) ,S(1304, 1426) ,S(1306, 1423) ,S(1310, 1442) ,S(1326, 1402) ,S(1324, 1379) ,
		S(1313, 1360) ,S(1317, 1363) ,S(1325, 1352) ,S(1320, 1387) ,S(1322, 1376) ,S(1338, 1315) ,S(1328, 1317) ,S(1295, 1369) ,
		S(1316, 1350) ,S(1319, 1350) ,S(1324, 1353) ,S(1330, 1379) ,S(1331, 1345) ,S(1305, 1338) ,S(1302, 1312) ,S(1301, 1331) ,
	},
	{
		S(1286, 1400) ,S(1298, 1420) ,S(1296, 1445) ,S(1283, 1486) ,S(1256, 1495) ,S(1291, 1455) ,S(1282, 1437) ,S(1283, 1421) ,
		S(1280, 1450) ,S(1219, 1496) ,S(1294, 1484) ,S(1224, 1541) ,S(1214, 1551) ,S(1291, 1446) ,S(1235, 1484) ,S(1302, 1426) ,
		S(1279, 1475) ,S(1289, 1470) ,S(1275, 1500) ,S(1305, 1485) ,S(1306, 1468) ,S(1289, 1469) ,S(1316, 1418) ,S(1314, 1434) ,
		S(1305, 1445) ,S(1317, 1491) ,S(1310, 1480) ,S(1298, 1514) ,S(1293, 1504) ,S(1307, 1439) ,S(1322, 1454) ,S(1323, 1431) ,
		S(1311, 1405) ,S(1311, 1456) ,S(1304, 1464) ,S(1298, 1494) ,S(1302, 1477) ,S(1301, 1447) ,S(1314, 1424) ,S(1311, 1399) ,
		S(1288, 1403) ,S(1315, 1394) ,S(1313, 1429) ,S(1311, 1409) ,S(1312, 1410) ,S(1313, 1417) ,S(1322, 1390) ,S(1316, 1356) ,
		S(1270, 1365) ,S(1304, 1328) ,S(1336, 1310) ,S(1329, 1363) ,S(1324, 1375) ,S(1332, 1331) ,S(1329, 1341) ,S(1325, 1329) ,
		S(1274, 1339) ,S(1299, 1312) ,S(1307, 1306) ,S(1324, 1323) ,S(1329, 1342) ,S(1333, 1317) ,S(1332, 1331) ,S(1324, 1316) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(97, -46)    ,S(64, -42)    ,S(70, -40)    ,S(-21, -204)  ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(155, 11)    ,S(157, 30)    ,S(82, 60)     ,S(0, -39)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(172, 44)    ,S(220, 56)    ,S(171, 59)    ,S(40, 7)      ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(109, 78)    ,S(134, 71)    ,S(111, 49)    ,S(-44, 15)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(70, 81)     ,S(70, 63)     ,S(71, 28)     ,S(-62, -10)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(20, 62)     ,S(18, 43)     ,S(13, 9)      ,S(-52, -13)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-66, 38)    ,S(-51, 32)    ,S(-4, -8)     ,S(4, -52)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-64, -41)   ,S(-91, -5)    ,S(-2, -52)    ,S(8, -139)    ,
	},
	{
		S(-18, -210)  ,S(46, -86)    ,S(82, -74)    ,S(111, -50)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-32, -56)   ,S(91, 30)     ,S(143, 13)    ,S(188, -16)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(10, 4)      ,S(168, 41)    ,S(196, 41)    ,S(173, 33)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-45, 10)    ,S(112, 30)    ,S(134, 54)    ,S(106, 63)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-52, -31)   ,S(62, 13)     ,S(99, 42)     ,S(62, 66)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-79, -19)   ,S(-1, -1)     ,S(25, 24)     ,S(10, 46)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-15, -44)   ,S(-19, -19)   ,S(-26, 6)     ,S(-74, 21)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-25, -123)  ,S(-12, -66)   ,S(-51, -25)   ,S(-93, -38)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(105, 203), S(431, 628), S(446, 678), S(609, 1222), S(1296, 1398), };
constexpr PScore knightMob[9] = {S(-25, -127), S(-7, -51), S(4, -4), S(11, 21), S(17, 32), S(22, 46), S(29, 45), S(39, 37), S(51, 12), };
constexpr PScore bishopMob[14] = {S(-45, -183), S(-14, -106), S(3, -52), S(11, -23), S(21, -3), S(25, 15), S(29, 29), S(27, 36), S(27, 45), S(30, 49), S(38, 42), S(59, 28), S(63, 33), S(86, -9), };
constexpr PScore rookMob[15] = {S(-18, -142), S(-23, -93), S(-13, -60), S(-12, -43), S(-12, -26), S(-13, -7), S(-10, 2), S(-5, 3), S(-2, 7), S(6, 12), S(7, 17), S(12, 22), S(16, 23), S(32, 1), S(96, -32), };
constexpr PScore queenMob[28] = {S(-126, -445), S(-81, -479), S(-42, -394), S(-24, -305), S(-21, -207), S(-18, -148), S(-15, -112), S(-12, -93), S(-9, -70), S(-6, -58), S(-1, -49), S(3, -44), S(6, -42), S(11, -37), S(13, -37), S(13, -39), S(14, -39), S(11, -38), S(14, -46), S(19, -59), S(33, -84), S(41, -104), S(43, -125), S(57, -150), S(37, -159), S(32, -177), S(1, -153), S(-2, -122), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 879.2489013671875;
constexpr double KSBMG = 1; //1.6383832693099976;
constexpr double KSCMG = -3.335665702819824;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 1061.580810546875;
constexpr double KSBEG = 1; //1.198421835899353;
constexpr double KSCEG = 1.974453330039978;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);