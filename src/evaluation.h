#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,
		S(195, 262)   ,S(152, 263)   ,S(194, 206)   ,S(195, 164)   ,S(164, 175)   ,S(114, 223)   ,S(-91, 313)   ,S(-49, 322)   ,
		S(96, 295)    ,S(123, 273)   ,S(145, 226)   ,S(136, 182)   ,S(143, 193)   ,S(193, 232)   ,S(142, 269)   ,S(106, 277)   ,
		S(92, 249)    ,S(95, 232)    ,S(101, 212)   ,S(116, 180)   ,S(124, 195)   ,S(129, 210)   ,S(94, 235)    ,S(90, 233)    ,
		S(86, 222)    ,S(82, 214)    ,S(96, 195)    ,S(104, 189)   ,S(108, 195)   ,S(109, 204)   ,S(92, 211)    ,S(91, 207)    ,
		S(88, 212)    ,S(86, 206)    ,S(93, 203)    ,S(100, 201)   ,S(113, 216)   ,S(103, 220)   ,S(113, 198)   ,S(104, 194)   ,
		S(85, 222)    ,S(83, 215)    ,S(82, 215)    ,S(89, 219)    ,S(89, 240)    ,S(127, 233)   ,S(135, 207)   ,S(107, 183)   ,
		S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,
	},
	{
		S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,
		S(132, 321)   ,S(100, 330)   ,S(170, 294)   ,S(176, 221)   ,S(174, 204)   ,S(198, 180)   ,S(88, 257)    ,S(78, 262)    ,
		S(113, 313)   ,S(163, 306)   ,S(159, 278)   ,S(144, 228)   ,S(155, 200)   ,S(157, 225)   ,S(149, 247)   ,S(91, 271)    ,
		S(121, 246)   ,S(114, 245)   ,S(119, 227)   ,S(125, 208)   ,S(126, 202)   ,S(112, 214)   ,S(80, 239)    ,S(83, 243)    ,
		S(119, 214)   ,S(104, 221)   ,S(116, 208)   ,S(116, 206)   ,S(106, 199)   ,S(93, 210)    ,S(71, 220)    ,S(69, 224)    ,
		S(121, 203)   ,S(129, 199)   ,S(115, 217)   ,S(107, 217)   ,S(95, 213)    ,S(90, 211)    ,S(75, 216)    ,S(67, 218)    ,
		S(125, 202)   ,S(146, 203)   ,S(134, 227)   ,S(100, 238)   ,S(79, 231)    ,S(77, 226)    ,S(68, 227)    ,S(68, 227)    ,
		S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,S(101, 206)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(255, 580)   ,S(348, 657)   ,S(325, 705)   ,S(434, 678)   ,S(483, 672)   ,S(338, 708)   ,S(350, 667)   ,S(320, 548)   ,
		S(458, 632)   ,S(461, 657)   ,S(495, 664)   ,S(518, 700)   ,S(523, 698)   ,S(530, 655)   ,S(452, 664)   ,S(480, 631)   ,
		S(451, 641)   ,S(472, 670)   ,S(494, 711)   ,S(495, 716)   ,S(509, 713)   ,S(497, 721)   ,S(451, 695)   ,S(452, 666)   ,
		S(488, 664)   ,S(491, 677)   ,S(501, 710)   ,S(496, 738)   ,S(494, 748)   ,S(502, 729)   ,S(485, 716)   ,S(487, 694)   ,
		S(476, 671)   ,S(487, 681)   ,S(483, 710)   ,S(482, 723)   ,S(492, 733)   ,S(489, 721)   ,S(503, 701)   ,S(481, 697)   ,
		S(452, 622)   ,S(462, 656)   ,S(458, 683)   ,S(468, 712)   ,S(467, 709)   ,S(455, 683)   ,S(454, 671)   ,S(448, 648)   ,
		S(434, 640)   ,S(442, 654)   ,S(447, 651)   ,S(454, 675)   ,S(451, 676)   ,S(443, 653)   ,S(432, 660)   ,S(438, 667)   ,
		S(423, 597)   ,S(447, 616)   ,S(442, 629)   ,S(446, 663)   ,S(443, 667)   ,S(439, 660)   ,S(437, 637)   ,S(402, 625)   ,
	},
	{
		S(284, 539)   ,S(361, 638)   ,S(361, 688)   ,S(463, 660)   ,S(464, 657)   ,S(318, 693)   ,S(334, 658)   ,S(290, 551)   ,
		S(455, 627)   ,S(445, 665)   ,S(496, 667)   ,S(557, 678)   ,S(530, 683)   ,S(524, 652)   ,S(464, 649)   ,S(468, 621)   ,
		S(431, 662)   ,S(475, 681)   ,S(479, 722)   ,S(504, 718)   ,S(514, 710)   ,S(510, 704)   ,S(495, 657)   ,S(460, 640)   ,
		S(473, 676)   ,S(493, 693)   ,S(496, 724)   ,S(506, 733)   ,S(507, 732)   ,S(507, 707)   ,S(493, 690)   ,S(489, 662)   ,
		S(482, 682)   ,S(486, 696)   ,S(491, 716)   ,S(494, 724)   ,S(496, 724)   ,S(490, 710)   ,S(492, 683)   ,S(486, 663)   ,
		S(426, 653)   ,S(447, 669)   ,S(459, 685)   ,S(462, 707)   ,S(464, 707)   ,S(455, 680)   ,S(455, 648)   ,S(438, 623)   ,
		S(425, 676)   ,S(413, 680)   ,S(434, 659)   ,S(446, 670)   ,S(451, 673)   ,S(441, 652)   ,S(426, 657)   ,S(427, 630)   ,
		S(393, 643)   ,S(420, 645)   ,S(430, 658)   ,S(425, 664)   ,S(441, 653)   ,S(443, 621)   ,S(437, 621)   ,S(415, 585)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(426, 755)   ,S(400, 757)   ,S(344, 758)   ,S(339, 765)   ,S(368, 749)   ,S(334, 748)   ,S(436, 735)   ,S(425, 744)   ,
		S(420, 742)   ,S(459, 743)   ,S(472, 733)   ,S(435, 744)   ,S(448, 739)   ,S(461, 736)   ,S(424, 748)   ,S(429, 737)   ,
		S(482, 731)   ,S(487, 737)   ,S(507, 732)   ,S(488, 731)   ,S(495, 737)   ,S(483, 760)   ,S(467, 754)   ,S(467, 752)   ,
		S(471, 733)   ,S(510, 727)   ,S(493, 729)   ,S(514, 750)   ,S(513, 754)   ,S(500, 742)   ,S(509, 741)   ,S(460, 750)   ,
		S(484, 715)   ,S(494, 720)   ,S(488, 745)   ,S(504, 743)   ,S(512, 747)   ,S(487, 742)   ,S(489, 731)   ,S(491, 716)   ,
		S(485, 714)   ,S(500, 720)   ,S(488, 731)   ,S(489, 737)   ,S(486, 734)   ,S(486, 731)   ,S(488, 716)   ,S(490, 723)   ,
		S(496, 706)   ,S(492, 693)   ,S(489, 707)   ,S(469, 724)   ,S(470, 725)   ,S(488, 708)   ,S(501, 707)   ,S(488, 688)   ,
		S(502, 702)   ,S(487, 717)   ,S(468, 718)   ,S(461, 712)   ,S(460, 720)   ,S(466, 728)   ,S(467, 713)   ,S(489, 697)   ,
	},
	{
		S(396, 751)   ,S(367, 744)   ,S(382, 740)   ,S(360, 747)   ,S(349, 754)   ,S(320, 756)   ,S(436, 744)   ,S(405, 762)   ,
		S(393, 737)   ,S(433, 750)   ,S(460, 738)   ,S(433, 735)   ,S(438, 739)   ,S(475, 735)   ,S(468, 744)   ,S(442, 732)   ,
		S(467, 750)   ,S(489, 747)   ,S(492, 743)   ,S(503, 737)   ,S(504, 728)   ,S(511, 737)   ,S(500, 733)   ,S(488, 735)   ,
		S(463, 738)   ,S(507, 738)   ,S(493, 745)   ,S(514, 747)   ,S(529, 745)   ,S(505, 726)   ,S(511, 732)   ,S(489, 730)   ,
		S(485, 724)   ,S(473, 737)   ,S(497, 742)   ,S(513, 745)   ,S(510, 744)   ,S(501, 732)   ,S(502, 716)   ,S(478, 716)   ,
		S(481, 723)   ,S(491, 726)   ,S(494, 736)   ,S(500, 728)   ,S(493, 732)   ,S(493, 722)   ,S(495, 710)   ,S(479, 713)   ,
		S(483, 719)   ,S(508, 702)   ,S(490, 715)   ,S(475, 721)   ,S(471, 720)   ,S(477, 707)   ,S(482, 696)   ,S(492, 686)   ,
		S(498, 702)   ,S(468, 714)   ,S(469, 721)   ,S(463, 710)   ,S(462, 711)   ,S(467, 714)   ,S(480, 712)   ,S(494, 699)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(665, 1295)  ,S(660, 1298)  ,S(625, 1312)  ,S(637, 1303)  ,S(607, 1321)  ,S(671, 1313)  ,S(673, 1309)  ,S(669, 1308)  ,
		S(640, 1288)  ,S(627, 1300)  ,S(648, 1297)  ,S(666, 1295)  ,S(634, 1309)  ,S(674, 1285)  ,S(643, 1296)  ,S(644, 1286)  ,
		S(629, 1275)  ,S(683, 1257)  ,S(655, 1275)  ,S(690, 1255)  ,S(690, 1257)  ,S(691, 1273)  ,S(714, 1251)  ,S(645, 1274)  ,
		S(625, 1265)  ,S(646, 1263)  ,S(655, 1266)  ,S(681, 1255)  ,S(660, 1267)  ,S(671, 1264)  ,S(655, 1270)  ,S(638, 1268)  ,
		S(603, 1251)  ,S(608, 1269)  ,S(607, 1268)  ,S(620, 1257)  ,S(607, 1266)  ,S(615, 1271)  ,S(630, 1269)  ,S(606, 1251)  ,
		S(598, 1226)  ,S(610, 1244)  ,S(601, 1242)  ,S(621, 1232)  ,S(611, 1237)  ,S(615, 1242)  ,S(639, 1232)  ,S(608, 1212)  ,
		S(581, 1223)  ,S(613, 1221)  ,S(611, 1229)  ,S(621, 1220)  ,S(616, 1223)  ,S(629, 1217)  ,S(637, 1206)  ,S(560, 1227)  ,
		S(618, 1221)  ,S(619, 1227)  ,S(623, 1229)  ,S(630, 1219)  ,S(626, 1221)  ,S(632, 1240)  ,S(623, 1229)  ,S(613, 1206)  ,
	},
	{
		S(664, 1299)  ,S(636, 1316)  ,S(642, 1321)  ,S(625, 1313)  ,S(659, 1293)  ,S(662, 1287)  ,S(699, 1271)  ,S(698, 1276)  ,
		S(604, 1302)  ,S(637, 1300)  ,S(658, 1298)  ,S(648, 1299)  ,S(668, 1283)  ,S(675, 1270)  ,S(647, 1279)  ,S(659, 1272)  ,
		S(612, 1289)  ,S(676, 1266)  ,S(660, 1287)  ,S(682, 1261)  ,S(709, 1240)  ,S(679, 1255)  ,S(713, 1234)  ,S(656, 1258)  ,
		S(598, 1280)  ,S(643, 1272)  ,S(654, 1275)  ,S(660, 1264)  ,S(672, 1251)  ,S(661, 1253)  ,S(664, 1248)  ,S(649, 1252)  ,
		S(570, 1248)  ,S(608, 1265)  ,S(596, 1280)  ,S(604, 1267)  ,S(613, 1254)  ,S(608, 1261)  ,S(616, 1261)  ,S(607, 1243)  ,
		S(564, 1220)  ,S(613, 1233)  ,S(613, 1239)  ,S(606, 1233)  ,S(611, 1229)  ,S(607, 1233)  ,S(626, 1230)  ,S(604, 1213)  ,
		S(476, 1248)  ,S(594, 1215)  ,S(609, 1227)  ,S(608, 1224)  ,S(617, 1213)  ,S(617, 1211)  ,S(620, 1205)  ,S(575, 1208)  ,
		S(567, 1229)  ,S(595, 1241)  ,S(624, 1232)  ,S(625, 1222)  ,S(627, 1214)  ,S(625, 1218)  ,S(630, 1213)  ,S(618, 1205)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1273, 2407) ,S(1306, 2401) ,S(1283, 2435) ,S(1291, 2442) ,S(1268, 2461) ,S(1303, 2462) ,S(1329, 2430) ,S(1310, 2413) ,
		S(1296, 2394) ,S(1241, 2443) ,S(1295, 2413) ,S(1238, 2473) ,S(1228, 2503) ,S(1312, 2455) ,S(1251, 2476) ,S(1305, 2428) ,
		S(1297, 2391) ,S(1302, 2392) ,S(1289, 2415) ,S(1297, 2423) ,S(1294, 2440) ,S(1290, 2454) ,S(1281, 2456) ,S(1279, 2470) ,
		S(1307, 2379) ,S(1305, 2417) ,S(1299, 2399) ,S(1276, 2463) ,S(1269, 2475) ,S(1300, 2461) ,S(1308, 2460) ,S(1313, 2429) ,
		S(1311, 2361) ,S(1315, 2402) ,S(1300, 2412) ,S(1291, 2462) ,S(1288, 2455) ,S(1303, 2435) ,S(1312, 2408) ,S(1318, 2395) ,
		S(1317, 2340) ,S(1324, 2366) ,S(1314, 2398) ,S(1306, 2391) ,S(1306, 2378) ,S(1309, 2395) ,S(1324, 2356) ,S(1318, 2338) ,
		S(1321, 2325) ,S(1323, 2332) ,S(1329, 2315) ,S(1322, 2350) ,S(1324, 2335) ,S(1343, 2273) ,S(1330, 2281) ,S(1296, 2327) ,
		S(1322, 2313) ,S(1323, 2316) ,S(1328, 2318) ,S(1334, 2341) ,S(1334, 2305) ,S(1311, 2298) ,S(1308, 2272) ,S(1303, 2289) ,
	},
	{
		S(1301, 2362) ,S(1317, 2386) ,S(1306, 2411) ,S(1295, 2439) ,S(1298, 2430) ,S(1315, 2400) ,S(1308, 2385) ,S(1308, 2372) ,
		S(1273, 2402) ,S(1224, 2456) ,S(1289, 2437) ,S(1223, 2491) ,S(1219, 2509) ,S(1302, 2397) ,S(1253, 2437) ,S(1315, 2377) ,
		S(1277, 2423) ,S(1266, 2427) ,S(1259, 2452) ,S(1293, 2436) ,S(1304, 2416) ,S(1300, 2412) ,S(1322, 2370) ,S(1323, 2383) ,
		S(1289, 2395) ,S(1294, 2446) ,S(1284, 2432) ,S(1280, 2459) ,S(1288, 2446) ,S(1307, 2385) ,S(1321, 2401) ,S(1325, 2380) ,
		S(1301, 2360) ,S(1299, 2410) ,S(1295, 2415) ,S(1293, 2444) ,S(1302, 2430) ,S(1307, 2398) ,S(1324, 2375) ,S(1315, 2357) ,
		S(1281, 2357) ,S(1309, 2349) ,S(1307, 2383) ,S(1309, 2365) ,S(1312, 2370) ,S(1316, 2375) ,S(1327, 2352) ,S(1321, 2321) ,
		S(1266, 2321) ,S(1302, 2292) ,S(1334, 2270) ,S(1328, 2318) ,S(1324, 2336) ,S(1334, 2291) ,S(1334, 2303) ,S(1329, 2291) ,
		S(1275, 2291) ,S(1301, 2267) ,S(1309, 2265) ,S(1325, 2281) ,S(1331, 2301) ,S(1334, 2276) ,S(1333, 2289) ,S(1327, 2277) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(117, -68)   ,S(92, -60)    ,S(92, -63)    ,S(-18, -214)  ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(167, -8)    ,S(183, 5)     ,S(102, 36)    ,S(2, -53)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(162, 40)    ,S(229, 41)    ,S(173, 47)    ,S(48, -13)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(95, 75)     ,S(123, 63)    ,S(99, 42)     ,S(-43, -10)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(38, 89)     ,S(47, 67)     ,S(44, 37)     ,S(-40, -41)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-11, 73)    ,S(-6, 52)     ,S(-19, 23)    ,S(-11, -45)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-87, 51)    ,S(-72, 46)    ,S(-20, 6)     ,S(45, -81)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-72, -31)   ,S(-93, 3)     ,S(-7, -41)    ,S(42, -163)   ,
	},
	{
		S(15, -232)   ,S(80, -106)   ,S(112, -88)   ,S(133, -66)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-5, -75)    ,S(117, 11)    ,S(162, -1)    ,S(212, -34)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(24, -8)     ,S(170, 34)    ,S(192, 35)    ,S(166, 27)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-33, 1)     ,S(103, 30)    ,S(117, 56)    ,S(87, 63)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-57, -28)   ,S(31, 26)     ,S(71, 51)     ,S(24, 78)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-80, -16)   ,S(-29, 12)    ,S(-3, 35)     ,S(-24, 59)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-13, -36)   ,S(-30, -5)    ,S(-39, 20)    ,S(-95, 36)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-19, -117)  ,S(-11, -60)   ,S(-49, -20)   ,S(-97, -31)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(101, 206), S(433, 633), S(451, 680), S(612, 1213), S(1300, 2343), };
constexpr PScore knightMob[9] = {S(-35, -121), S(-17, -43), S(-5, 2), S(3, 28), S(8, 38), S(14, 53), S(22, 51), S(32, 45), S(44, 20), };
constexpr PScore bishopMob[14] = {S(-58, -177), S(-29, -98), S(-14, -44), S(-7, -16), S(3, 6), S(8, 25), S(10, 38), S(7, 48), S(6, 59), S(9, 65), S(13, 60), S(33, 47), S(37, 53), S(55, 15), };
constexpr PScore rookMob[15] = {S(-28, -139), S(-35, -91), S(-25, -58), S(-25, -42), S(-24, -24), S(-25, -5), S(-23, 5), S(-18, 5), S(-14, 11), S(-6, 15), S(-6, 22), S(-1, 26), S(2, 28), S(17, 8), S(81, -27), };
constexpr PScore queenMob[28] = {S(-143, -444), S(-103, -463), S(-65, -378), S(-48, -291), S(-46, -198), S(-43, -142), S(-41, -108), S(-37, -90), S(-33, -70), S(-29, -59), S(-25, -51), S(-20, -48), S(-16, -44), S(-13, -42), S(-11, -42), S(-10, -44), S(-11, -45), S(-14, -45), S(-12, -50), S(-10, -61), S(1, -86), S(8, -108), S(3, -118), S(14, -145), S(-12, -149), S(-8, -177), S(-57, -129), S(-49, -120), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 888.77294921875;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.5794858932495117;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 292.1762390136719;
constexpr double KSBEG = 1;
constexpr double KSCEG = 0.39248931407928467;

constexpr PScore DAMPEN = S(static_cast<S16>(0.09197794646024704 * RESOLUTION), static_cast<S16>(0.844261884689331 * RESOLUTION));

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);