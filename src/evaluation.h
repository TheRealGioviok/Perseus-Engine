#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,
		S(236, 417)   ,S(212, 428)   ,S(167, 402)   ,S(205, 290)   ,S(231, 167)   ,S(192, 93)    ,S(0, 162)     ,S(6, 198)     ,
		S(108, 400)   ,S(132, 390)   ,S(126, 348)   ,S(138, 254)   ,S(182, 162)   ,S(225, 146)   ,S(166, 176)   ,S(116, 215)   ,
		S(122, 288)   ,S(122, 267)   ,S(122, 246)   ,S(122, 216)   ,S(146, 189)   ,S(142, 189)   ,S(86, 218)    ,S(83, 216)    ,
		S(125, 232)   ,S(118, 230)   ,S(121, 217)   ,S(116, 210)   ,S(117, 199)   ,S(106, 205)   ,S(75, 215)    ,S(66, 217)    ,
		S(137, 204)   ,S(151, 200)   ,S(129, 214)   ,S(120, 217)   ,S(107, 210)   ,S(95, 217)    ,S(64, 221)    ,S(65, 221)    ,
		S(137, 200)   ,S(168, 192)   ,S(153, 209)   ,S(108, 223)   ,S(94, 221)    ,S(82, 222)    ,S(62, 227)    ,S(65, 224)    ,
		S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,
	},
	{
		S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,
		S(-25, 255)   ,S(-48, 216)   ,S(199, 134)   ,S(236, 156)   ,S(229, 212)   ,S(203, 284)   ,S(179, 341)   ,S(226, 336)   ,
		S(130, 235)   ,S(161, 223)   ,S(234, 190)   ,S(157, 178)   ,S(146, 194)   ,S(138, 254)   ,S(119, 299)   ,S(107, 318)   ,
		S(105, 224)   ,S(104, 227)   ,S(145, 201)   ,S(140, 193)   ,S(130, 178)   ,S(117, 207)   ,S(113, 224)   ,S(109, 249)   ,
		S(97, 208)    ,S(100, 218)   ,S(119, 210)   ,S(121, 202)   ,S(118, 190)   ,S(114, 191)   ,S(99, 209)    ,S(99, 221)    ,
		S(111, 196)   ,S(123, 206)   ,S(116, 228)   ,S(128, 218)   ,S(116, 196)   ,S(111, 197)   ,S(107, 197)   ,S(103, 209)   ,
		S(115, 174)   ,S(142, 202)   ,S(142, 230)   ,S(108, 231)   ,S(110, 206)   ,S(103, 202)   ,S(103, 200)   ,S(102, 216)   ,
		S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,S(113, 205)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(328, 600)   ,S(359, 670)   ,S(386, 703)   ,S(513, 665)   ,S(507, 662)   ,S(401, 690)   ,S(473, 653)   ,S(347, 566)   ,
		S(492, 646)   ,S(515, 667)   ,S(555, 658)   ,S(593, 685)   ,S(583, 675)   ,S(578, 646)   ,S(520, 660)   ,S(536, 635)   ,
		S(465, 673)   ,S(530, 671)   ,S(552, 706)   ,S(562, 706)   ,S(572, 694)   ,S(552, 691)   ,S(522, 667)   ,S(532, 653)   ,
		S(515, 688)   ,S(544, 684)   ,S(568, 708)   ,S(577, 722)   ,S(575, 723)   ,S(562, 706)   ,S(547, 697)   ,S(556, 680)   ,
		S(514, 693)   ,S(537, 691)   ,S(536, 712)   ,S(543, 719)   ,S(557, 716)   ,S(551, 702)   ,S(562, 688)   ,S(541, 690)   ,
		S(473, 657)   ,S(488, 675)   ,S(507, 689)   ,S(506, 711)   ,S(519, 710)   ,S(501, 685)   ,S(503, 665)   ,S(483, 656)   ,
		S(455, 673)   ,S(454, 687)   ,S(475, 661)   ,S(486, 682)   ,S(494, 684)   ,S(486, 666)   ,S(458, 689)   ,S(459, 682)   ,
		S(436, 626)   ,S(443, 672)   ,S(465, 664)   ,S(473, 685)   ,S(472, 675)   ,S(467, 658)   ,S(466, 661)   ,S(432, 663)   ,
	},
	{
		S(357, 582)   ,S(454, 707)   ,S(394, 755)   ,S(509, 721)   ,S(466, 728)   ,S(342, 756)   ,S(354, 714)   ,S(271, 644)   ,
		S(531, 695)   ,S(492, 712)   ,S(584, 692)   ,S(570, 736)   ,S(553, 738)   ,S(524, 702)   ,S(480, 706)   ,S(474, 686)   ,
		S(503, 718)   ,S(486, 745)   ,S(555, 745)   ,S(552, 745)   ,S(538, 750)   ,S(532, 742)   ,S(499, 709)   ,S(467, 693)   ,
		S(528, 745)   ,S(530, 763)   ,S(551, 762)   ,S(546, 783)   ,S(542, 773)   ,S(540, 741)   ,S(526, 711)   ,S(508, 709)   ,
		S(515, 754)   ,S(543, 747)   ,S(530, 757)   ,S(533, 770)   ,S(522, 761)   ,S(517, 742)   ,S(511, 719)   ,S(502, 712)   ,
		S(480, 705)   ,S(489, 720)   ,S(496, 729)   ,S(502, 748)   ,S(502, 745)   ,S(495, 716)   ,S(490, 690)   ,S(478, 665)   ,
		S(466, 720)   ,S(462, 722)   ,S(472, 701)   ,S(483, 719)   ,S(483, 718)   ,S(473, 693)   ,S(468, 705)   ,S(456, 698)   ,
		S(430, 685)   ,S(464, 686)   ,S(467, 703)   ,S(467, 712)   ,S(474, 712)   ,S(471, 678)   ,S(472, 669)   ,S(441, 657)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(483, 765)   ,S(436, 758)   ,S(446, 750)   ,S(403, 764)   ,S(394, 750)   ,S(395, 747)   ,S(542, 733)   ,S(482, 753)   ,
		S(482, 757)   ,S(496, 758)   ,S(529, 745)   ,S(484, 747)   ,S(494, 737)   ,S(550, 717)   ,S(506, 736)   ,S(470, 725)   ,
		S(536, 753)   ,S(555, 749)   ,S(544, 749)   ,S(540, 746)   ,S(562, 726)   ,S(559, 734)   ,S(539, 728)   ,S(543, 732)   ,
		S(533, 753)   ,S(551, 745)   ,S(542, 753)   ,S(551, 757)   ,S(576, 740)   ,S(551, 719)   ,S(560, 735)   ,S(538, 729)   ,
		S(529, 734)   ,S(540, 739)   ,S(542, 747)   ,S(561, 746)   ,S(551, 738)   ,S(546, 729)   ,S(547, 714)   ,S(537, 723)   ,
		S(533, 726)   ,S(561, 732)   ,S(559, 743)   ,S(543, 738)   ,S(543, 738)   ,S(531, 732)   ,S(534, 725)   ,S(523, 727)   ,
		S(551, 717)   ,S(576, 716)   ,S(550, 727)   ,S(534, 731)   ,S(522, 734)   ,S(529, 721)   ,S(527, 711)   ,S(535, 715)   ,
		S(547, 720)   ,S(510, 733)   ,S(522, 738)   ,S(515, 735)   ,S(510, 736)   ,S(513, 742)   ,S(523, 740)   ,S(539, 718)   ,
	},
	{
		S(466, 770)   ,S(492, 762)   ,S(381, 778)   ,S(407, 784)   ,S(388, 805)   ,S(386, 795)   ,S(450, 793)   ,S(464, 801)   ,
		S(481, 767)   ,S(473, 772)   ,S(510, 761)   ,S(483, 774)   ,S(474, 784)   ,S(509, 777)   ,S(490, 790)   ,S(460, 790)   ,
		S(511, 792)   ,S(510, 787)   ,S(518, 792)   ,S(538, 769)   ,S(521, 775)   ,S(532, 778)   ,S(518, 784)   ,S(523, 775)   ,
		S(506, 786)   ,S(530, 789)   ,S(528, 780)   ,S(534, 793)   ,S(539, 789)   ,S(519, 770)   ,S(532, 773)   ,S(505, 782)   ,
		S(518, 764)   ,S(522, 770)   ,S(518, 783)   ,S(536, 785)   ,S(524, 784)   ,S(523, 777)   ,S(525, 757)   ,S(513, 758)   ,
		S(521, 768)   ,S(523, 765)   ,S(521, 777)   ,S(520, 779)   ,S(522, 778)   ,S(525, 770)   ,S(540, 757)   ,S(523, 753)   ,
		S(524, 728)   ,S(536, 746)   ,S(523, 754)   ,S(511, 768)   ,S(512, 768)   ,S(529, 752)   ,S(534, 734)   ,S(538, 745)   ,
		S(525, 732)   ,S(500, 753)   ,S(505, 766)   ,S(498, 769)   ,S(505, 764)   ,S(512, 770)   ,S(530, 766)   ,S(545, 744)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(738, 1256)  ,S(708, 1277)  ,S(691, 1283)  ,S(659, 1289)  ,S(670, 1281)  ,S(724, 1256)  ,S(714, 1257)  ,S(694, 1271)  ,
		S(700, 1253)  ,S(698, 1261)  ,S(707, 1257)  ,S(696, 1264)  ,S(691, 1259)  ,S(700, 1243)  ,S(669, 1247)  ,S(674, 1242)  ,
		S(686, 1248)  ,S(746, 1222)  ,S(714, 1246)  ,S(730, 1223)  ,S(741, 1213)  ,S(709, 1228)  ,S(759, 1200)  ,S(688, 1230)  ,
		S(672, 1247)  ,S(688, 1243)  ,S(708, 1238)  ,S(710, 1235)  ,S(709, 1225)  ,S(698, 1225)  ,S(711, 1215)  ,S(690, 1220)  ,
		S(636, 1234)  ,S(667, 1240)  ,S(639, 1256)  ,S(640, 1248)  ,S(644, 1234)  ,S(650, 1233)  ,S(659, 1230)  ,S(641, 1222)  ,
		S(618, 1199)  ,S(661, 1206)  ,S(641, 1215)  ,S(644, 1212)  ,S(647, 1203)  ,S(649, 1204)  ,S(667, 1201)  ,S(641, 1189)  ,
		S(583, 1207)  ,S(638, 1195)  ,S(651, 1203)  ,S(646, 1203)  ,S(653, 1197)  ,S(660, 1190)  ,S(671, 1178)  ,S(622, 1193)  ,
		S(618, 1205)  ,S(637, 1211)  ,S(665, 1210)  ,S(663, 1200)  ,S(663, 1193)  ,S(673, 1194)  ,S(678, 1191)  ,S(654, 1191)  ,
	},
	{
		S(696, 1327)  ,S(696, 1331)  ,S(701, 1338)  ,S(641, 1342)  ,S(664, 1327)  ,S(644, 1343)  ,S(679, 1330)  ,S(686, 1325)  ,
		S(667, 1308)  ,S(679, 1312)  ,S(710, 1303)  ,S(668, 1330)  ,S(694, 1314)  ,S(674, 1318)  ,S(650, 1327)  ,S(660, 1316)  ,
		S(685, 1293)  ,S(761, 1264)  ,S(741, 1282)  ,S(730, 1272)  ,S(726, 1271)  ,S(685, 1296)  ,S(710, 1279)  ,S(653, 1303)  ,
		S(675, 1292)  ,S(703, 1287)  ,S(708, 1287)  ,S(700, 1287)  ,S(715, 1274)  ,S(685, 1285)  ,S(676, 1284)  ,S(653, 1290)  ,
		S(631, 1280)  ,S(668, 1295)  ,S(647, 1302)  ,S(639, 1292)  ,S(648, 1281)  ,S(633, 1292)  ,S(631, 1294)  ,S(630, 1275)  ,
		S(634, 1235)  ,S(674, 1263)  ,S(652, 1266)  ,S(645, 1260)  ,S(651, 1248)  ,S(631, 1259)  ,S(640, 1263)  ,S(624, 1251)  ,
		S(569, 1252)  ,S(667, 1238)  ,S(663, 1245)  ,S(649, 1249)  ,S(654, 1241)  ,S(640, 1249)  ,S(639, 1242)  ,S(605, 1252)  ,
		S(633, 1230)  ,S(653, 1255)  ,S(665, 1262)  ,S(659, 1248)  ,S(663, 1241)  ,S(652, 1251)  ,S(645, 1251)  ,S(648, 1247)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1381, 2123) ,S(1402, 2142) ,S(1384, 2166) ,S(1360, 2218) ,S(1368, 2213) ,S(1420, 2182) ,S(1399, 2155) ,S(1401, 2128) ,
		S(1381, 2145) ,S(1323, 2200) ,S(1365, 2182) ,S(1305, 2249) ,S(1302, 2282) ,S(1442, 2175) ,S(1360, 2169) ,S(1380, 2138) ,
		S(1378, 2163) ,S(1389, 2128) ,S(1374, 2156) ,S(1378, 2173) ,S(1393, 2198) ,S(1374, 2227) ,S(1419, 2139) ,S(1426, 2146) ,
		S(1391, 2141) ,S(1366, 2201) ,S(1364, 2179) ,S(1354, 2231) ,S(1369, 2219) ,S(1398, 2189) ,S(1427, 2179) ,S(1418, 2154) ,
		S(1379, 2138) ,S(1382, 2195) ,S(1364, 2214) ,S(1372, 2240) ,S(1370, 2214) ,S(1393, 2197) ,S(1411, 2157) ,S(1413, 2138) ,
		S(1369, 2134) ,S(1396, 2144) ,S(1395, 2170) ,S(1392, 2156) ,S(1391, 2148) ,S(1404, 2152) ,S(1419, 2122) ,S(1419, 2107) ,
		S(1354, 2103) ,S(1391, 2094) ,S(1431, 2040) ,S(1421, 2105) ,S(1410, 2101) ,S(1426, 2077) ,S(1431, 2072) ,S(1430, 2076) ,
		S(1377, 2068) ,S(1401, 2043) ,S(1404, 2045) ,S(1411, 2083) ,S(1418, 2085) ,S(1413, 2062) ,S(1403, 2103) ,S(1413, 2051) ,
	},
	{
		S(1401, 2262) ,S(1423, 2286) ,S(1401, 2312) ,S(1350, 2308) ,S(1363, 2284) ,S(1354, 2277) ,S(1366, 2250) ,S(1329, 2261) ,
		S(1399, 2284) ,S(1335, 2344) ,S(1435, 2291) ,S(1285, 2362) ,S(1293, 2314) ,S(1348, 2248) ,S(1291, 2287) ,S(1354, 2232) ,
		S(1358, 2344) ,S(1355, 2347) ,S(1354, 2337) ,S(1366, 2292) ,S(1356, 2260) ,S(1346, 2242) ,S(1357, 2221) ,S(1354, 2231) ,
		S(1390, 2309) ,S(1386, 2342) ,S(1369, 2340) ,S(1334, 2339) ,S(1336, 2312) ,S(1355, 2233) ,S(1362, 2254) ,S(1366, 2217) ,
		S(1395, 2276) ,S(1387, 2288) ,S(1375, 2307) ,S(1352, 2317) ,S(1351, 2321) ,S(1367, 2251) ,S(1382, 2235) ,S(1377, 2195) ,
		S(1399, 2203) ,S(1402, 2228) ,S(1386, 2265) ,S(1379, 2233) ,S(1377, 2235) ,S(1385, 2237) ,S(1398, 2199) ,S(1385, 2171) ,
		S(1380, 2191) ,S(1410, 2135) ,S(1420, 2131) ,S(1400, 2185) ,S(1400, 2195) ,S(1406, 2152) ,S(1398, 2169) ,S(1394, 2163) ,
		S(1390, 2127) ,S(1384, 2131) ,S(1390, 2144) ,S(1411, 2150) ,S(1412, 2188) ,S(1407, 2158) ,S(1398, 2160) ,S(1393, 2162) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-29, -197)  ,S(71, -92)    ,S(75, -73)    ,S(102, -54)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-19, -36)   ,S(94, 22)     ,S(139, 13)    ,S(145, -3)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(41, 2)      ,S(120, 46)    ,S(147, 51)    ,S(130, 44)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-27, 14)    ,S(79, 44)     ,S(92, 62)     ,S(71, 71)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-32, -22)   ,S(35, 29)     ,S(55, 53)     ,S(9, 72)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-45, -24)   ,S(-25, 12)    ,S(-9, 34)     ,S(-27, 54)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(19, -63)    ,S(-28, -15)   ,S(-58, 18)    ,S(-98, 26)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(25, -156)   ,S(2, -74)     ,S(-48, -34)   ,S(-68, -52)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(7, -191)    ,S(29, -4)     ,S(66, -36)    ,S(90, -45)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-42, -36)   ,S(44, 67)     ,S(140, 8)     ,S(162, 0)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(22, 13)     ,S(190, 50)    ,S(256, 36)    ,S(152, 37)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-50, 17)    ,S(99, 44)     ,S(124, 66)    ,S(84, 75)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-63, -13)   ,S(38, 27)     ,S(44, 61)     ,S(31, 79)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-36, -15)   ,S(-17, 16)    ,S(-1, 45)     ,S(-13, 65)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(28, -54)    ,S(-16, -3)    ,S(-55, 32)    ,S(-82, 36)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(31, -142)   ,S(-3, -52)    ,S(-52, -18)   ,S(-61, -47)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(113, 205), S(469, 659), S(489, 707), S(647, 1218), S(1377, 2166), };
constexpr PScore knightMob[9] = {S(-45, -165), S(-25, -90), S(-15, -41), S(-6, -11), S(1, 5), S(8, 22), S(16, 25), S(27, 20), S(41, -7), };
constexpr PScore bishopMob[14] = {S(-61, -203), S(-33, -127), S(-17, -78), S(-8, -44), S(4, -24), S(10, -1), S(14, 13), S(14, 22), S(16, 31), S(24, 31), S(32, 26), S(56, 10), S(62, 21), S(85, -28), };
constexpr PScore rookMob[15] = {S(-25, -153), S(-34, -109), S(-26, -72), S(-24, -48), S(-24, -29), S(-25, -9), S(-22, 2), S(-16, 3), S(-11, 10), S(-3, 16), S(-4, 24), S(3, 29), S(3, 33), S(21, 14), S(83, -21), };
constexpr PScore queenMob[28] = {S(-153, -392), S(-112, -408), S(-71, -326), S(-53, -227), S(-50, -132), S(-47, -72), S(-43, -34), S(-38, -11), S(-34, 11), S(-29, 25), S(-24, 35), S(-19, 41), S(-14, 44), S(-11, 49), S(-8, 48), S(-6, 48), S(-6, 48), S(-7, 49), S(-5, 42), S(2, 28), S(13, 6), S(24, -18), S(25, -33), S(34, -58), S(2, -59), S(16, -90), S(-23, -58), S(-28, -24), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 812.4970092773438;
constexpr double KSBMG = 1;
 constexpr double KSCMG = -2.9183077812194824;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 289.952880859375;
constexpr double KSBEG = 1;
constexpr double KSCEG = -0.04545667767524719;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);