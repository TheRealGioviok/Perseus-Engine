#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,
		S(233, 418)   ,S(209, 429)   ,S(161, 403)   ,S(201, 288)   ,S(229, 161)   ,S(182, 90)    ,S(-2, 159)    ,S(-4, 201)    ,
		S(101, 399)   ,S(128, 390)   ,S(120, 349)   ,S(131, 253)   ,S(178, 157)   ,S(219, 143)   ,S(164, 174)   ,S(110, 214)   ,
		S(118, 288)   ,S(119, 268)   ,S(116, 245)   ,S(116, 216)   ,S(142, 185)   ,S(139, 186)   ,S(85, 217)    ,S(81, 215)    ,
		S(123, 231)   ,S(116, 231)   ,S(118, 217)   ,S(113, 209)   ,S(115, 197)   ,S(104, 204)   ,S(75, 215)    ,S(64, 217)    ,
		S(133, 203)   ,S(150, 199)   ,S(123, 213)   ,S(116, 216)   ,S(105, 211)   ,S(92, 217)    ,S(63, 222)    ,S(62, 221)    ,
		S(133, 198)   ,S(164, 192)   ,S(146, 209)   ,S(102, 223)   ,S(88, 221)    ,S(77, 222)    ,S(60, 226)    ,S(61, 223)    ,
		S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,
	},
	{
		S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,
		S(-36, 257)   ,S(-53, 216)   ,S(188, 131)   ,S(232, 153)   ,S(224, 209)   ,S(199, 283)   ,S(177, 340)   ,S(225, 334)   ,
		S(122, 234)   ,S(160, 221)   ,S(226, 188)   ,S(151, 175)   ,S(137, 193)   ,S(131, 253)   ,S(114, 298)   ,S(101, 316)   ,
		S(100, 224)   ,S(103, 226)   ,S(139, 200)   ,S(134, 194)   ,S(123, 178)   ,S(111, 205)   ,S(109, 223)   ,S(105, 247)   ,
		S(92, 207)    ,S(99, 217)    ,S(117, 210)   ,S(117, 199)   ,S(115, 188)   ,S(109, 191)   ,S(97, 208)    ,S(96, 219)    ,
		S(106, 195)   ,S(121, 205)   ,S(112, 227)   ,S(122, 217)   ,S(111, 195)   ,S(107, 197)   ,S(105, 199)   ,S(100, 207)   ,
		S(109, 174)   ,S(139, 201)   ,S(135, 230)   ,S(101, 230)   ,S(102, 206)   ,S(96, 203)    ,S(100, 200)   ,S(97, 214)    ,
		S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,S(109, 204)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(324, 590)   ,S(355, 667)   ,S(385, 701)   ,S(510, 665)   ,S(505, 661)   ,S(397, 688)   ,S(469, 648)   ,S(344, 556)   ,
		S(488, 639)   ,S(511, 664)   ,S(552, 661)   ,S(589, 688)   ,S(580, 677)   ,S(574, 649)   ,S(515, 656)   ,S(532, 628)   ,
		S(460, 672)   ,S(528, 670)   ,S(552, 709)   ,S(558, 708)   ,S(570, 695)   ,S(554, 694)   ,S(518, 666)   ,S(529, 645)   ,
		S(510, 684)   ,S(541, 684)   ,S(567, 710)   ,S(576, 723)   ,S(574, 725)   ,S(561, 710)   ,S(544, 698)   ,S(550, 675)   ,
		S(511, 689)   ,S(533, 692)   ,S(536, 715)   ,S(543, 721)   ,S(557, 720)   ,S(550, 706)   ,S(559, 690)   ,S(536, 686)   ,
		S(468, 653)   ,S(485, 675)   ,S(501, 691)   ,S(504, 714)   ,S(516, 713)   ,S(497, 688)   ,S(501, 666)   ,S(480, 650)   ,
		S(451, 666)   ,S(450, 679)   ,S(470, 662)   ,S(480, 682)   ,S(490, 683)   ,S(482, 667)   ,S(454, 684)   ,S(455, 675)   ,
		S(430, 619)   ,S(437, 665)   ,S(460, 660)   ,S(467, 681)   ,S(466, 672)   ,S(461, 656)   ,S(462, 653)   ,S(428, 652)   ,
	},
	{
		S(351, 577)   ,S(448, 703)   ,S(389, 751)   ,S(504, 719)   ,S(462, 725)   ,S(341, 753)   ,S(349, 709)   ,S(268, 635)   ,
		S(526, 689)   ,S(485, 706)   ,S(579, 694)   ,S(564, 738)   ,S(547, 739)   ,S(521, 703)   ,S(477, 702)   ,S(471, 679)   ,
		S(497, 712)   ,S(481, 744)   ,S(554, 748)   ,S(548, 746)   ,S(533, 752)   ,S(529, 747)   ,S(494, 709)   ,S(462, 689)   ,
		S(521, 740)   ,S(525, 762)   ,S(547, 764)   ,S(544, 786)   ,S(541, 773)   ,S(538, 744)   ,S(522, 711)   ,S(502, 704)   ,
		S(509, 748)   ,S(537, 746)   ,S(528, 758)   ,S(533, 773)   ,S(522, 763)   ,S(517, 746)   ,S(508, 721)   ,S(499, 707)   ,
		S(473, 698)   ,S(485, 718)   ,S(488, 726)   ,S(498, 751)   ,S(499, 749)   ,S(491, 723)   ,S(487, 691)   ,S(476, 659)   ,
		S(461, 715)   ,S(456, 715)   ,S(466, 700)   ,S(476, 719)   ,S(479, 719)   ,S(468, 693)   ,S(463, 698)   ,S(450, 690)   ,
		S(424, 674)   ,S(459, 679)   ,S(461, 702)   ,S(459, 708)   ,S(467, 707)   ,S(464, 676)   ,S(468, 660)   ,S(435, 649)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(474, 760)   ,S(427, 753)   ,S(435, 742)   ,S(393, 756)   ,S(379, 742)   ,S(382, 739)   ,S(524, 727)   ,S(470, 747)   ,
		S(470, 754)   ,S(484, 753)   ,S(516, 736)   ,S(469, 737)   ,S(481, 726)   ,S(536, 703)   ,S(491, 727)   ,S(458, 715)   ,
		S(523, 749)   ,S(542, 741)   ,S(531, 740)   ,S(525, 735)   ,S(547, 711)   ,S(547, 719)   ,S(524, 714)   ,S(530, 726)   ,
		S(520, 747)   ,S(537, 735)   ,S(530, 740)   ,S(537, 743)   ,S(562, 725)   ,S(536, 707)   ,S(548, 722)   ,S(523, 720)   ,
		S(517, 728)   ,S(529, 730)   ,S(531, 735)   ,S(551, 732)   ,S(541, 726)   ,S(535, 719)   ,S(538, 704)   ,S(523, 716)   ,
		S(520, 717)   ,S(549, 720)   ,S(545, 727)   ,S(532, 723)   ,S(533, 726)   ,S(519, 721)   ,S(524, 716)   ,S(510, 720)   ,
		S(534, 705)   ,S(563, 702)   ,S(535, 711)   ,S(520, 719)   ,S(507, 722)   ,S(514, 710)   ,S(514, 701)   ,S(519, 709)   ,
		S(533, 708)   ,S(495, 720)   ,S(508, 727)   ,S(501, 720)   ,S(496, 723)   ,S(497, 732)   ,S(508, 731)   ,S(524, 711)   ,
	},
	{
		S(451, 766)   ,S(477, 756)   ,S(364, 768)   ,S(392, 776)   ,S(373, 797)   ,S(376, 788)   ,S(437, 787)   ,S(453, 799)   ,
		S(470, 757)   ,S(454, 762)   ,S(494, 749)   ,S(465, 763)   ,S(458, 774)   ,S(493, 768)   ,S(476, 786)   ,S(446, 785)   ,
		S(494, 782)   ,S(491, 775)   ,S(503, 781)   ,S(520, 754)   ,S(501, 762)   ,S(517, 768)   ,S(503, 777)   ,S(509, 773)   ,
		S(488, 774)   ,S(512, 774)   ,S(513, 766)   ,S(519, 777)   ,S(522, 774)   ,S(502, 758)   ,S(517, 764)   ,S(489, 776)   ,
		S(501, 754)   ,S(510, 759)   ,S(505, 770)   ,S(523, 771)   ,S(512, 769)   ,S(510, 767)   ,S(510, 750)   ,S(498, 754)   ,
		S(506, 757)   ,S(509, 755)   ,S(506, 763)   ,S(506, 767)   ,S(509, 765)   ,S(510, 759)   ,S(526, 748)   ,S(506, 746)   ,
		S(506, 718)   ,S(521, 734)   ,S(505, 743)   ,S(494, 758)   ,S(495, 756)   ,S(512, 741)   ,S(518, 723)   ,S(521, 739)   ,
		S(508, 722)   ,S(484, 741)   ,S(488, 759)   ,S(481, 755)   ,S(489, 751)   ,S(493, 759)   ,S(513, 753)   ,S(528, 733)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(733, 1256)  ,S(706, 1277)  ,S(684, 1284)  ,S(657, 1287)  ,S(666, 1280)  ,S(725, 1254)  ,S(708, 1257)  ,S(686, 1273)  ,
		S(697, 1255)  ,S(695, 1262)  ,S(702, 1259)  ,S(692, 1265)  ,S(689, 1259)  ,S(701, 1243)  ,S(665, 1250)  ,S(667, 1244)  ,
		S(680, 1249)  ,S(740, 1225)  ,S(710, 1246)  ,S(721, 1224)  ,S(734, 1214)  ,S(705, 1229)  ,S(751, 1203)  ,S(680, 1230)  ,
		S(666, 1246)  ,S(682, 1243)  ,S(703, 1237)  ,S(705, 1235)  ,S(704, 1224)  ,S(691, 1226)  ,S(704, 1217)  ,S(681, 1220)  ,
		S(631, 1231)  ,S(661, 1239)  ,S(636, 1252)  ,S(638, 1246)  ,S(641, 1232)  ,S(645, 1231)  ,S(653, 1230)  ,S(634, 1221)  ,
		S(613, 1195)  ,S(656, 1204)  ,S(633, 1213)  ,S(637, 1210)  ,S(641, 1202)  ,S(642, 1203)  ,S(659, 1200)  ,S(635, 1187)  ,
		S(573, 1202)  ,S(628, 1192)  ,S(642, 1199)  ,S(637, 1199)  ,S(643, 1194)  ,S(650, 1187)  ,S(662, 1176)  ,S(613, 1187)  ,
		S(610, 1199)  ,S(628, 1207)  ,S(656, 1206)  ,S(655, 1196)  ,S(655, 1189)  ,S(664, 1191)  ,S(669, 1187)  ,S(646, 1186)  ,
	},
	{
		S(689, 1326)  ,S(690, 1330)  ,S(696, 1336)  ,S(633, 1340)  ,S(658, 1327)  ,S(636, 1343)  ,S(674, 1330)  ,S(679, 1324)  ,
		S(660, 1308)  ,S(671, 1314)  ,S(705, 1303)  ,S(660, 1330)  ,S(688, 1315)  ,S(668, 1319)  ,S(644, 1328)  ,S(654, 1317)  ,
		S(672, 1293)  ,S(751, 1266)  ,S(733, 1282)  ,S(721, 1272)  ,S(716, 1271)  ,S(678, 1296)  ,S(702, 1281)  ,S(645, 1303)  ,
		S(664, 1290)  ,S(693, 1287)  ,S(698, 1285)  ,S(692, 1285)  ,S(708, 1274)  ,S(678, 1285)  ,S(668, 1284)  ,S(646, 1290)  ,
		S(622, 1276)  ,S(659, 1292)  ,S(639, 1297)  ,S(635, 1289)  ,S(645, 1280)  ,S(627, 1291)  ,S(625, 1294)  ,S(623, 1274)  ,
		S(625, 1232)  ,S(664, 1259)  ,S(642, 1263)  ,S(637, 1257)  ,S(643, 1249)  ,S(623, 1259)  ,S(631, 1261)  ,S(617, 1248)  ,
		S(558, 1244)  ,S(657, 1232)  ,S(651, 1240)  ,S(638, 1245)  ,S(641, 1238)  ,S(630, 1246)  ,S(629, 1239)  ,S(596, 1247)  ,
		S(623, 1220)  ,S(643, 1249)  ,S(653, 1258)  ,S(650, 1242)  ,S(652, 1236)  ,S(643, 1248)  ,S(636, 1247)  ,S(639, 1241)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1364, 2171) ,S(1388, 2187) ,S(1365, 2215) ,S(1338, 2270) ,S(1352, 2259) ,S(1414, 2220) ,S(1379, 2206) ,S(1387, 2168) ,
		S(1365, 2195) ,S(1308, 2248) ,S(1350, 2231) ,S(1290, 2300) ,S(1285, 2335) ,S(1430, 2219) ,S(1343, 2219) ,S(1365, 2180) ,
		S(1361, 2210) ,S(1373, 2175) ,S(1359, 2204) ,S(1359, 2226) ,S(1378, 2245) ,S(1357, 2275) ,S(1401, 2185) ,S(1406, 2190) ,
		S(1374, 2185) ,S(1348, 2245) ,S(1346, 2229) ,S(1337, 2278) ,S(1351, 2267) ,S(1381, 2235) ,S(1408, 2223) ,S(1399, 2196) ,
		S(1363, 2181) ,S(1366, 2239) ,S(1348, 2263) ,S(1358, 2286) ,S(1357, 2261) ,S(1376, 2244) ,S(1395, 2201) ,S(1395, 2184) ,
		S(1353, 2176) ,S(1379, 2182) ,S(1376, 2213) ,S(1376, 2199) ,S(1377, 2192) ,S(1386, 2200) ,S(1402, 2168) ,S(1402, 2153) ,
		S(1334, 2142) ,S(1374, 2132) ,S(1412, 2079) ,S(1403, 2145) ,S(1391, 2143) ,S(1407, 2121) ,S(1413, 2114) ,S(1411, 2118) ,
		S(1357, 2106) ,S(1383, 2080) ,S(1385, 2084) ,S(1393, 2121) ,S(1401, 2123) ,S(1394, 2103) ,S(1385, 2145) ,S(1395, 2093) ,
	},
	{
		S(1378, 2310) ,S(1404, 2330) ,S(1386, 2352) ,S(1332, 2350) ,S(1344, 2329) ,S(1337, 2319) ,S(1348, 2294) ,S(1312, 2305) ,
		S(1380, 2326) ,S(1315, 2391) ,S(1417, 2332) ,S(1266, 2407) ,S(1274, 2362) ,S(1330, 2298) ,S(1273, 2336) ,S(1336, 2277) ,
		S(1336, 2384) ,S(1331, 2390) ,S(1334, 2379) ,S(1344, 2338) ,S(1336, 2307) ,S(1328, 2289) ,S(1338, 2271) ,S(1335, 2276) ,
		S(1369, 2345) ,S(1363, 2380) ,S(1348, 2382) ,S(1314, 2384) ,S(1317, 2358) ,S(1337, 2281) ,S(1342, 2299) ,S(1348, 2259) ,
		S(1374, 2311) ,S(1367, 2324) ,S(1354, 2346) ,S(1336, 2361) ,S(1336, 2366) ,S(1350, 2301) ,S(1364, 2284) ,S(1359, 2241) ,
		S(1380, 2239) ,S(1382, 2262) ,S(1362, 2302) ,S(1360, 2273) ,S(1360, 2281) ,S(1364, 2284) ,S(1378, 2244) ,S(1367, 2218) ,
		S(1358, 2223) ,S(1389, 2169) ,S(1398, 2166) ,S(1379, 2223) ,S(1379, 2237) ,S(1384, 2196) ,S(1377, 2212) ,S(1372, 2205) ,
		S(1365, 2160) ,S(1363, 2165) ,S(1368, 2181) ,S(1390, 2187) ,S(1391, 2223) ,S(1384, 2198) ,S(1377, 2200) ,S(1373, 2203) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-29, -191)  ,S(81, -92)    ,S(84, -70)    ,S(107, -50)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-9, -33)    ,S(107, 27)    ,S(153, 19)    ,S(155, 3)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(42, 7)      ,S(132, 51)    ,S(159, 56)    ,S(139, 49)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-29, 18)    ,S(79, 48)     ,S(94, 65)     ,S(73, 73)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-29, -21)   ,S(33, 30)     ,S(54, 54)     ,S(11, 71)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-44, -26)   ,S(-27, 8)     ,S(-12, 32)    ,S(-30, 51)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(19, -65)    ,S(-29, -19)   ,S(-58, 14)    ,S(-99, 23)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(23, -156)   ,S(-1, -78)    ,S(-51, -35)   ,S(-71, -55)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(11, -188)   ,S(26, 3)      ,S(71, -32)    ,S(93, -39)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-38, -31)   ,S(54, 70)     ,S(152, 12)    ,S(171, 6)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(19, 18)     ,S(192, 55)    ,S(257, 41)    ,S(158, 42)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-58, 21)    ,S(90, 48)     ,S(119, 69)    ,S(82, 78)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-61, -12)   ,S(32, 28)     ,S(42, 61)     ,S(34, 80)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-34, -15)   ,S(-18, 14)    ,S(-4, 43)     ,S(-11, 61)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(30, -54)    ,S(-16, -6)    ,S(-55, 29)    ,S(-81, 33)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(32, -140)   ,S(-4, -54)    ,S(-52, -18)   ,S(-61, -50)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(109, 204), S(465, 658), S(475, 696), S(638, 1216), S(1358, 2209), };
constexpr PScore knightMob[9] = {S(-42, -156), S(-22, -80), S(-11, -32), S(-4, -5), S(2, 8), S(6, 22), S(14, 24), S(24, 19), S(35, -5), };
constexpr PScore bishopMob[14] = {S(-60, -203), S(-32, -130), S(-16, -78), S(-9, -48), S(3, -26), S(7, -5), S(11, 10), S(12, 20), S(14, 30), S(21, 33), S(30, 27), S(56, 12), S(67, 19), S(89, -25), };
constexpr PScore rookMob[15] = {S(-25, -142), S(-33, -98), S(-24, -62), S(-23, -43), S(-23, -23), S(-24, -6), S(-21, 5), S(-16, 6), S(-12, 13), S(-4, 19), S(-3, 26), S(2, 31), S(4, 35), S(21, 16), S(86, -19), };
constexpr PScore queenMob[28] = {S(-147, -388), S(-107, -401), S(-69, -314), S(-49, -227), S(-46, -130), S(-44, -71), S(-39, -32), S(-36, -13), S(-33, 11), S(-28, 25), S(-23, 34), S(-18, 40), S(-14, 44), S(-11, 48), S(-8, 49), S(-6, 48), S(-6, 46), S(-8, 47), S(-4, 40), S(0, 29), S(14, 3), S(23, -21), S(22, -36), S(36, -65), S(11, -69), S(17, -98), S(-15, -71), S(-28, -33), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 830.890869140625;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.920008897781372;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 205.7107391357422;
constexpr double KSBEG = 1;
constexpr double KSCEG = -0.43312424421310425;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);