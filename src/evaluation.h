#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,
		S(232, 419)   ,S(208, 429)   ,S(160, 402)   ,S(201, 287)   ,S(230, 161)   ,S(184, 90)    ,S(-1, 160)    ,S(0, 200)     ,
		S(101, 399)   ,S(127, 391)   ,S(120, 348)   ,S(130, 253)   ,S(179, 157)   ,S(217, 143)   ,S(164, 174)   ,S(109, 214)   ,
		S(118, 287)   ,S(118, 267)   ,S(115, 245)   ,S(116, 216)   ,S(142, 186)   ,S(138, 186)   ,S(85, 216)    ,S(80, 216)    ,
		S(122, 231)   ,S(116, 230)   ,S(118, 217)   ,S(113, 209)   ,S(114, 196)   ,S(104, 204)   ,S(75, 214)    ,S(64, 217)    ,
		S(134, 203)   ,S(149, 199)   ,S(124, 213)   ,S(116, 216)   ,S(104, 210)   ,S(91, 217)    ,S(63, 221)    ,S(62, 221)    ,
		S(132, 199)   ,S(165, 192)   ,S(145, 209)   ,S(101, 223)   ,S(88, 220)    ,S(77, 222)    ,S(60, 226)    ,S(61, 223)    ,
		S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,
	},
	{
		S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,
		S(-33, 256)   ,S(-52, 216)   ,S(189, 132)   ,S(230, 153)   ,S(223, 209)   ,S(198, 282)   ,S(175, 341)   ,S(225, 335)   ,
		S(122, 234)   ,S(159, 221)   ,S(225, 189)   ,S(151, 176)   ,S(137, 194)   ,S(130, 253)   ,S(114, 298)   ,S(101, 316)   ,
		S(99, 224)    ,S(102, 227)   ,S(139, 201)   ,S(134, 194)   ,S(123, 177)   ,S(111, 205)   ,S(109, 223)   ,S(104, 247)   ,
		S(93, 208)    ,S(98, 216)    ,S(117, 210)   ,S(116, 199)   ,S(114, 188)   ,S(109, 190)   ,S(97, 208)    ,S(96, 219)    ,
		S(106, 194)   ,S(121, 205)   ,S(112, 227)   ,S(123, 218)   ,S(111, 196)   ,S(106, 197)   ,S(104, 199)   ,S(100, 208)   ,
		S(109, 174)   ,S(139, 201)   ,S(135, 230)   ,S(100, 231)   ,S(102, 205)   ,S(96, 203)    ,S(99, 200)    ,S(97, 214)    ,
		S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,S(108, 204)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(325, 580)   ,S(354, 656)   ,S(385, 690)   ,S(510, 653)   ,S(505, 649)   ,S(399, 677)   ,S(470, 637)   ,S(345, 545)   ,
		S(489, 629)   ,S(512, 653)   ,S(552, 650)   ,S(590, 677)   ,S(580, 666)   ,S(576, 637)   ,S(516, 645)   ,S(533, 617)   ,
		S(461, 660)   ,S(529, 659)   ,S(553, 697)   ,S(559, 697)   ,S(570, 685)   ,S(555, 683)   ,S(520, 655)   ,S(529, 634)   ,
		S(510, 672)   ,S(542, 672)   ,S(568, 698)   ,S(576, 712)   ,S(575, 714)   ,S(561, 699)   ,S(544, 686)   ,S(551, 664)   ,
		S(511, 678)   ,S(534, 681)   ,S(537, 704)   ,S(544, 710)   ,S(558, 708)   ,S(550, 694)   ,S(559, 679)   ,S(538, 675)   ,
		S(469, 641)   ,S(486, 663)   ,S(502, 680)   ,S(504, 703)   ,S(517, 702)   ,S(498, 677)   ,S(502, 655)   ,S(480, 639)   ,
		S(453, 655)   ,S(451, 668)   ,S(472, 651)   ,S(480, 670)   ,S(491, 672)   ,S(483, 655)   ,S(454, 673)   ,S(456, 664)   ,
		S(430, 607)   ,S(438, 654)   ,S(461, 649)   ,S(468, 670)   ,S(466, 661)   ,S(462, 644)   ,S(463, 642)   ,S(428, 641)   ,
	},
	{
		S(352, 565)   ,S(450, 692)   ,S(391, 740)   ,S(505, 708)   ,S(464, 714)   ,S(342, 742)   ,S(350, 698)   ,S(269, 624)   ,
		S(526, 678)   ,S(487, 695)   ,S(581, 683)   ,S(565, 726)   ,S(547, 728)   ,S(522, 692)   ,S(478, 691)   ,S(472, 666)   ,
		S(497, 701)   ,S(481, 733)   ,S(556, 738)   ,S(549, 736)   ,S(533, 740)   ,S(529, 734)   ,S(495, 697)   ,S(462, 677)   ,
		S(520, 729)   ,S(525, 751)   ,S(548, 753)   ,S(545, 775)   ,S(542, 762)   ,S(539, 732)   ,S(522, 701)   ,S(502, 692)   ,
		S(509, 736)   ,S(538, 735)   ,S(528, 747)   ,S(533, 762)   ,S(522, 752)   ,S(518, 735)   ,S(508, 710)   ,S(499, 696)   ,
		S(474, 687)   ,S(486, 708)   ,S(489, 716)   ,S(498, 739)   ,S(500, 738)   ,S(492, 711)   ,S(488, 679)   ,S(476, 648)   ,
		S(461, 704)   ,S(457, 703)   ,S(466, 688)   ,S(476, 708)   ,S(480, 708)   ,S(469, 682)   ,S(464, 687)   ,S(451, 679)   ,
		S(424, 662)   ,S(459, 668)   ,S(461, 690)   ,S(460, 697)   ,S(468, 695)   ,S(465, 664)   ,S(468, 649)   ,S(436, 638)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(474, 750)   ,S(427, 743)   ,S(435, 733)   ,S(392, 746)   ,S(380, 733)   ,S(383, 730)   ,S(523, 717)   ,S(470, 737)   ,
		S(470, 744)   ,S(484, 743)   ,S(515, 727)   ,S(470, 728)   ,S(481, 716)   ,S(538, 693)   ,S(492, 716)   ,S(458, 706)   ,
		S(522, 739)   ,S(542, 731)   ,S(532, 731)   ,S(525, 725)   ,S(548, 702)   ,S(547, 711)   ,S(524, 705)   ,S(530, 715)   ,
		S(520, 737)   ,S(537, 726)   ,S(530, 731)   ,S(536, 733)   ,S(562, 717)   ,S(536, 697)   ,S(547, 712)   ,S(522, 709)   ,
		S(517, 719)   ,S(529, 720)   ,S(531, 726)   ,S(552, 722)   ,S(540, 716)   ,S(535, 710)   ,S(537, 694)   ,S(523, 706)   ,
		S(521, 708)   ,S(550, 711)   ,S(545, 719)   ,S(532, 714)   ,S(532, 716)   ,S(519, 711)   ,S(524, 707)   ,S(509, 709)   ,
		S(535, 697)   ,S(562, 693)   ,S(535, 702)   ,S(520, 710)   ,S(508, 712)   ,S(514, 701)   ,S(514, 691)   ,S(520, 699)   ,
		S(532, 698)   ,S(495, 710)   ,S(507, 718)   ,S(501, 711)   ,S(496, 713)   ,S(497, 723)   ,S(509, 720)   ,S(525, 700)   ,
	},
	{
		S(451, 757)   ,S(478, 746)   ,S(365, 759)   ,S(392, 766)   ,S(373, 787)   ,S(376, 778)   ,S(437, 778)   ,S(452, 789)   ,
		S(470, 747)   ,S(454, 752)   ,S(495, 739)   ,S(465, 753)   ,S(457, 764)   ,S(492, 758)   ,S(476, 775)   ,S(447, 775)   ,
		S(494, 773)   ,S(491, 766)   ,S(503, 772)   ,S(519, 746)   ,S(501, 753)   ,S(518, 759)   ,S(503, 766)   ,S(509, 763)   ,
		S(489, 765)   ,S(513, 765)   ,S(513, 756)   ,S(520, 768)   ,S(522, 766)   ,S(502, 749)   ,S(517, 755)   ,S(489, 767)   ,
		S(500, 744)   ,S(509, 750)   ,S(506, 760)   ,S(523, 762)   ,S(512, 760)   ,S(511, 759)   ,S(510, 740)   ,S(498, 745)   ,
		S(506, 748)   ,S(509, 745)   ,S(505, 752)   ,S(505, 757)   ,S(510, 756)   ,S(510, 750)   ,S(527, 740)   ,S(506, 737)   ,
		S(506, 708)   ,S(522, 725)   ,S(505, 734)   ,S(494, 748)   ,S(495, 746)   ,S(511, 730)   ,S(518, 713)   ,S(520, 730)   ,
		S(509, 711)   ,S(484, 731)   ,S(488, 750)   ,S(482, 745)   ,S(489, 741)   ,S(493, 749)   ,S(514, 743)   ,S(528, 724)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(733, 1245)  ,S(706, 1267)  ,S(684, 1275)  ,S(657, 1277)  ,S(666, 1270)  ,S(724, 1244)  ,S(708, 1248)  ,S(684, 1263)  ,
		S(696, 1245)  ,S(695, 1253)  ,S(701, 1249)  ,S(693, 1256)  ,S(688, 1250)  ,S(703, 1233)  ,S(665, 1240)  ,S(668, 1234)  ,
		S(680, 1239)  ,S(739, 1216)  ,S(709, 1236)  ,S(720, 1214)  ,S(733, 1205)  ,S(704, 1219)  ,S(750, 1193)  ,S(679, 1221)  ,
		S(665, 1237)  ,S(681, 1234)  ,S(702, 1227)  ,S(704, 1224)  ,S(703, 1215)  ,S(690, 1217)  ,S(703, 1206)  ,S(682, 1211)  ,
		S(631, 1221)  ,S(661, 1228)  ,S(635, 1242)  ,S(637, 1237)  ,S(641, 1222)  ,S(646, 1221)  ,S(652, 1220)  ,S(633, 1211)  ,
		S(612, 1185)  ,S(655, 1194)  ,S(631, 1203)  ,S(637, 1199)  ,S(641, 1193)  ,S(641, 1194)  ,S(659, 1191)  ,S(635, 1178)  ,
		S(573, 1193)  ,S(627, 1183)  ,S(642, 1189)  ,S(636, 1190)  ,S(642, 1185)  ,S(649, 1178)  ,S(661, 1167)  ,S(613, 1178)  ,
		S(609, 1188)  ,S(628, 1198)  ,S(655, 1196)  ,S(654, 1185)  ,S(654, 1180)  ,S(663, 1182)  ,S(669, 1178)  ,S(646, 1177)  ,
	},
	{
		S(688, 1316)  ,S(689, 1321)  ,S(695, 1325)  ,S(631, 1330)  ,S(658, 1317)  ,S(637, 1333)  ,S(674, 1320)  ,S(679, 1313)  ,
		S(660, 1299)  ,S(672, 1304)  ,S(706, 1294)  ,S(659, 1322)  ,S(689, 1307)  ,S(668, 1310)  ,S(643, 1320)  ,S(653, 1307)  ,
		S(672, 1284)  ,S(750, 1256)  ,S(732, 1273)  ,S(720, 1262)  ,S(715, 1261)  ,S(678, 1286)  ,S(702, 1270)  ,S(644, 1294)  ,
		S(664, 1280)  ,S(693, 1276)  ,S(698, 1276)  ,S(692, 1276)  ,S(708, 1264)  ,S(678, 1275)  ,S(668, 1275)  ,S(645, 1279)  ,
		S(622, 1266)  ,S(659, 1282)  ,S(639, 1288)  ,S(634, 1279)  ,S(644, 1270)  ,S(627, 1280)  ,S(625, 1284)  ,S(623, 1263)  ,
		S(625, 1222)  ,S(664, 1250)  ,S(641, 1253)  ,S(636, 1248)  ,S(643, 1238)  ,S(622, 1250)  ,S(630, 1252)  ,S(617, 1238)  ,
		S(558, 1236)  ,S(656, 1223)  ,S(651, 1231)  ,S(637, 1236)  ,S(642, 1228)  ,S(629, 1236)  ,S(629, 1230)  ,S(595, 1236)  ,
		S(623, 1212)  ,S(642, 1240)  ,S(652, 1249)  ,S(649, 1233)  ,S(652, 1226)  ,S(642, 1238)  ,S(636, 1237)  ,S(637, 1231)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1364, 2165) ,S(1388, 2180) ,S(1365, 2208) ,S(1336, 2266) ,S(1351, 2254) ,S(1412, 2215) ,S(1378, 2200) ,S(1388, 2160) ,
		S(1364, 2190) ,S(1307, 2245) ,S(1349, 2227) ,S(1289, 2294) ,S(1285, 2328) ,S(1429, 2215) ,S(1342, 2214) ,S(1365, 2174) ,
		S(1360, 2202) ,S(1373, 2168) ,S(1357, 2198) ,S(1357, 2219) ,S(1377, 2240) ,S(1357, 2268) ,S(1401, 2179) ,S(1406, 2184) ,
		S(1374, 2177) ,S(1347, 2239) ,S(1346, 2221) ,S(1337, 2271) ,S(1351, 2260) ,S(1380, 2229) ,S(1407, 2219) ,S(1399, 2190) ,
		S(1363, 2172) ,S(1366, 2233) ,S(1348, 2258) ,S(1358, 2281) ,S(1356, 2254) ,S(1376, 2236) ,S(1395, 2195) ,S(1395, 2177) ,
		S(1353, 2170) ,S(1379, 2178) ,S(1375, 2207) ,S(1375, 2191) ,S(1376, 2184) ,S(1385, 2193) ,S(1402, 2162) ,S(1401, 2146) ,
		S(1334, 2136) ,S(1373, 2126) ,S(1412, 2073) ,S(1402, 2137) ,S(1391, 2137) ,S(1407, 2114) ,S(1413, 2108) ,S(1411, 2112) ,
		S(1357, 2100) ,S(1383, 2071) ,S(1383, 2077) ,S(1392, 2113) ,S(1400, 2116) ,S(1394, 2097) ,S(1384, 2138) ,S(1395, 2086) ,
	},
	{
		S(1380, 2301) ,S(1405, 2322) ,S(1387, 2343) ,S(1333, 2342) ,S(1345, 2321) ,S(1338, 2311) ,S(1350, 2286) ,S(1312, 2297) ,
		S(1380, 2320) ,S(1315, 2388) ,S(1414, 2335) ,S(1266, 2403) ,S(1274, 2358) ,S(1330, 2293) ,S(1273, 2331) ,S(1335, 2272) ,
		S(1336, 2377) ,S(1331, 2383) ,S(1335, 2373) ,S(1344, 2331) ,S(1336, 2299) ,S(1327, 2281) ,S(1338, 2263) ,S(1334, 2267) ,
		S(1369, 2338) ,S(1363, 2375) ,S(1348, 2375) ,S(1315, 2376) ,S(1317, 2351) ,S(1337, 2271) ,S(1342, 2290) ,S(1348, 2250) ,
		S(1374, 2303) ,S(1367, 2318) ,S(1354, 2339) ,S(1336, 2353) ,S(1337, 2359) ,S(1351, 2295) ,S(1364, 2275) ,S(1359, 2231) ,
		S(1380, 2233) ,S(1382, 2257) ,S(1362, 2295) ,S(1360, 2265) ,S(1359, 2272) ,S(1365, 2278) ,S(1379, 2238) ,S(1367, 2210) ,
		S(1358, 2216) ,S(1390, 2164) ,S(1398, 2158) ,S(1379, 2214) ,S(1378, 2228) ,S(1384, 2188) ,S(1377, 2205) ,S(1372, 2199) ,
		S(1365, 2153) ,S(1363, 2158) ,S(1368, 2174) ,S(1390, 2178) ,S(1391, 2215) ,S(1384, 2190) ,S(1377, 2193) ,S(1373, 2196) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-28, -192)  ,S(82, -93)    ,S(86, -71)    ,S(109, -50)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-10, -34)   ,S(106, 26)    ,S(154, 19)    ,S(156, 3)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(42, 7)      ,S(132, 52)    ,S(159, 55)    ,S(139, 49)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-27, 17)    ,S(79, 48)     ,S(95, 65)     ,S(74, 73)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-30, -21)   ,S(33, 30)     ,S(55, 54)     ,S(12, 72)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-45, -26)   ,S(-27, 9)     ,S(-12, 31)    ,S(-29, 52)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(19, -66)    ,S(-29, -19)   ,S(-58, 15)    ,S(-99, 23)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(23, -155)   ,S(-1, -77)    ,S(-51, -35)   ,S(-71, -56)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(12, -189)   ,S(25, 3)      ,S(71, -33)    ,S(94, -40)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-40, -32)   ,S(52, 70)     ,S(152, 12)    ,S(172, 6)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(19, 17)     ,S(192, 55)    ,S(256, 41)    ,S(158, 42)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-57, 20)    ,S(91, 48)     ,S(120, 69)    ,S(82, 77)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-61, -13)   ,S(33, 28)     ,S(43, 61)     ,S(35, 80)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-34, -16)   ,S(-18, 15)    ,S(-4, 43)     ,S(-10, 62)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(30, -55)    ,S(-17, -8)    ,S(-55, 28)    ,S(-81, 33)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(32, -140)   ,S(-4, -53)    ,S(-52, -18)   ,S(-61, -49)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};


constexpr PScore materialValues[5] = {S(108, 204), S(466, 647), S(475, 687), S(637, 1206), S(1358, 2203), };
constexpr PScore knightMob[9] = {S(-42, -145), S(-23, -70), S(-11, -21), S(-5, 6), S(0, 19), S(7, 34), S(14, 35), S(24, 30), S(35, 7), };
constexpr PScore bishopMob[14] = {S(-60, -194), S(-33, -121), S(-16, -68), S(-8, -37), S(3, -17), S(7, 5), S(11, 19), S(12, 29), S(14, 40), S(22, 43), S(30, 37), S(56, 22), S(67, 30), S(88, -14), };
constexpr PScore rookMob[15] = {S(-24, -131), S(-33, -88), S(-24, -51), S(-22, -32), S(-21, -13), S(-23, 5), S(-20, 16), S(-15, 16), S(-11, 24), S(-3, 29), S(-3, 35), S(3, 42), S(5, 45), S(22, 27), S(86, -10), };
constexpr PScore queenMob[28] = {S(-145, -382), S(-105, -395), S(-68, -307), S(-48, -219), S(-45, -122), S(-43, -63), S(-38, -24), S(-35, -4), S(-32, 18), S(-27, 32), S(-23, 42), S(-17, 48), S(-12, 52), S(-9, 56), S(-6, 57), S(-4, 56), S(-4, 55), S(-7, 55), S(-3, 48), S(1, 37), S(15, 11), S(25, -14), S(24, -29), S(39, -58), S(14, -63), S(18, -91), S(-11, -66), S(-27, -25), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 832.9248046875;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.898329019546509;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 211.67042541503906;
constexpr double KSBEG = 1;
constexpr double KSCEG = -0.3640868663787842;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);