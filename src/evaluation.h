#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,
		S(191, 264)   ,S(147, 265)   ,S(188, 211)   ,S(195, 167)   ,S(175, 175)   ,S(120, 223)   ,S(-81, 314)   ,S(-49, 325)   ,
		S(94, 298)    ,S(121, 277)   ,S(143, 232)   ,S(136, 190)   ,S(149, 199)   ,S(204, 234)   ,S(151, 273)   ,S(107, 282)   ,
		S(90, 250)    ,S(93, 233)    ,S(100, 214)   ,S(115, 184)   ,S(126, 200)   ,S(133, 213)   ,S(98, 241)    ,S(93, 237)    ,
		S(84, 224)    ,S(80, 216)    ,S(96, 198)    ,S(104, 189)   ,S(109, 196)   ,S(112, 205)   ,S(97, 209)    ,S(94, 208)    ,
		S(86, 212)    ,S(85, 207)    ,S(91, 204)    ,S(101, 201)   ,S(111, 216)   ,S(103, 219)   ,S(118, 195)   ,S(107, 192)   ,
		S(84, 222)    ,S(82, 214)    ,S(81, 215)    ,S(89, 218)    ,S(88, 239)    ,S(125, 232)   ,S(137, 205)   ,S(107, 183)   ,
		S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,
	},
	{
		S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,
		S(130, 323)   ,S(99, 332)    ,S(177, 293)   ,S(183, 221)   ,S(177, 205)   ,S(193, 185)   ,S(83, 260)    ,S(72, 265)    ,
		S(117, 317)   ,S(172, 309)   ,S(169, 278)   ,S(152, 231)   ,S(158, 205)   ,S(154, 234)   ,S(146, 253)   ,S(88, 276)    ,
		S(126, 246)   ,S(119, 245)   ,S(125, 228)   ,S(129, 210)   ,S(125, 207)   ,S(109, 219)   ,S(77, 244)    ,S(81, 246)    ,
		S(122, 213)   ,S(111, 217)   ,S(121, 206)   ,S(118, 205)   ,S(105, 199)   ,S(90, 213)    ,S(68, 222)    ,S(65, 228)    ,
		S(123, 201)   ,S(134, 194)   ,S(118, 214)   ,S(107, 217)   ,S(95, 212)    ,S(86, 212)    ,S(72, 218)    ,S(63, 219)    ,
		S(126, 200)   ,S(149, 197)   ,S(135, 224)   ,S(98, 237)    ,S(78, 229)    ,S(74, 227)    ,S(65, 228)    ,S(64, 229)    ,
		S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,S(101, 205)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(241, 582)   ,S(331, 657)   ,S(311, 705)   ,S(425, 675)   ,S(474, 670)   ,S(336, 707)   ,S(334, 670)   ,S(304, 555)   ,
		S(461, 627)   ,S(461, 652)   ,S(509, 653)   ,S(533, 691)   ,S(526, 692)   ,S(552, 644)   ,S(453, 659)   ,S(479, 630)   ,
		S(446, 639)   ,S(473, 665)   ,S(492, 704)   ,S(500, 708)   ,S(531, 702)   ,S(513, 709)   ,S(468, 685)   ,S(455, 663)   ,
		S(475, 662)   ,S(479, 673)   ,S(491, 705)   ,S(487, 733)   ,S(488, 744)   ,S(496, 726)   ,S(476, 718)   ,S(477, 695)   ,
		S(463, 666)   ,S(470, 677)   ,S(469, 705)   ,S(472, 717)   ,S(478, 727)   ,S(477, 714)   ,S(487, 696)   ,S(468, 693)   ,
		S(440, 618)   ,S(451, 653)   ,S(449, 679)   ,S(460, 707)   ,S(459, 705)   ,S(447, 679)   ,S(450, 669)   ,S(440, 648)   ,
		S(423, 638)   ,S(430, 654)   ,S(436, 649)   ,S(444, 673)   ,S(439, 676)   ,S(433, 650)   ,S(422, 661)   ,S(427, 667)   ,
		S(410, 596)   ,S(434, 615)   ,S(429, 628)   ,S(432, 664)   ,S(428, 667)   ,S(424, 660)   ,S(423, 641)   ,S(388, 627)   ,
	},
	{
		S(272, 541)   ,S(338, 643)   ,S(342, 691)   ,S(450, 662)   ,S(448, 660)   ,S(303, 696)   ,S(319, 660)   ,S(274, 554)   ,
		S(452, 625)   ,S(448, 660)   ,S(511, 657)   ,S(568, 671)   ,S(529, 679)   ,S(534, 647)   ,S(459, 648)   ,S(468, 618)   ,
		S(429, 660)   ,S(490, 671)   ,S(492, 710)   ,S(513, 709)   ,S(530, 697)   ,S(509, 698)   ,S(498, 651)   ,S(454, 638)   ,
		S(464, 676)   ,S(484, 690)   ,S(492, 717)   ,S(501, 726)   ,S(499, 726)   ,S(496, 704)   ,S(482, 689)   ,S(476, 662)   ,
		S(468, 678)   ,S(471, 688)   ,S(480, 707)   ,S(480, 716)   ,S(484, 717)   ,S(475, 705)   ,S(472, 681)   ,S(471, 660)   ,
		S(417, 651)   ,S(443, 663)   ,S(453, 679)   ,S(455, 701)   ,S(457, 702)   ,S(445, 676)   ,S(444, 647)   ,S(425, 620)   ,
		S(414, 675)   ,S(402, 676)   ,S(426, 656)   ,S(435, 669)   ,S(440, 671)   ,S(430, 651)   ,S(413, 659)   ,S(414, 633)   ,
		S(378, 645)   ,S(405, 646)   ,S(415, 658)   ,S(409, 666)   ,S(427, 654)   ,S(430, 621)   ,S(423, 622)   ,S(401, 586)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(416, 747)   ,S(395, 747)   ,S(339, 749)   ,S(333, 757)   ,S(356, 744)   ,S(321, 743)   ,S(424, 728)   ,S(411, 737)   ,
		S(414, 736)   ,S(474, 728)   ,S(472, 724)   ,S(439, 733)   ,S(468, 724)   ,S(463, 729)   ,S(432, 739)   ,S(434, 725)   ,
		S(473, 728)   ,S(477, 732)   ,S(501, 728)   ,S(483, 725)   ,S(496, 725)   ,S(490, 750)   ,S(475, 740)   ,S(464, 745)   ,
		S(460, 727)   ,S(495, 723)   ,S(479, 725)   ,S(501, 745)   ,S(504, 750)   ,S(497, 733)   ,S(501, 735)   ,S(452, 743)   ,
		S(469, 709)   ,S(475, 716)   ,S(469, 741)   ,S(489, 739)   ,S(496, 742)   ,S(469, 735)   ,S(477, 723)   ,S(477, 711)   ,
		S(472, 708)   ,S(485, 716)   ,S(475, 729)   ,S(478, 733)   ,S(474, 732)   ,S(475, 728)   ,S(478, 713)   ,S(482, 719)   ,
		S(483, 700)   ,S(479, 688)   ,S(477, 704)   ,S(457, 722)   ,S(457, 725)   ,S(475, 707)   ,S(489, 704)   ,S(479, 686)   ,
		S(490, 697)   ,S(477, 712)   ,S(457, 714)   ,S(450, 709)   ,S(445, 719)   ,S(452, 727)   ,S(453, 711)   ,S(477, 695)   ,
	},
	{
		S(386, 743)   ,S(353, 740)   ,S(366, 736)   ,S(349, 743)   ,S(338, 747)   ,S(319, 745)   ,S(431, 732)   ,S(394, 753)   ,
		S(391, 731)   ,S(436, 743)   ,S(459, 730)   ,S(438, 724)   ,S(455, 726)   ,S(479, 724)   ,S(474, 734)   ,S(440, 724)   ,
		S(461, 743)   ,S(492, 738)   ,S(493, 736)   ,S(501, 727)   ,S(501, 717)   ,S(504, 730)   ,S(494, 724)   ,S(481, 729)   ,
		S(459, 730)   ,S(500, 728)   ,S(488, 736)   ,S(508, 742)   ,S(518, 738)   ,S(489, 721)   ,S(499, 725)   ,S(476, 728)   ,
		S(476, 713)   ,S(464, 725)   ,S(483, 733)   ,S(497, 738)   ,S(495, 737)   ,S(480, 728)   ,S(481, 710)   ,S(463, 710)   ,
		S(474, 715)   ,S(485, 718)   ,S(487, 729)   ,S(489, 721)   ,S(480, 726)   ,S(480, 719)   ,S(480, 707)   ,S(463, 709)   ,
		S(474, 712)   ,S(498, 695)   ,S(479, 709)   ,S(463, 718)   ,S(460, 716)   ,S(464, 704)   ,S(467, 692)   ,S(477, 680)   ,
		S(486, 698)   ,S(455, 709)   ,S(453, 720)   ,S(448, 709)   ,S(450, 708)   ,S(455, 709)   ,S(469, 707)   ,S(482, 693)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(636, 1298)  ,S(630, 1302)  ,S(599, 1314)  ,S(607, 1309)  ,S(599, 1317)  ,S(660, 1310)  ,S(649, 1312)  ,S(653, 1304)  ,
		S(614, 1291)  ,S(601, 1303)  ,S(623, 1298)  ,S(639, 1300)  ,S(624, 1307)  ,S(660, 1285)  ,S(620, 1299)  ,S(626, 1286)  ,
		S(606, 1277)  ,S(659, 1259)  ,S(635, 1273)  ,S(668, 1254)  ,S(683, 1251)  ,S(684, 1268)  ,S(705, 1248)  ,S(636, 1269)  ,
		S(607, 1264)  ,S(627, 1261)  ,S(638, 1262)  ,S(667, 1251)  ,S(654, 1260)  ,S(663, 1260)  ,S(650, 1266)  ,S(631, 1263)  ,
		S(584, 1247)  ,S(584, 1266)  ,S(588, 1261)  ,S(603, 1252)  ,S(593, 1260)  ,S(598, 1267)  ,S(619, 1263)  ,S(598, 1243)  ,
		S(580, 1224)  ,S(590, 1242)  ,S(581, 1237)  ,S(601, 1228)  ,S(597, 1232)  ,S(597, 1238)  ,S(627, 1230)  ,S(596, 1206)  ,
		S(563, 1220)  ,S(594, 1219)  ,S(592, 1225)  ,S(602, 1218)  ,S(599, 1219)  ,S(613, 1213)  ,S(622, 1203)  ,S(547, 1222)  ,
		S(600, 1219)  ,S(600, 1224)  ,S(604, 1227)  ,S(612, 1217)  ,S(611, 1219)  ,S(615, 1238)  ,S(609, 1227)  ,S(600, 1200)  ,
	},
	{
		S(649, 1294)  ,S(608, 1318)  ,S(630, 1315)  ,S(621, 1303)  ,S(627, 1298)  ,S(634, 1289)  ,S(664, 1279)  ,S(666, 1280)  ,
		S(591, 1299)  ,S(614, 1302)  ,S(647, 1293)  ,S(637, 1293)  ,S(637, 1290)  ,S(650, 1273)  ,S(616, 1286)  ,S(630, 1278)  ,
		S(602, 1284)  ,S(662, 1263)  ,S(650, 1278)  ,S(675, 1251)  ,S(689, 1241)  ,S(657, 1256)  ,S(688, 1239)  ,S(632, 1262)  ,
		S(593, 1272)  ,S(637, 1266)  ,S(654, 1263)  ,S(658, 1253)  ,S(657, 1250)  ,S(645, 1253)  ,S(647, 1248)  ,S(631, 1253)  ,
		S(563, 1238)  ,S(597, 1255)  ,S(590, 1266)  ,S(592, 1256)  ,S(594, 1251)  ,S(589, 1257)  ,S(591, 1259)  ,S(590, 1241)  ,
		S(553, 1213)  ,S(596, 1228)  ,S(598, 1230)  ,S(590, 1226)  ,S(589, 1227)  ,S(588, 1230)  ,S(606, 1231)  ,S(585, 1213)  ,
		S(460, 1241)  ,S(575, 1209)  ,S(593, 1219)  ,S(593, 1218)  ,S(596, 1213)  ,S(598, 1210)  ,S(602, 1205)  ,S(557, 1205)  ,
		S(554, 1223)  ,S(579, 1234)  ,S(609, 1226)  ,S(610, 1219)  ,S(608, 1212)  ,S(607, 1215)  ,S(612, 1210)  ,S(601, 1204)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1236, 1476) ,S(1267, 1470) ,S(1245, 1510) ,S(1249, 1517) ,S(1236, 1547) ,S(1269, 1547) ,S(1272, 1511) ,S(1260, 1490) ,
		S(1264, 1452) ,S(1208, 1500) ,S(1260, 1475) ,S(1200, 1542) ,S(1204, 1581) ,S(1283, 1553) ,S(1200, 1552) ,S(1279, 1495) ,
		S(1267, 1453) ,S(1272, 1447) ,S(1259, 1473) ,S(1269, 1486) ,S(1277, 1523) ,S(1282, 1541) ,S(1277, 1541) ,S(1259, 1553) ,
		S(1280, 1437) ,S(1279, 1475) ,S(1271, 1464) ,S(1254, 1534) ,S(1254, 1554) ,S(1290, 1551) ,S(1300, 1542) ,S(1297, 1513) ,
		S(1283, 1415) ,S(1282, 1462) ,S(1269, 1478) ,S(1265, 1528) ,S(1265, 1523) ,S(1281, 1510) ,S(1293, 1486) ,S(1299, 1468) ,
		S(1289, 1396) ,S(1295, 1426) ,S(1285, 1460) ,S(1282, 1454) ,S(1284, 1445) ,S(1288, 1470) ,S(1303, 1432) ,S(1300, 1404) ,
		S(1292, 1385) ,S(1295, 1392) ,S(1303, 1380) ,S(1297, 1415) ,S(1300, 1403) ,S(1317, 1345) ,S(1305, 1348) ,S(1272, 1394) ,
		S(1293, 1378) ,S(1296, 1380) ,S(1302, 1379) ,S(1308, 1408) ,S(1309, 1367) ,S(1283, 1366) ,S(1281, 1337) ,S(1277, 1359) ,
	},
	{
		S(1275, 1424) ,S(1272, 1457) ,S(1271, 1483) ,S(1259, 1521) ,S(1242, 1520) ,S(1266, 1483) ,S(1259, 1462) ,S(1263, 1444) ,
		S(1257, 1468) ,S(1196, 1517) ,S(1266, 1515) ,S(1197, 1568) ,S(1184, 1582) ,S(1263, 1474) ,S(1213, 1502) ,S(1282, 1437) ,
		S(1263, 1494) ,S(1268, 1491) ,S(1255, 1521) ,S(1279, 1512) ,S(1281, 1486) ,S(1267, 1486) ,S(1296, 1434) ,S(1296, 1447) ,
		S(1280, 1474) ,S(1293, 1515) ,S(1282, 1512) ,S(1272, 1540) ,S(1269, 1522) ,S(1283, 1461) ,S(1299, 1468) ,S(1301, 1446) ,
		S(1287, 1432) ,S(1287, 1484) ,S(1279, 1493) ,S(1274, 1520) ,S(1279, 1499) ,S(1279, 1468) ,S(1292, 1443) ,S(1289, 1417) ,
		S(1265, 1422) ,S(1292, 1423) ,S(1289, 1459) ,S(1288, 1437) ,S(1288, 1438) ,S(1293, 1439) ,S(1300, 1413) ,S(1294, 1379) ,
		S(1246, 1389) ,S(1282, 1359) ,S(1312, 1341) ,S(1305, 1389) ,S(1301, 1402) ,S(1309, 1358) ,S(1308, 1367) ,S(1303, 1350) ,
		S(1251, 1363) ,S(1278, 1332) ,S(1283, 1336) ,S(1301, 1350) ,S(1308, 1368) ,S(1311, 1345) ,S(1309, 1358) ,S(1302, 1342) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(90, -41)    ,S(67, -34)    ,S(55, -30)    ,S(-28, -188)  ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(144, 14)    ,S(154, 32)    ,S(72, 65)     ,S(-8, -30)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(166, 42)    ,S(230, 48)    ,S(173, 56)    ,S(36, 9)      ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(119, 62)    ,S(142, 55)    ,S(115, 37)    ,S(-55, 14)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(75, 63)     ,S(80, 41)     ,S(75, 13)     ,S(-65, -15)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(24, 50)     ,S(26, 28)     ,S(18, 0)      ,S(-47, -17)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-66, 39)    ,S(-53, 34)    ,S(-5, -2)     ,S(0, -43)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-70, -29)   ,S(-96, 8)     ,S(-7, -38)    ,S(2, -125)    ,
	},
	{
		S(-19, -198)  ,S(48, -77)    ,S(82, -63)    ,S(101, -35)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-44, -42)   ,S(87, 37)     ,S(144, 16)    ,S(188, -12)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(4, 12)      ,S(172, 42)    ,S(201, 36)    ,S(173, 30)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-43, 12)    ,S(127, 20)    ,S(147, 43)    ,S(120, 49)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-56, -29)   ,S(69, 4)      ,S(115, 25)    ,S(71, 50)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-73, -19)   ,S(11, -9)     ,S(37, 11)     ,S(19, 35)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-13, -36)   ,S(-16, -16)   ,S(-20, 9)     ,S(-70, 21)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-26, -109)  ,S(-12, -54)   ,S(-50, -13)   ,S(-94, -27)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};


constexpr PScore materialValues[5] = {S(101, 205), S(424, 624), S(439, 669), S(592, 1200), S(1271, 1418), };
constexpr PScore knightMob[9] = {S(-26, -129), S(-7, -52), S(4, -5), S(10, 20), S(16, 31), S(21, 45), S(29, 44), S(39, 38), S(50, 13), };
constexpr PScore bishopMob[14] = {S(-48, -180), S(-18, -105), S(-1, -51), S(7, -23), S(17, -3), S(22, 15), S(25, 27), S(23, 35), S(24, 46), S(28, 47), S(36, 40), S(58, 25), S(63, 32), S(86, -11), };
constexpr PScore rookMob[15] = {S(-22, -140), S(-27, -91), S(-19, -57), S(-17, -40), S(-17, -24), S(-18, -6), S(-16, 4), S(-10, 4), S(-6, 9), S(2, 13), S(3, 19), S(8, 23), S(11, 25), S(27, 4), S(91, -32), };
constexpr PScore queenMob[28] = {S(-128, -451), S(-86, -476), S(-46, -382), S(-29, -292), S(-26, -198), S(-23, -140), S(-19, -105), S(-16, -88), S(-14, -68), S(-9, -57), S(-4, -49), S(0, -45), S(4, -42), S(7, -42), S(10, -41), S(11, -42), S(11, -44), S(7, -42), S(9, -48), S(13, -58), S(27, -83), S(33, -100), S(33, -114), S(44, -137), S(21, -144), S(29, -169), S(-1, -135), S(-10, -108), };
constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 874.4473266601562;
constexpr double KSBMG = 1.6017968654632568;
constexpr double KSCMG = -3.064760446548462;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 1087.629150390625;
constexpr double KSBEG = 2.1153743267059326;
constexpr double KSCEG = 2.7105443477630615;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);