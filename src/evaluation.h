#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,
		S(192, 263)   ,S(150, 264)   ,S(192, 209)   ,S(196, 170)   ,S(172, 181)   ,S(117, 230)   ,S(-89, 321)   ,S(-49, 326)   ,
		S(95, 299)    ,S(121, 279)   ,S(142, 234)   ,S(134, 194)   ,S(146, 205)   ,S(196, 241)   ,S(142, 278)   ,S(106, 287)   ,
		S(91, 253)    ,S(94, 237)    ,S(101, 217)   ,S(114, 190)   ,S(123, 207)   ,S(128, 221)   ,S(92, 247)    ,S(90, 243)    ,
		S(85, 226)    ,S(81, 219)    ,S(96, 201)    ,S(103, 194)   ,S(107, 201)   ,S(109, 209)   ,S(92, 214)    ,S(92, 211)    ,
		S(87, 215)    ,S(85, 210)    ,S(92, 207)    ,S(99, 205)    ,S(112, 220)   ,S(103, 222)   ,S(114, 200)   ,S(104, 194)   ,
		S(84, 225)    ,S(82, 215)    ,S(81, 215)    ,S(91, 218)    ,S(90, 237)    ,S(127, 230)   ,S(136, 202)   ,S(106, 182)   ,
		S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,
	},
	{
		S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,
		S(126, 325)   ,S(91, 338)    ,S(167, 299)   ,S(180, 225)   ,S(177, 210)   ,S(194, 188)   ,S(84, 262)    ,S(77, 264)    ,
		S(113, 321)   ,S(163, 315)   ,S(161, 283)   ,S(147, 236)   ,S(157, 209)   ,S(154, 238)   ,S(146, 257)   ,S(90, 279)    ,
		S(121, 252)   ,S(114, 251)   ,S(120, 233)   ,S(125, 216)   ,S(124, 210)   ,S(109, 223)   ,S(76, 248)    ,S(82, 250)    ,
		S(119, 216)   ,S(105, 222)   ,S(117, 210)   ,S(116, 209)   ,S(106, 203)   ,S(92, 217)    ,S(70, 228)    ,S(65, 230)    ,
		S(122, 204)   ,S(130, 198)   ,S(117, 218)   ,S(108, 220)   ,S(96, 215)    ,S(88, 217)    ,S(72, 222)    ,S(64, 223)    ,
		S(124, 201)   ,S(148, 198)   ,S(135, 223)   ,S(100, 235)   ,S(80, 227)    ,S(76, 228)    ,S(68, 229)    ,S(66, 230)    ,
		S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,S(100, 209)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(265, 565)   ,S(353, 646)   ,S(334, 696)   ,S(445, 668)   ,S(491, 665)   ,S(353, 699)   ,S(353, 662)   ,S(328, 542)   ,
		S(480, 615)   ,S(481, 640)   ,S(529, 647)   ,S(549, 685)   ,S(537, 690)   ,S(564, 638)   ,S(466, 650)   ,S(499, 620)   ,
		S(464, 631)   ,S(492, 656)   ,S(512, 701)   ,S(511, 709)   ,S(543, 701)   ,S(515, 709)   ,S(470, 685)   ,S(463, 661)   ,
		S(496, 653)   ,S(500, 665)   ,S(509, 702)   ,S(504, 731)   ,S(501, 743)   ,S(509, 724)   ,S(492, 713)   ,S(491, 690)   ,
		S(486, 655)   ,S(495, 667)   ,S(491, 700)   ,S(488, 714)   ,S(497, 724)   ,S(494, 714)   ,S(507, 692)   ,S(486, 690)   ,
		S(460, 607)   ,S(469, 643)   ,S(464, 673)   ,S(473, 702)   ,S(471, 702)   ,S(457, 677)   ,S(457, 667)   ,S(451, 643)   ,
		S(443, 626)   ,S(449, 642)   ,S(452, 640)   ,S(459, 666)   ,S(454, 668)   ,S(445, 646)   ,S(434, 656)   ,S(442, 660)   ,
		S(430, 584)   ,S(454, 603)   ,S(447, 618)   ,S(450, 654)   ,S(446, 657)   ,S(442, 648)   ,S(441, 629)   ,S(405, 617)   ,
	},
	{
		S(292, 530)   ,S(366, 630)   ,S(361, 683)   ,S(468, 656)   ,S(467, 653)   ,S(320, 690)   ,S(338, 651)   ,S(292, 544)   ,
		S(469, 615)   ,S(459, 652)   ,S(523, 652)   ,S(579, 669)   ,S(544, 675)   ,S(551, 644)   ,S(478, 637)   ,S(486, 606)   ,
		S(438, 657)   ,S(492, 668)   ,S(497, 710)   ,S(523, 708)   ,S(541, 695)   ,S(524, 695)   ,S(513, 647)   ,S(470, 633)   ,
		S(477, 674)   ,S(499, 684)   ,S(503, 716)   ,S(515, 725)   ,S(514, 723)   ,S(513, 699)   ,S(501, 681)   ,S(495, 653)   ,
		S(486, 672)   ,S(491, 684)   ,S(496, 704)   ,S(499, 713)   ,S(502, 711)   ,S(495, 699)   ,S(497, 672)   ,S(493, 651)   ,
		S(429, 643)   ,S(450, 659)   ,S(461, 677)   ,S(465, 697)   ,S(467, 696)   ,S(459, 671)   ,S(461, 638)   ,S(444, 610)   ,
		S(429, 664)   ,S(416, 668)   ,S(435, 651)   ,S(448, 662)   ,S(454, 663)   ,S(445, 642)   ,S(432, 648)   ,S(434, 620)   ,
		S(394, 635)   ,S(421, 633)   ,S(432, 644)   ,S(427, 654)   ,S(445, 643)   ,S(447, 612)   ,S(442, 610)   ,S(419, 574)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(434, 741)   ,S(411, 741)   ,S(359, 740)   ,S(348, 751)   ,S(374, 733)   ,S(341, 733)   ,S(446, 719)   ,S(436, 726)   ,
		S(435, 724)   ,S(494, 724)   ,S(490, 719)   ,S(456, 729)   ,S(482, 718)   ,S(477, 717)   ,S(455, 733)   ,S(442, 720)   ,
		S(493, 718)   ,S(497, 725)   ,S(523, 723)   ,S(501, 721)   ,S(505, 721)   ,S(498, 747)   ,S(478, 738)   ,S(479, 736)   ,
		S(483, 721)   ,S(516, 717)   ,S(503, 717)   ,S(519, 741)   ,S(520, 747)   ,S(507, 733)   ,S(515, 734)   ,S(466, 736)   ,
		S(492, 700)   ,S(502, 707)   ,S(494, 734)   ,S(508, 734)   ,S(516, 741)   ,S(492, 736)   ,S(495, 721)   ,S(497, 705)   ,
		S(494, 699)   ,S(507, 709)   ,S(493, 725)   ,S(493, 732)   ,S(488, 730)   ,S(488, 728)   ,S(491, 713)   ,S(494, 717)   ,
		S(504, 692)   ,S(500, 682)   ,S(493, 701)   ,S(472, 716)   ,S(473, 719)   ,S(489, 702)   ,S(503, 699)   ,S(490, 684)   ,
		S(510, 690)   ,S(493, 707)   ,S(473, 711)   ,S(466, 705)   ,S(464, 713)   ,S(469, 718)   ,S(470, 703)   ,S(492, 690)   ,
	},
	{
		S(409, 732)   ,S(382, 726)   ,S(385, 728)   ,S(366, 734)   ,S(354, 739)   ,S(331, 739)   ,S(444, 725)   ,S(415, 740)   ,
		S(404, 724)   ,S(457, 737)   ,S(478, 723)   ,S(451, 721)   ,S(469, 721)   ,S(494, 716)   ,S(492, 727)   ,S(457, 710)   ,
		S(475, 735)   ,S(499, 734)   ,S(503, 733)   ,S(515, 724)   ,S(513, 713)   ,S(523, 725)   ,S(511, 718)   ,S(501, 718)   ,
		S(471, 725)   ,S(513, 725)   ,S(501, 735)   ,S(521, 741)   ,S(537, 733)   ,S(511, 713)   ,S(519, 718)   ,S(498, 718)   ,
		S(492, 707)   ,S(481, 720)   ,S(502, 728)   ,S(517, 735)   ,S(514, 732)   ,S(505, 721)   ,S(509, 700)   ,S(487, 702)   ,
		S(486, 710)   ,S(495, 713)   ,S(497, 728)   ,S(502, 721)   ,S(495, 723)   ,S(498, 716)   ,S(501, 701)   ,S(487, 699)   ,
		S(487, 705)   ,S(510, 689)   ,S(493, 704)   ,S(478, 713)   ,S(476, 711)   ,S(481, 699)   ,S(488, 685)   ,S(499, 673)   ,
		S(501, 692)   ,S(470, 702)   ,S(471, 710)   ,S(467, 701)   ,S(466, 702)   ,S(471, 704)   ,S(485, 703)   ,S(501, 688)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(655, 1301)  ,S(650, 1306)  ,S(616, 1319)  ,S(626, 1313)  ,S(600, 1327)  ,S(661, 1319)  ,S(664, 1315)  ,S(658, 1312)  ,
		S(632, 1295)  ,S(619, 1306)  ,S(642, 1302)  ,S(659, 1302)  ,S(627, 1317)  ,S(669, 1290)  ,S(634, 1301)  ,S(635, 1292)  ,
		S(620, 1286)  ,S(674, 1266)  ,S(648, 1281)  ,S(683, 1262)  ,S(685, 1265)  ,S(686, 1277)  ,S(707, 1257)  ,S(637, 1284)  ,
		S(618, 1275)  ,S(639, 1269)  ,S(648, 1271)  ,S(674, 1260)  ,S(653, 1275)  ,S(663, 1272)  ,S(649, 1276)  ,S(630, 1279)  ,
		S(596, 1257)  ,S(601, 1273)  ,S(601, 1269)  ,S(615, 1261)  ,S(600, 1272)  ,S(609, 1275)  ,S(625, 1271)  ,S(600, 1258)  ,
		S(595, 1226)  ,S(606, 1240)  ,S(596, 1238)  ,S(615, 1227)  ,S(606, 1235)  ,S(609, 1238)  ,S(637, 1228)  ,S(604, 1209)  ,
		S(577, 1221)  ,S(609, 1217)  ,S(606, 1225)  ,S(616, 1217)  ,S(611, 1221)  ,S(626, 1212)  ,S(635, 1201)  ,S(559, 1221)  ,
		S(615, 1217)  ,S(616, 1224)  ,S(619, 1226)  ,S(627, 1217)  ,S(622, 1221)  ,S(627, 1236)  ,S(621, 1226)  ,S(612, 1199)  ,
	},
	{
		S(656, 1300)  ,S(620, 1322)  ,S(633, 1322)  ,S(617, 1313)  ,S(647, 1302)  ,S(649, 1296)  ,S(685, 1283)  ,S(685, 1287)  ,
		S(596, 1306)  ,S(629, 1303)  ,S(656, 1297)  ,S(642, 1299)  ,S(658, 1292)  ,S(668, 1277)  ,S(636, 1289)  ,S(648, 1282)  ,
		S(602, 1295)  ,S(666, 1271)  ,S(654, 1286)  ,S(677, 1261)  ,S(701, 1250)  ,S(670, 1263)  ,S(702, 1247)  ,S(645, 1272)  ,
		S(589, 1285)  ,S(635, 1274)  ,S(648, 1275)  ,S(654, 1266)  ,S(664, 1258)  ,S(653, 1259)  ,S(656, 1255)  ,S(639, 1263)  ,
		S(563, 1251)  ,S(601, 1265)  ,S(592, 1274)  ,S(599, 1265)  ,S(606, 1257)  ,S(601, 1264)  ,S(608, 1265)  ,S(600, 1251)  ,
		S(560, 1211)  ,S(608, 1224)  ,S(610, 1225)  ,S(601, 1223)  ,S(605, 1225)  ,S(602, 1230)  ,S(622, 1228)  ,S(599, 1215)  ,
		S(474, 1235)  ,S(591, 1204)  ,S(607, 1214)  ,S(605, 1216)  ,S(612, 1211)  ,S(613, 1209)  ,S(616, 1202)  ,S(573, 1203)  ,
		S(564, 1220)  ,S(592, 1231)  ,S(621, 1223)  ,S(622, 1216)  ,S(623, 1210)  ,S(621, 1215)  ,S(626, 1209)  ,S(614, 1200)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1280, 2347) ,S(1311, 2344) ,S(1290, 2377) ,S(1294, 2389) ,S(1276, 2405) ,S(1321, 2394) ,S(1336, 2373) ,S(1311, 2361) ,
		S(1303, 2333) ,S(1247, 2383) ,S(1299, 2356) ,S(1242, 2416) ,S(1231, 2451) ,S(1322, 2396) ,S(1251, 2428) ,S(1309, 2377) ,
		S(1303, 2336) ,S(1309, 2330) ,S(1295, 2354) ,S(1301, 2368) ,S(1300, 2385) ,S(1292, 2409) ,S(1285, 2408) ,S(1278, 2433) ,
		S(1314, 2322) ,S(1312, 2355) ,S(1304, 2342) ,S(1280, 2410) ,S(1272, 2431) ,S(1304, 2419) ,S(1313, 2415) ,S(1315, 2388) ,
		S(1320, 2298) ,S(1324, 2340) ,S(1308, 2354) ,S(1296, 2409) ,S(1293, 2402) ,S(1307, 2386) ,S(1317, 2358) ,S(1324, 2345) ,
		S(1327, 2275) ,S(1332, 2302) ,S(1322, 2334) ,S(1315, 2329) ,S(1313, 2317) ,S(1316, 2341) ,S(1330, 2303) ,S(1326, 2281) ,
		S(1330, 2261) ,S(1332, 2266) ,S(1338, 2253) ,S(1331, 2285) ,S(1334, 2270) ,S(1350, 2209) ,S(1337, 2220) ,S(1303, 2267) ,
		S(1331, 2250) ,S(1331, 2253) ,S(1337, 2252) ,S(1344, 2274) ,S(1343, 2238) ,S(1319, 2231) ,S(1316, 2212) ,S(1313, 2222) ,
	},
	{
		S(1309, 2294) ,S(1311, 2340) ,S(1307, 2355) ,S(1297, 2383) ,S(1294, 2382) ,S(1319, 2341) ,S(1311, 2327) ,S(1308, 2319) ,
		S(1275, 2343) ,S(1226, 2398) ,S(1289, 2386) ,S(1222, 2439) ,S(1218, 2458) ,S(1305, 2333) ,S(1255, 2380) ,S(1319, 2313) ,
		S(1277, 2371) ,S(1264, 2375) ,S(1261, 2395) ,S(1296, 2376) ,S(1305, 2359) ,S(1301, 2353) ,S(1325, 2312) ,S(1326, 2328) ,
		S(1290, 2344) ,S(1296, 2390) ,S(1285, 2383) ,S(1281, 2406) ,S(1287, 2394) ,S(1310, 2330) ,S(1324, 2344) ,S(1330, 2323) ,
		S(1306, 2300) ,S(1301, 2351) ,S(1298, 2354) ,S(1298, 2385) ,S(1306, 2370) ,S(1311, 2342) ,S(1329, 2316) ,S(1320, 2300) ,
		S(1287, 2286) ,S(1313, 2279) ,S(1311, 2316) ,S(1314, 2298) ,S(1318, 2303) ,S(1321, 2312) ,S(1332, 2291) ,S(1326, 2261) ,
		S(1272, 2249) ,S(1309, 2212) ,S(1341, 2194) ,S(1334, 2248) ,S(1330, 2265) ,S(1340, 2227) ,S(1340, 2239) ,S(1335, 2229) ,
		S(1281, 2222) ,S(1306, 2197) ,S(1317, 2186) ,S(1332, 2209) ,S(1337, 2230) ,S(1340, 2211) ,S(1340, 2225) ,S(1333, 2212) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(93, -42)    ,S(75, -37)    ,S(80, -44)    ,S(3, -170)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(144, 18)    ,S(169, 28)    ,S(81, 61)     ,S(29, -6)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(150, 47)    ,S(220, 51)    ,S(161, 57)    ,S(70, 34)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(80, 73)     ,S(109, 66)    ,S(85, 45)     ,S(-29, 37)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(26, 69)     ,S(38, 49)     ,S(29, 20)     ,S(-29, 1)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-19, 53)    ,S(-10, 34)    ,S(-22, 5)     ,S(4, -1)      ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-93, 31)    ,S(-73, 30)    ,S(-20, -11)   ,S(51, -22)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-75, -44)   ,S(-97, -3)    ,S(-8, -50)    ,S(46, -97)    ,
	},
	{
		S(7, -209)    ,S(69, -79)    ,S(102, -63)   ,S(120, -41)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-27, -46)   ,S(105, 34)    ,S(155, 20)    ,S(196, -9)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(6, 8)       ,S(161, 45)    ,S(184, 44)    ,S(162, 35)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-58, 16)    ,S(99, 31)     ,S(114, 55)    ,S(87, 58)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-72, -31)   ,S(26, 12)     ,S(71, 34)     ,S(28, 56)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-86, -22)   ,S(-25, -4)    ,S(-1, 18)     ,S(-19, 36)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-8, -49)    ,S(-24, -22)   ,S(-34, 3)     ,S(-90, 14)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-13, -124)  ,S(-7, -65)    ,S(-45, -23)   ,S(-94, -41)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(100, 209), S(440, 624), S(457, 670), S(608, 1216), S(1307, 2284), };
constexpr PScore knightMob[9] = {S(-33, -129), S(-13, -51), S(-2, -5), S(5, 21), S(11, 32), S(16, 45), S(24, 43), S(34, 37), S(47, 11), };
constexpr PScore bishopMob[14] = {S(-54, -185), S(-26, -107), S(-10, -51), S(-4, -24), S(7, -2), S(11, 16), S(15, 27), S(13, 34), S(14, 42), S(18, 42), S(25, 35), S(47, 17), S(53, 21), S(75, -23), };
constexpr PScore rookMob[15] = {S(-23, -150), S(-29, -101), S(-20, -67), S(-19, -50), S(-20, -32), S(-21, -14), S(-18, -3), S(-13, 0), S(-11, 5), S(-3, 11), S(-3, 17), S(2, 22), S(6, 22), S(21, 3), S(85, -30), };
constexpr PScore queenMob[28] = {S(-136, -451), S(-95, -473), S(-58, -389), S(-40, -302), S(-38, -207), S(-36, -149), S(-33, -115), S(-30, -96), S(-27, -75), S(-23, -63), S(-19, -55), S(-15, -50), S(-12, -47), S(-8, -45), S(-6, -45), S(-5, -46), S(-5, -49), S(-10, -49), S(-7, -56), S(-3, -68), S(10, -95), S(18, -118), S(18, -139), S(27, -164), S(-1, -168), S(-3, -190), S(-52, -143), S(-49, -129), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = -880.0125122070312;
constexpr double KSBMG = 1; 
constexpr double KSCMG = 2.7014167308807373;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 338.7635192871094;
constexpr double KSBEG = 1;
constexpr double KSCEG = -0.5621960759162903;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);