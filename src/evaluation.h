#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,
		S(195, 269)   ,S(152, 270)   ,S(190, 216)   ,S(194, 176)   ,S(174, 184)   ,S(120, 231)   ,S(-77, 321)   ,S(-46, 329)   ,
		S(95, 301)    ,S(121, 280)   ,S(144, 236)   ,S(137, 192)   ,S(150, 203)   ,S(205, 237)   ,S(150, 276)   ,S(108, 286)   ,
		S(90, 253)    ,S(94, 237)    ,S(100, 218)   ,S(116, 188)   ,S(126, 203)   ,S(134, 217)   ,S(97, 243)    ,S(94, 240)    ,
		S(83, 227)    ,S(80, 219)    ,S(96, 201)    ,S(104, 192)   ,S(110, 200)   ,S(113, 208)   ,S(97, 212)    ,S(95, 211)    ,
		S(87, 216)    ,S(85, 210)    ,S(92, 208)    ,S(101, 204)   ,S(113, 220)   ,S(103, 221)   ,S(118, 198)   ,S(107, 195)   ,
		S(85, 226)    ,S(81, 216)    ,S(80, 217)    ,S(90, 221)    ,S(88, 242)    ,S(126, 235)   ,S(137, 207)   ,S(108, 185)   ,
		S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,
	},
	{
		S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,
		S(131, 331)   ,S(104, 336)   ,S(177, 300)   ,S(182, 229)   ,S(178, 212)   ,S(195, 190)   ,S(84, 267)    ,S(78, 268)    ,
		S(118, 321)   ,S(171, 313)   ,S(169, 283)   ,S(152, 235)   ,S(159, 208)   ,S(155, 237)   ,S(147, 257)   ,S(89, 278)    ,
		S(127, 250)   ,S(121, 248)   ,S(126, 232)   ,S(130, 214)   ,S(125, 210)   ,S(109, 223)   ,S(77, 247)    ,S(82, 250)    ,
		S(123, 217)   ,S(111, 221)   ,S(121, 210)   ,S(117, 208)   ,S(106, 202)   ,S(90, 216)    ,S(68, 226)    ,S(65, 230)    ,
		S(123, 204)   ,S(134, 197)   ,S(118, 217)   ,S(107, 219)   ,S(95, 214)    ,S(86, 216)    ,S(72, 220)    ,S(64, 222)    ,
		S(126, 202)   ,S(149, 201)   ,S(136, 226)   ,S(100, 239)   ,S(79, 232)    ,S(74, 229)    ,S(66, 231)    ,S(65, 233)    ,
		S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,S(100, 204)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(241, 586)   ,S(333, 661)   ,S(311, 711)   ,S(428, 679)   ,S(473, 676)   ,S(336, 712)   ,S(335, 675)   ,S(306, 553)   ,
		S(462, 630)   ,S(461, 656)   ,S(511, 658)   ,S(534, 695)   ,S(526, 698)   ,S(553, 647)   ,S(454, 663)   ,S(481, 634)   ,
		S(448, 643)   ,S(474, 670)   ,S(495, 709)   ,S(501, 714)   ,S(532, 707)   ,S(514, 715)   ,S(469, 690)   ,S(457, 666)   ,
		S(477, 666)   ,S(481, 679)   ,S(493, 712)   ,S(488, 739)   ,S(490, 750)   ,S(498, 731)   ,S(477, 723)   ,S(478, 700)   ,
		S(463, 670)   ,S(471, 683)   ,S(470, 710)   ,S(473, 723)   ,S(480, 733)   ,S(479, 721)   ,S(488, 702)   ,S(471, 699)   ,
		S(440, 623)   ,S(453, 659)   ,S(450, 685)   ,S(460, 713)   ,S(460, 711)   ,S(449, 686)   ,S(450, 675)   ,S(442, 654)   ,
		S(423, 643)   ,S(431, 660)   ,S(437, 656)   ,S(444, 679)   ,S(440, 681)   ,S(434, 656)   ,S(424, 668)   ,S(429, 673)   ,
		S(410, 601)   ,S(436, 620)   ,S(431, 634)   ,S(433, 669)   ,S(429, 674)   ,S(426, 665)   ,S(424, 648)   ,S(389, 632)   ,
	},
	{
		S(273, 542)   ,S(340, 647)   ,S(343, 695)   ,S(449, 668)   ,S(447, 666)   ,S(306, 700)   ,S(318, 666)   ,S(272, 560)   ,
		S(454, 628)   ,S(451, 665)   ,S(512, 662)   ,S(570, 676)   ,S(530, 683)   ,S(536, 652)   ,S(460, 652)   ,S(468, 624)   ,
		S(431, 664)   ,S(493, 675)   ,S(494, 716)   ,S(515, 713)   ,S(531, 704)   ,S(510, 703)   ,S(499, 656)   ,S(456, 642)   ,
		S(466, 680)   ,S(486, 695)   ,S(493, 723)   ,S(503, 731)   ,S(500, 732)   ,S(497, 710)   ,S(483, 694)   ,S(477, 667)   ,
		S(470, 683)   ,S(472, 694)   ,S(480, 713)   ,S(482, 723)   ,S(485, 723)   ,S(477, 711)   ,S(473, 687)   ,S(473, 664)   ,
		S(419, 659)   ,S(445, 670)   ,S(455, 685)   ,S(456, 708)   ,S(458, 708)   ,S(447, 683)   ,S(445, 652)   ,S(428, 624)   ,
		S(415, 683)   ,S(404, 683)   ,S(427, 662)   ,S(435, 674)   ,S(440, 678)   ,S(431, 657)   ,S(414, 664)   ,S(415, 638)   ,
		S(379, 654)   ,S(405, 653)   ,S(416, 664)   ,S(411, 673)   ,S(428, 661)   ,S(431, 627)   ,S(425, 627)   ,S(402, 592)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(417, 756)   ,S(395, 756)   ,S(345, 755)   ,S(337, 765)   ,S(360, 750)   ,S(327, 750)   ,S(426, 735)   ,S(411, 744)   ,
		S(415, 744)   ,S(475, 737)   ,S(473, 731)   ,S(441, 740)   ,S(469, 730)   ,S(465, 736)   ,S(432, 748)   ,S(435, 731)   ,
		S(475, 734)   ,S(478, 739)   ,S(502, 734)   ,S(484, 731)   ,S(497, 733)   ,S(491, 757)   ,S(476, 747)   ,S(465, 752)   ,
		S(461, 734)   ,S(497, 729)   ,S(479, 731)   ,S(503, 752)   ,S(504, 756)   ,S(498, 740)   ,S(502, 741)   ,S(453, 749)   ,
		S(471, 713)   ,S(476, 721)   ,S(471, 748)   ,S(490, 744)   ,S(496, 746)   ,S(472, 740)   ,S(478, 727)   ,S(478, 715)   ,
		S(473, 714)   ,S(487, 721)   ,S(475, 734)   ,S(479, 736)   ,S(475, 736)   ,S(478, 734)   ,S(480, 718)   ,S(483, 723)   ,
		S(485, 705)   ,S(482, 694)   ,S(479, 709)   ,S(458, 726)   ,S(458, 728)   ,S(476, 710)   ,S(490, 708)   ,S(480, 690)   ,
		S(490, 701)   ,S(478, 716)   ,S(458, 720)   ,S(452, 713)   ,S(447, 724)   ,S(453, 730)   ,S(455, 715)   ,S(479, 699)   ,
	},
	{
		S(386, 751)   ,S(359, 743)   ,S(368, 746)   ,S(352, 750)   ,S(346, 753)   ,S(321, 754)   ,S(432, 741)   ,S(398, 760)   ,
		S(391, 739)   ,S(439, 749)   ,S(459, 739)   ,S(439, 733)   ,S(457, 731)   ,S(479, 732)   ,S(475, 742)   ,S(440, 732)   ,
		S(462, 750)   ,S(494, 744)   ,S(493, 743)   ,S(502, 734)   ,S(501, 724)   ,S(507, 736)   ,S(495, 733)   ,S(482, 735)   ,
		S(459, 736)   ,S(502, 733)   ,S(491, 742)   ,S(508, 748)   ,S(519, 745)   ,S(491, 727)   ,S(501, 731)   ,S(478, 734)   ,
		S(477, 717)   ,S(466, 730)   ,S(485, 737)   ,S(499, 743)   ,S(497, 742)   ,S(482, 732)   ,S(482, 714)   ,S(464, 716)   ,
		S(475, 720)   ,S(487, 723)   ,S(488, 734)   ,S(491, 727)   ,S(481, 730)   ,S(482, 724)   ,S(482, 712)   ,S(464, 714)   ,
		S(475, 716)   ,S(500, 700)   ,S(482, 715)   ,S(465, 722)   ,S(462, 721)   ,S(466, 709)   ,S(469, 697)   ,S(480, 684)   ,
		S(488, 704)   ,S(457, 714)   ,S(454, 723)   ,S(450, 713)   ,S(451, 712)   ,S(457, 714)   ,S(470, 713)   ,S(483, 700)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(639, 1307)  ,S(632, 1311)  ,S(602, 1321)  ,S(609, 1317)  ,S(603, 1325)  ,S(662, 1319)  ,S(651, 1320)  ,S(655, 1314)  ,
		S(618, 1300)  ,S(604, 1312)  ,S(627, 1306)  ,S(643, 1307)  ,S(627, 1315)  ,S(663, 1293)  ,S(622, 1307)  ,S(630, 1293)  ,
		S(609, 1284)  ,S(661, 1266)  ,S(638, 1281)  ,S(671, 1261)  ,S(687, 1258)  ,S(688, 1275)  ,S(708, 1255)  ,S(639, 1277)  ,
		S(610, 1273)  ,S(631, 1269)  ,S(641, 1270)  ,S(671, 1258)  ,S(656, 1266)  ,S(666, 1267)  ,S(654, 1273)  ,S(634, 1270)  ,
		S(587, 1256)  ,S(587, 1274)  ,S(591, 1268)  ,S(606, 1259)  ,S(596, 1267)  ,S(600, 1273)  ,S(622, 1269)  ,S(601, 1251)  ,
		S(582, 1232)  ,S(593, 1250)  ,S(584, 1246)  ,S(604, 1236)  ,S(600, 1240)  ,S(600, 1246)  ,S(629, 1237)  ,S(598, 1214)  ,
		S(565, 1228)  ,S(596, 1226)  ,S(594, 1232)  ,S(604, 1226)  ,S(602, 1227)  ,S(615, 1221)  ,S(624, 1211)  ,S(550, 1230)  ,
		S(602, 1228)  ,S(604, 1233)  ,S(607, 1234)  ,S(614, 1225)  ,S(613, 1227)  ,S(617, 1246)  ,S(612, 1236)  ,S(602, 1208)  ,
	},
	{
		S(652, 1303)  ,S(611, 1326)  ,S(633, 1323)  ,S(620, 1314)  ,S(631, 1306)  ,S(635, 1299)  ,S(663, 1288)  ,S(668, 1290)  ,
		S(596, 1306)  ,S(618, 1309)  ,S(652, 1300)  ,S(641, 1301)  ,S(641, 1297)  ,S(655, 1281)  ,S(621, 1292)  ,S(634, 1286)  ,
		S(605, 1291)  ,S(666, 1270)  ,S(656, 1285)  ,S(678, 1258)  ,S(691, 1249)  ,S(660, 1264)  ,S(692, 1247)  ,S(637, 1269)  ,
		S(597, 1278)  ,S(640, 1272)  ,S(659, 1269)  ,S(662, 1259)  ,S(661, 1257)  ,S(649, 1258)  ,S(650, 1253)  ,S(633, 1261)  ,
		S(566, 1247)  ,S(600, 1263)  ,S(593, 1272)  ,S(595, 1265)  ,S(598, 1258)  ,S(593, 1265)  ,S(593, 1266)  ,S(592, 1249)  ,
		S(555, 1222)  ,S(600, 1235)  ,S(601, 1237)  ,S(593, 1233)  ,S(593, 1233)  ,S(591, 1238)  ,S(609, 1238)  ,S(587, 1222)  ,
		S(463, 1249)  ,S(578, 1217)  ,S(596, 1226)  ,S(595, 1225)  ,S(599, 1220)  ,S(601, 1217)  ,S(605, 1212)  ,S(561, 1213)  ,
		S(556, 1232)  ,S(582, 1243)  ,S(611, 1233)  ,S(613, 1227)  ,S(611, 1219)  ,S(609, 1224)  ,S(615, 1218)  ,S(603, 1212)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1242, 1487) ,S(1273, 1483) ,S(1253, 1519) ,S(1257, 1528) ,S(1240, 1561) ,S(1277, 1557) ,S(1280, 1522) ,S(1267, 1500) ,
		S(1272, 1461) ,S(1217, 1508) ,S(1268, 1483) ,S(1208, 1552) ,S(1212, 1590) ,S(1292, 1562) ,S(1209, 1562) ,S(1288, 1500) ,
		S(1275, 1463) ,S(1280, 1455) ,S(1267, 1482) ,S(1276, 1496) ,S(1286, 1532) ,S(1291, 1549) ,S(1286, 1549) ,S(1267, 1563) ,
		S(1288, 1448) ,S(1287, 1485) ,S(1278, 1473) ,S(1263, 1544) ,S(1264, 1563) ,S(1299, 1559) ,S(1308, 1550) ,S(1305, 1523) ,
		S(1289, 1424) ,S(1289, 1473) ,S(1277, 1488) ,S(1272, 1538) ,S(1273, 1532) ,S(1290, 1521) ,S(1301, 1495) ,S(1306, 1477) ,
		S(1297, 1407) ,S(1302, 1437) ,S(1292, 1471) ,S(1289, 1464) ,S(1291, 1456) ,S(1295, 1481) ,S(1311, 1443) ,S(1307, 1415) ,
		S(1300, 1395) ,S(1302, 1403) ,S(1311, 1390) ,S(1304, 1425) ,S(1307, 1413) ,S(1325, 1355) ,S(1312, 1359) ,S(1279, 1404) ,
		S(1300, 1388) ,S(1305, 1390) ,S(1310, 1389) ,S(1316, 1418) ,S(1317, 1377) ,S(1290, 1375) ,S(1288, 1348) ,S(1285, 1371) ,
	},
	{
		S(1284, 1433) ,S(1282, 1465) ,S(1282, 1490) ,S(1267, 1531) ,S(1249, 1531) ,S(1274, 1491) ,S(1269, 1469) ,S(1274, 1450) ,
		S(1266, 1475) ,S(1205, 1525) ,S(1275, 1523) ,S(1204, 1579) ,S(1192, 1593) ,S(1271, 1485) ,S(1223, 1510) ,S(1291, 1445) ,
		S(1272, 1503) ,S(1275, 1502) ,S(1264, 1527) ,S(1287, 1521) ,S(1290, 1495) ,S(1276, 1495) ,S(1305, 1445) ,S(1305, 1455) ,
		S(1289, 1483) ,S(1301, 1526) ,S(1291, 1519) ,S(1283, 1546) ,S(1277, 1532) ,S(1293, 1470) ,S(1307, 1477) ,S(1311, 1454) ,
		S(1295, 1439) ,S(1295, 1494) ,S(1288, 1504) ,S(1283, 1530) ,S(1288, 1510) ,S(1285, 1481) ,S(1300, 1454) ,S(1297, 1427) ,
		S(1273, 1432) ,S(1298, 1438) ,S(1298, 1469) ,S(1295, 1448) ,S(1297, 1447) ,S(1301, 1450) ,S(1308, 1423) ,S(1302, 1390) ,
		S(1254, 1400) ,S(1289, 1369) ,S(1321, 1351) ,S(1314, 1401) ,S(1309, 1413) ,S(1316, 1369) ,S(1316, 1379) ,S(1310, 1365) ,
		S(1259, 1375) ,S(1286, 1339) ,S(1291, 1344) ,S(1310, 1358) ,S(1315, 1380) ,S(1318, 1356) ,S(1318, 1368) ,S(1309, 1353) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(87, -41)    ,S(63, -32)    ,S(54, -31)    ,S(-24, -191)  ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(144, 13)    ,S(152, 31)    ,S(69, 65)     ,S(-7, -31)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(165, 43)    ,S(229, 49)    ,S(167, 58)    ,S(37, 9)      ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(121, 62)    ,S(140, 55)    ,S(113, 38)    ,S(-55, 13)    ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(76, 63)     ,S(81, 42)     ,S(77, 13)     ,S(-62, -16)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(27, 50)     ,S(28, 28)     ,S(20, 0)      ,S(-45, -18)   ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-65, 38)    ,S(-51, 34)    ,S(-4, -2)     ,S(1, -44)     ,
		S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(-68, -29)   ,S(-94, 8)     ,S(-5, -38)    ,S(4, -125)    ,
	},
	{
		S(-15, -201)  ,S(44, -77)    ,S(79, -62)    ,S(98, -35)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-47, -43)   ,S(82, 38)     ,S(140, 17)    ,S(182, -10)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(0, 12)      ,S(162, 45)    ,S(196, 37)    ,S(173, 28)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-45, 13)    ,S(123, 22)    ,S(144, 43)    ,S(119, 49)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-57, -28)   ,S(69, 4)      ,S(114, 25)    ,S(72, 51)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-73, -19)   ,S(11, -9)     ,S(38, 12)     ,S(19, 35)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-12, -34)   ,S(-16, -14)   ,S(-21, 8)     ,S(-69, 22)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-27, -109)  ,S(-13, -53)   ,S(-50, -12)   ,S(-93, -27)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(100, 204), S(421, 621), S(435, 663), S(584, 1183), S(1267, 1413), };
constexpr PScore knightMob[9] = {S(-25, -132), S(-7, -53), S(5, -6), S(11, 20), S(16, 31), S(21, 44), S(29, 43), S(39, 37), S(51, 12), };
constexpr PScore bishopMob[14] = {S(-48, -181), S(-19, -105), S(-1, -51), S(6, -22), S(17, -1), S(22, 17), S(26, 30), S(24, 37), S(24, 46), S(28, 49), S(36, 41), S(59, 26), S(67, 30), S(88, -12), };
constexpr PScore rookMob[15] = {S(-22, -139), S(-27, -89), S(-19, -56), S(-18, -39), S(-17, -22), S(-19, -3), S(-16, 6), S(-11, 6), S(-7, 11), S(1, 15), S(1, 21), S(7, 25), S(10, 25), S(27, 6), S(91, -30), };
constexpr PScore queenMob[28] = {S(-128, -455), S(-85, -480), S(-48, -381), S(-30, -292), S(-26, -198), S(-24, -139), S(-20, -105), S(-17, -87), S(-13, -66), S(-10, -54), S(-5, -47), S(-1, -42), S(3, -41), S(7, -39), S(9, -38), S(9, -40), S(10, -42), S(5, -40), S(9, -47), S(12, -55), S(26, -79), S(32, -98), S(31, -111), S(44, -136), S(19, -139), S(28, -166), S(-3, -130), S(-12, -104), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 866.1942749023438;
constexpr double KSBMG = 1;
constexpr double KSCMG = -3.1110267639160156;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 1088.321044921875;
constexpr double KSBEG = 1;
constexpr double KSCEG = 2.771665334701538;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);