#pragma once

#include "BBmacros.h"
#include "Position.h"

/**
 * @brief The simpleEval function evaluates a given board, taking into account the material value of the board.
 * @param board The board to evaluate.
 * @return The value of the board.
 * @note This evaluation function is not very good, but it is a good starting point.
 */

const PScore materialValues[5] = {
    S(109,161), S(403,465), S(405,492), S(521,767), S(1045,1183)
};

const PScore pawnTable[64] = {
    S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    ,
    S(66,94)  , S(27,99)  , S(62,64)  , S(89,8)   , S(84,5)   , S(59,38)  , S(-52,105), S(-48,112),
    S(8,73)   , S(43,65)  , S(66,21)  , S(62,-18) , S(77,-25) , S(101,2)  , S(69,47)  , S(10,64)  ,
    S(2,38)   , S(-3,30)  , S(13,9)   , S(25,-14) , S(36,-17) , S(28,-4)  , S(-2,23)  , S(1,27)   ,
    S(-12,15) , S(-19,12) , S(-2,-2)  , S(13,-13) , S(13,-15) , S(11,-6)  , S(-12,4)  , S(-9,6)   ,
    S(-11,8)  , S(-6,4)   , S(-3,6)   , S(5,2)    , S(16,2)   , S(0,6)    , S(6,-1)   , S(-5,-2)  ,
    S(-12,16) , S(-6,16)  , S(-6,24)  , S(-7,24)  , S(-3,22)  , S(6,24)   , S(12,9)   , S(-15,6)  ,
    S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    , S(0,0)    
};

const PScore knightTable[64] = {
    S(-102,-25), S(-63,41)  , S(-22,68)  , S(56,49)   , S(81,47)   , S(-17,62)  , S(-70,56)  , S(-54,-51) ,
    S(49,22)   , S(44,47)   , S(106,39)  , S(178,40)  , S(139,52)  , S(168,28)  , S(42,41)   , S(65,16)   ,
    S(70,32)   , S(108,35)  , S(115,69)  , S(130,69)  , S(168,57)  , S(144,61)  , S(131,28)  , S(76,32)   ,
    S(74,43)   , S(89,55)   , S(101,76)  , S(112,86)  , S(107,87)  , S(122,69)  , S(102,60)  , S(80,44)   ,
    S(57,54)   , S(71,50)   , S(62,72)   , S(64,80)   , S(76,82)   , S(66,71)   , S(87,50)   , S(58,50)   ,
    S(8,22)    , S(25,29)   , S(28,53)   , S(32,69)   , S(33,71)   , S(27,54)   , S(27,32)   , S(16,18)   ,
    S(-1,37)   , S(-15,39)  , S(5,25)    , S(18,42)   , S(17,42)   , S(3,26)    , S(-9,31)   , S(-2,38)   ,
    S(-25,15)  , S(3,22)    , S(6,16)    , S(0,28)    , S(3,35)    , S(-1,23)   , S(-1,27)   , S(-35,7)   
};

const PScore bishopTable[64] = {
    S(11,68) , S(-19,65), S(-37,63), S(-54,69), S(-35,71), S(-58,60), S(3,57)  , S(9,60)  ,
    S(5,56)  , S(42,59) , S(48,55) , S(34,51) , S(66,41) , S(63,51) , S(44,58) , S(17,53) ,
    S(58,61) , S(76,55) , S(71,53) , S(78,43) , S(82,45) , S(91,52) , S(92,50) , S(77,57) ,
    S(49,54) , S(67,54) , S(73,47) , S(89,59) , S(94,58) , S(75,50) , S(73,52) , S(48,57) ,
    S(49,40) , S(42,47) , S(47,61) , S(67,55) , S(72,57) , S(44,57) , S(43,46) , S(43,40) ,
    S(49,38) , S(59,45) , S(48,51) , S(50,52) , S(46,54) , S(47,49) , S(52,40) , S(52,38) ,
    S(59,34) , S(50,21) , S(44,30) , S(24,45) , S(25,47) , S(35,36) , S(53,25) , S(49,27) ,
    S(63,32) , S(48,42) , S(32,49) , S(18,33) , S(12,40) , S(22,51) , S(40,44) , S(52,29) 
};

const PScore rookTable[64] = {
    S(96,130) , S(74,139) , S(62,147) , S(66,144) , S(76,142) , S(84,142) , S(102,136), S(123,125),
    S(78,124) , S(74,131) , S(96,128) , S(117,119), S(113,122), S(128,116), S(97,123) , S(99,119) ,
    S(67,120) , S(123,100), S(101,112), S(123,102), S(144,95) , S(138,99) , S(164,89) , S(107,107),
    S(60,113) , S(89,106) , S(92,111) , S(108,101), S(105,102), S(107,100), S(114,102), S(94,103) ,
    S(25,97)  , S(47,106) , S(45,107) , S(47,104) , S(43,105) , S(48,108) , S(66,104) , S(47,92)  ,
    S(12,78)  , S(54,85)  , S(39,89)  , S(38,88)  , S(43,86)  , S(46,87)  , S(85,75)  , S(44,61)  ,
    S(-16,78) , S(30,76)  , S(43,80)  , S(45,78)  , S(46,74)  , S(61,69)  , S(66,59)  , S(1,66)   ,
    S(30,80)  , S(42,80)  , S(48,82)  , S(55,75)  , S(54,72)  , S(59,82)  , S(59,74)  , S(47,68)  
};

const PScore queenTable[64] = {
    S(167,193), S(139,237), S(154,256), S(178,271), S(173,279), S(172,266), S(154,241), S(158,225),
    S(149,197), S(90,255) , S(130,268), S(109,310), S(130,323), S(166,275), S(89,279) , S(143,231),
    S(160,227), S(166,217), S(147,277), S(157,286), S(156,287), S(189,304), S(214,226), S(214,249),
    S(148,241), S(160,261), S(158,260), S(140,292), S(143,308), S(161,294), S(176,292), S(177,274),
    S(112,303), S(123,329), S(104,345), S(109,373), S(115,367), S(112,364), S(131,331), S(137,321),
    S(116,266), S(122,278), S(119,306), S(113,304), S(117,303), S(121,316), S(139,285), S(132,264),
    S(108,246), S(124,231), S(131,228), S(130,252), S(127,257), S(136,224), S(129,228), S(109,235),
    S(111,231), S(125,227), S(128,225), S(130,243), S(129,231), S(128,213), S(133,212), S(118,206)
};

const PScore kingTable[64] = {
    S(-12,-160), S(20,-68)  , S(22,-45)  , S(-9,-9)   , S(13,-28)  , S(36,-23)  , S(76,-28)  , S(14,-159) ,
    S(-56,-29) , S(34,33)   , S(9,31)    , S(73,8)    , S(36,22)   , S(83,32)   , S(58,46)   , S(47,-33)  ,
    S(-40,7)   , S(97,41)   , S(72,47)   , S(21,50)   , S(35,48)   , S(115,45)  , S(102,47)  , S(9,10)    ,
    S(-56,6)   , S(26,34)   , S(14,54)   , S(-43,66)  , S(-23,63)  , S(21,55)   , S(33,40)   , S(-69,10)  ,
    S(-63,-19) , S(3,15)    , S(-23,45)  , S(-80,67)  , S(-79,66)  , S(-32,46)  , S(-25,24)  , S(-96,-7)  ,
    S(-42,-15) , S(-26,3)   , S(-52,28)  , S(-103,52) , S(-97,49)  , S(-77,34)  , S(-44,7)   , S(-52,-12) ,
    S(62,-39)  , S(5,-12)   , S(-36,8)   , S(-107,25) , S(-97,22)  , S(-72,17)  , S(12,-16)  , S(56,-47)  ,
    S(60,-111) , S(54,-63)  , S(8,-31)   , S(-63,-36) , S(-17,-51) , S(-53,-23) , S(58,-64)  , S(79,-126) 
};

const PScore knightMob[9] = {
    S(14,-102), S(28,-30), S(43,10), S(52,32), S(60,44), S(68,57), S(77,56), S(89,51), S(100,32)
};

const PScore bishopMob[14] = {
    S(-30,-154), S(18,-83), S(44,-25), S(55,3), S(66,23), S(73,40), S(80,53), S(84,59), S(89,68), S(96,69), S(111,65), S(140,56), S(157,61), S(178,33)
};

const PScore rookMob[15] = {
    S(38,-57), S(32,-5), S(44,48), S(47,60), S(48,81), S(47,100), S(51,109), S(57,112), S(60,118), S(71,122), S(75,128), S(85,131), S(89,136), S(110,123), S(153,105)
};

const PScore queenMob[28] = {
    S(-23,-151), S(35,-127), S(79,-59), S(97,57), S(99,183), S(103,265), S(111,307), S(116,328), S(121,349), S(129,357), S(135,361), S(141,368), S(146,371), S(149,377), S(152,381), S(154,385), S(157,387), S(154,392), S(159,391), S(168,387), S(175,383), S(188,370), S(199,363), S(226,346), S(252,326), S(266,308), S(220,252), S(200,241)
};

extern const PScore* pestoTables[6];

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };
extern PScore PSQTs[12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);