#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,
		S(150, 310)   ,S(144, 290)   ,S(138, 270)   ,S(130, 232)   ,S(120, 202)   ,S(115, 184)   ,S(107, 183)   ,S(105, 183)   ,
		S(145, 364)   ,S(156, 344)   ,S(150, 307)   ,S(135, 235)   ,S(128, 185)   ,S(139, 181)   ,S(129, 191)   ,S(114, 199)   ,
		S(123, 263)   ,S(118, 248)   ,S(121, 226)   ,S(122, 197)   ,S(153, 164)   ,S(148, 167)   ,S(94, 189)    ,S(88, 185)    ,
		S(129, 211)   ,S(124, 209)   ,S(124, 199)   ,S(117, 191)   ,S(121, 180)   ,S(111, 194)   ,S(79, 201)    ,S(68, 201)    ,
		S(139, 183)   ,S(160, 180)   ,S(122, 197)   ,S(117, 202)   ,S(110, 198)   ,S(94, 206)    ,S(68, 206)    ,S(66, 205)    ,
		S(140, 182)   ,S(175, 173)   ,S(148, 192)   ,S(99, 208)    ,S(92, 208)    ,S(80, 213)    ,S(58, 215)    ,S(66, 207)    ,
		S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,
	},
	{
		S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,
		S(102, 197)   ,S(98, 189)    ,S(119, 190)   ,S(128, 199)   ,S(139, 215)   ,S(150, 246)   ,S(158, 272)   ,S(173, 291)   ,
		S(124, 226)   ,S(149, 225)   ,S(206, 209)   ,S(143, 177)   ,S(143, 183)   ,S(143, 235)   ,S(137, 272)   ,S(98, 297)    ,
		S(106, 206)   ,S(113, 202)   ,S(148, 177)   ,S(135, 183)   ,S(124, 166)   ,S(112, 199)   ,S(109, 214)   ,S(108, 239)   ,
		S(103, 191)   ,S(109, 196)   ,S(126, 186)   ,S(122, 183)   ,S(121, 168)   ,S(112, 181)   ,S(97, 195)    ,S(101, 212)   ,
		S(113, 178)   ,S(130, 184)   ,S(120, 202)   ,S(128, 204)   ,S(114, 182)   ,S(108, 187)   ,S(105, 190)   ,S(103, 201)   ,
		S(113, 163)   ,S(142, 187)   ,S(134, 217)   ,S(100, 222)   ,S(101, 194)   ,S(94, 194)    ,S(99, 193)    ,S(98, 207)    ,
		S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,S(119, 207)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(477, 581)   ,S(479, 584)   ,S(480, 586)   ,S(480, 584)   ,S(480, 584)   ,S(480, 583)   ,S(480, 584)   ,S(477, 580)   ,
		S(474, 579)   ,S(478, 582)   ,S(485, 579)   ,S(487, 592)   ,S(484, 587)   ,S(482, 581)   ,S(480, 581)   ,S(481, 580)   ,
		S(474, 583)   ,S(481, 583)   ,S(489, 602)   ,S(492, 598)   ,S(493, 592)   ,S(486, 584)   ,S(479, 577)   ,S(480, 580)   ,
		S(486, 594)   ,S(502, 594)   ,S(520, 613)   ,S(533, 621)   ,S(531, 623)   ,S(505, 603)   ,S(487, 592)   ,S(491, 590)   ,
		S(498, 595)   ,S(493, 593)   ,S(510, 606)   ,S(527, 612)   ,S(534, 616)   ,S(520, 601)   ,S(495, 591)   ,S(493, 593)   ,
		S(461, 577)   ,S(468, 573)   ,S(478, 572)   ,S(493, 596)   ,S(498, 597)   ,S(473, 583)   ,S(465, 571)   ,S(446, 569)   ,
		S(469, 584)   ,S(468, 583)   ,S(457, 571)   ,S(462, 577)   ,S(462, 576)   ,S(457, 572)   ,S(470, 580)   ,S(473, 581)   ,
		S(471, 581)   ,S(447, 578)   ,S(463, 578)   ,S(468, 584)   ,S(459, 579)   ,S(454, 575)   ,S(429, 573)   ,S(473, 580)   ,
	},
	{
		S(477, 580)   ,S(480, 585)   ,S(480, 587)   ,S(482, 588)   ,S(480, 588)   ,S(476, 588)   ,S(478, 585)   ,S(468, 577)   ,
		S(485, 583)   ,S(480, 583)   ,S(496, 588)   ,S(508, 610)   ,S(503, 609)   ,S(489, 583)   ,S(467, 579)   ,S(460, 571)   ,
		S(487, 589)   ,S(483, 590)   ,S(521, 610)   ,S(516, 614)   ,S(511, 618)   ,S(502, 613)   ,S(473, 582)   ,S(466, 574)   ,
		S(508, 619)   ,S(498, 631)   ,S(527, 624)   ,S(523, 645)   ,S(524, 635)   ,S(528, 603)   ,S(509, 584)   ,S(482, 591)   ,
		S(507, 613)   ,S(543, 613)   ,S(534, 607)   ,S(528, 629)   ,S(522, 616)   ,S(510, 605)   ,S(492, 593)   ,S(488, 592)   ,
		S(476, 578)   ,S(497, 573)   ,S(493, 577)   ,S(508, 603)   ,S(500, 605)   ,S(484, 585)   ,S(471, 568)   ,S(468, 561)   ,
		S(463, 589)   ,S(466, 584)   ,S(470, 566)   ,S(474, 584)   ,S(474, 585)   ,S(465, 571)   ,S(451, 576)   ,S(445, 576)   ,
		S(458, 578)   ,S(448, 578)   ,S(456, 583)   ,S(455, 586)   ,S(461, 588)   ,S(451, 569)   ,S(457, 561)   ,S(456, 571)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(501, 622)   ,S(500, 623)   ,S(500, 623)   ,S(500, 620)   ,S(499, 617)   ,S(500, 618)   ,S(501, 619)   ,S(500, 621)   ,
		S(491, 619)   ,S(496, 631)   ,S(501, 627)   ,S(498, 619)   ,S(500, 618)   ,S(501, 616)   ,S(501, 616)   ,S(489, 612)   ,
		S(504, 630)   ,S(508, 634)   ,S(508, 634)   ,S(505, 628)   ,S(507, 623)   ,S(509, 623)   ,S(503, 614)   ,S(503, 621)   ,
		S(505, 635)   ,S(516, 640)   ,S(510, 645)   ,S(518, 650)   ,S(527, 643)   ,S(510, 622)   ,S(517, 624)   ,S(504, 622)   ,
		S(503, 623)   ,S(507, 631)   ,S(518, 640)   ,S(531, 644)   ,S(521, 637)   ,S(514, 629)   ,S(505, 619)   ,S(495, 617)   ,
		S(503, 625)   ,S(533, 634)   ,S(533, 637)   ,S(513, 623)   ,S(519, 629)   ,S(497, 621)   ,S(494, 617)   ,S(486, 614)   ,
		S(514, 623)   ,S(541, 617)   ,S(522, 626)   ,S(494, 622)   ,S(489, 624)   ,S(491, 616)   ,S(492, 611)   ,S(491, 614)   ,
		S(517, 622)   ,S(490, 619)   ,S(497, 629)   ,S(493, 620)   ,S(478, 618)   ,S(480, 624)   ,S(490, 615)   ,S(493, 611)   ,
	},
	{
		S(499, 619)   ,S(501, 619)   ,S(494, 613)   ,S(496, 615)   ,S(496, 622)   ,S(495, 618)   ,S(499, 621)   ,S(503, 626)   ,
		S(476, 611)   ,S(494, 616)   ,S(504, 619)   ,S(493, 617)   ,S(495, 620)   ,S(500, 625)   ,S(493, 632)   ,S(473, 620)   ,
		S(505, 642)   ,S(518, 629)   ,S(527, 640)   ,S(519, 632)   ,S(505, 625)   ,S(518, 633)   ,S(505, 636)   ,S(508, 631)   ,
		S(500, 639)   ,S(522, 643)   ,S(526, 638)   ,S(518, 649)   ,S(530, 645)   ,S(499, 631)   ,S(510, 631)   ,S(489, 636)   ,
		S(509, 627)   ,S(519, 628)   ,S(511, 640)   ,S(520, 642)   ,S(509, 642)   ,S(506, 641)   ,S(508, 622)   ,S(491, 620)   ,
		S(505, 630)   ,S(513, 618)   ,S(517, 622)   ,S(510, 631)   ,S(511, 631)   ,S(509, 625)   ,S(524, 619)   ,S(511, 618)   ,
		S(507, 607)   ,S(528, 598)   ,S(502, 615)   ,S(496, 632)   ,S(497, 625)   ,S(513, 609)   ,S(519, 591)   ,S(516, 616)   ,
		S(506, 604)   ,S(490, 617)   ,S(488, 640)   ,S(476, 627)   ,S(487, 624)   ,S(496, 630)   ,S(520, 616)   ,S(535, 603)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(638, 1097)  ,S(635, 1091)  ,S(631, 1082)  ,S(629, 1079)  ,S(628, 1069)  ,S(628, 1065)  ,S(631, 1073)  ,S(635, 1082)  ,
		S(637, 1089)  ,S(638, 1092)  ,S(639, 1081)  ,S(638, 1080)  ,S(631, 1067)  ,S(627, 1056)  ,S(630, 1064)  ,S(634, 1062)  ,
		S(631, 1075)  ,S(635, 1068)  ,S(637, 1071)  ,S(642, 1061)  ,S(632, 1056)  ,S(631, 1051)  ,S(636, 1052)  ,S(632, 1054)  ,
		S(631, 1065)  ,S(629, 1060)  ,S(639, 1060)  ,S(644, 1060)  ,S(634, 1052)  ,S(634, 1051)  ,S(638, 1051)  ,S(635, 1049)  ,
		S(619, 1051)  ,S(625, 1054)  ,S(622, 1051)  ,S(621, 1054)  ,S(620, 1046)  ,S(621, 1049)  ,S(627, 1054)  ,S(617, 1043)  ,
		S(608, 1041)  ,S(619, 1045)  ,S(612, 1039)  ,S(614, 1038)  ,S(610, 1035)  ,S(616, 1038)  ,S(620, 1047)  ,S(612, 1038)  ,
		S(609, 1041)  ,S(610, 1039)  ,S(613, 1037)  ,S(608, 1034)  ,S(607, 1031)  ,S(612, 1032)  ,S(619, 1038)  ,S(606, 1035)  ,
		S(566, 1049)  ,S(606, 1056)  ,S(620, 1040)  ,S(615, 1030)  ,S(615, 1022)  ,S(624, 1018)  ,S(621, 1016)  ,S(607, 1022)  ,
	},
	{
		S(645, 1105)  ,S(641, 1104)  ,S(641, 1104)  ,S(636, 1095)  ,S(635, 1106)  ,S(634, 1115)  ,S(640, 1117)  ,S(638, 1113)  ,
		S(643, 1080)  ,S(639, 1085)  ,S(647, 1083)  ,S(654, 1094)  ,S(654, 1098)  ,S(642, 1094)  ,S(617, 1097)  ,S(622, 1093)  ,
		S(642, 1069)  ,S(655, 1071)  ,S(668, 1077)  ,S(674, 1066)  ,S(674, 1071)  ,S(654, 1081)  ,S(667, 1071)  ,S(624, 1081)  ,
		S(649, 1065)  ,S(655, 1068)  ,S(683, 1066)  ,S(687, 1064)  ,S(686, 1065)  ,S(664, 1068)  ,S(649, 1069)  ,S(623, 1069)  ,
		S(614, 1045)  ,S(644, 1068)  ,S(635, 1066)  ,S(631, 1062)  ,S(632, 1061)  ,S(612, 1070)  ,S(610, 1073)  ,S(599, 1059)  ,
		S(602, 1026)  ,S(648, 1053)  ,S(631, 1047)  ,S(628, 1041)  ,S(623, 1044)  ,S(601, 1049)  ,S(606, 1055)  ,S(587, 1042)  ,
		S(571, 1024)  ,S(634, 1042)  ,S(634, 1028)  ,S(622, 1035)  ,S(617, 1035)  ,S(603, 1042)  ,S(602, 1039)  ,S(579, 1034)  ,
		S(603, 1014)  ,S(613, 1047)  ,S(635, 1054)  ,S(633, 1031)  ,S(630, 1033)  ,S(621, 1041)  ,S(617, 1041)  ,S(619, 1037)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(803, 1014)  ,S(806, 1017)  ,S(808, 1019)  ,S(808, 1021)  ,S(806, 1018)  ,S(806, 1017)  ,S(806, 1018)  ,S(809, 1019)  ,
		S(785, 1003)  ,S(784, 1006)  ,S(799, 1012)  ,S(799, 1015)  ,S(803, 1018)  ,S(807, 1017)  ,S(805, 1016)  ,S(806, 1016)  ,
		S(796, 1009)  ,S(797, 1006)  ,S(801, 1012)  ,S(802, 1014)  ,S(808, 1019)  ,S(815, 1022)  ,S(814, 1019)  ,S(820, 1020)  ,
		S(801, 1009)  ,S(797, 1012)  ,S(796, 1010)  ,S(801, 1016)  ,S(807, 1019)  ,S(814, 1021)  ,S(826, 1025)  ,S(820, 1021)  ,
		S(796, 1014)  ,S(807, 1021)  ,S(803, 1023)  ,S(821, 1035)  ,S(812, 1028)  ,S(817, 1028)  ,S(820, 1025)  ,S(815, 1024)  ,
		S(788, 1011)  ,S(804, 1017)  ,S(818, 1026)  ,S(808, 1022)  ,S(806, 1021)  ,S(817, 1023)  ,S(819, 1022)  ,S(814, 1019)  ,
		S(779, 1007)  ,S(788, 1009)  ,S(833, 1013)  ,S(827, 1023)  ,S(810, 1021)  ,S(811, 1017)  ,S(821, 1018)  ,S(814, 1018)  ,
		S(770, 1007)  ,S(790, 1009)  ,S(794, 1010)  ,S(800, 1015)  ,S(814, 1019)  ,S(801, 1013)  ,S(803, 1015)  ,S(811, 1014)  ,
	},
	{
		S(823, 1032)  ,S(816, 1027)  ,S(817, 1030)  ,S(817, 1036)  ,S(815, 1032)  ,S(805, 1021)  ,S(796, 1011)  ,S(788, 1004)  ,
		S(844, 1035)  ,S(810, 1021)  ,S(828, 1033)  ,S(796, 1023)  ,S(773, 1003)  ,S(777, 993)   ,S(738, 981)   ,S(776, 981)   ,
		S(853, 1048)  ,S(853, 1044)  ,S(856, 1052)  ,S(812, 1025)  ,S(791, 1003)  ,S(778, 989)   ,S(772, 983)   ,S(777, 991)   ,
		S(859, 1052)  ,S(871, 1059)  ,S(851, 1055)  ,S(808, 1031)  ,S(791, 1006)  ,S(779, 989)   ,S(797, 1002)  ,S(784, 992)   ,
		S(846, 1057)  ,S(855, 1057)  ,S(844, 1068)  ,S(820, 1068)  ,S(811, 1066)  ,S(801, 1033)  ,S(808, 1035)  ,S(792, 1024)  ,
		S(838, 1026)  ,S(845, 1036)  ,S(825, 1054)  ,S(820, 1039)  ,S(807, 1043)  ,S(811, 1046)  ,S(819, 1031)  ,S(797, 1015)  ,
		S(795, 1012)  ,S(835, 1011)  ,S(841, 1000)  ,S(821, 1030)  ,S(819, 1039)  ,S(822, 1001)  ,S(809, 1020)  ,S(798, 1014)  ,
		S(772, 1006)  ,S(788, 1008)  ,S(799, 1014)  ,S(829, 1013)  ,S(830, 1049)  ,S(820, 1019)  ,S(810, 1013)  ,S(805, 1017)  ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-1, -8)     ,S(-1, -6)     ,S(0, -2)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-1, -7)     ,S(4, 16)      ,S(4, 13)      ,S(2, 4)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(0, -3)      ,S(11, 39)     ,S(14, 47)     ,S(8, 31)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-1, -3)     ,S(11, 37)     ,S(17, 59)     ,S(14, 61)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-6, -25)    ,S(11, 18)     ,S(18, 47)     ,S(12, 53)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-14, -40)   ,S(3, -9)      ,S(13, 16)     ,S(7, 31)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(1, -59)     ,S(14, -35)    ,S(-11, -10)   ,S(-43, 2)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-20, -93)   ,S(11, -85)    ,S(-33, -38)   ,S(-46, -50)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(-1, -5)     ,S(0, 0)       ,S(0, -1)      ,S(0, -2)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-2, -13)    ,S(2, 13)      ,S(1, 4)       ,S(1, 2)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-2, -12)    ,S(8, 31)      ,S(9, 30)      ,S(6, 20)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-5, -14)    ,S(13, 33)     ,S(16, 58)     ,S(13, 59)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-16, -43)   ,S(23, 25)     ,S(20, 45)     ,S(16, 57)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-24, -32)   ,S(17, -12)    ,S(19, 21)     ,S(16, 43)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(5, -44)     ,S(8, -23)     ,S(-33, 17)    ,S(-45, 21)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(17, -129)   ,S(1, -59)     ,S(-45, -27)   ,S(-37, -61)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(119, 207), S(481, 585), S(501, 620), S(624, 1051), S(803, 1013), };
constexpr PScore knightMob[9] = {S(-48, -28), S(-9, -37), S(2, 13), S(10, 39), S(15, 59), S(21, 75), S(27, 77), S(39, 74), S(53, 55), };
constexpr PScore bishopMob[14] = {S(-55, -72), S(-17, -74), S(-3, -28), S(7, 0), S(19, 24), S(24, 41), S(28, 57), S(25, 65), S(28, 76), S(35, 80), S(61, 57), S(78, 66), S(36, 56), S(19, 34), };
constexpr PScore rookMob[15] = {S(15, -9), S(8, -17), S(18, 10), S(19, 32), S(19, 48), S(17, 73), S(23, 83), S(26, 85), S(33, 88), S(40, 93), S(40, 98), S(45, 107), S(44, 105), S(67, 86), S(92, 68), };
constexpr PScore queenMob[28] = {S(-14, -2), S(-69, -11), S(-39, -9), S(-17, -10), S(13, -9), S(22, -10), S(25, -8), S(31, 4), S(34, 26), S(38, 42), S(43, 55), S(48, 59), S(50, 62), S(55, 66), S(57, 69), S(57, 71), S(52, 73), S(52, 78), S(55, 82), S(60, 85), S(60, 79), S(49, 67), S(30, 41), S(22, 31), S(9, 13), S(5, 8), S(1, 2), S(1, 2), };
constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 1158.8814697265625;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.8037192821502686;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 1423.5799560546875;
constexpr double KSBEG = 1;
constexpr double KSCEG = 4.264185428619385;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);