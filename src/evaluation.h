#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,
		S(236, 417)   ,S(212, 428)   ,S(166, 402)   ,S(204, 290)   ,S(231, 167)   ,S(191, 94)    ,S(0, 162)     ,S(6, 198)     ,
		S(107, 400)   ,S(132, 391)   ,S(126, 348)   ,S(137, 253)   ,S(182, 162)   ,S(225, 146)   ,S(166, 176)   ,S(116, 215)   ,
		S(123, 288)   ,S(121, 266)   ,S(122, 246)   ,S(122, 217)   ,S(147, 189)   ,S(143, 188)   ,S(87, 218)    ,S(84, 216)    ,
		S(124, 232)   ,S(118, 229)   ,S(120, 216)   ,S(116, 211)   ,S(116, 199)   ,S(106, 205)   ,S(74, 215)    ,S(66, 218)    ,
		S(135, 204)   ,S(151, 199)   ,S(128, 213)   ,S(119, 217)   ,S(108, 211)   ,S(94, 217)    ,S(64, 222)    ,S(64, 221)    ,
		S(136, 200)   ,S(168, 192)   ,S(152, 209)   ,S(108, 223)   ,S(93, 221)    ,S(82, 223)    ,S(62, 226)    ,S(64, 224)    ,
		S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,
	},
	{
		S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,
		S(-25, 255)   ,S(-48, 216)   ,S(199, 133)   ,S(237, 156)   ,S(228, 212)   ,S(202, 284)   ,S(178, 341)   ,S(226, 336)   ,
		S(130, 235)   ,S(162, 224)   ,S(235, 191)   ,S(158, 178)   ,S(146, 194)   ,S(138, 254)   ,S(119, 299)   ,S(107, 318)   ,
		S(105, 225)   ,S(105, 227)   ,S(146, 202)   ,S(141, 194)   ,S(130, 178)   ,S(117, 207)   ,S(113, 223)   ,S(109, 249)   ,
		S(96, 209)    ,S(101, 218)   ,S(119, 211)   ,S(120, 202)   ,S(118, 189)   ,S(113, 191)   ,S(99, 209)    ,S(99, 220)    ,
		S(109, 196)   ,S(123, 206)   ,S(117, 227)   ,S(128, 217)   ,S(115, 196)   ,S(111, 197)   ,S(107, 198)   ,S(102, 209)   ,
		S(113, 174)   ,S(143, 201)   ,S(142, 230)   ,S(107, 231)   ,S(109, 205)   ,S(102, 203)   ,S(102, 200)   ,S(101, 216)   ,
		S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,S(112, 205)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(328, 600)   ,S(360, 670)   ,S(387, 703)   ,S(514, 666)   ,S(508, 662)   ,S(401, 690)   ,S(472, 653)   ,S(347, 567)   ,
		S(492, 646)   ,S(515, 667)   ,S(554, 658)   ,S(593, 686)   ,S(582, 676)   ,S(578, 647)   ,S(519, 660)   ,S(536, 636)   ,
		S(464, 674)   ,S(529, 671)   ,S(551, 707)   ,S(561, 706)   ,S(571, 693)   ,S(551, 691)   ,S(521, 668)   ,S(532, 653)   ,
		S(514, 688)   ,S(543, 684)   ,S(567, 708)   ,S(576, 722)   ,S(574, 724)   ,S(561, 707)   ,S(547, 697)   ,S(557, 679)   ,
		S(514, 693)   ,S(535, 691)   ,S(535, 714)   ,S(543, 719)   ,S(557, 716)   ,S(550, 702)   ,S(562, 688)   ,S(541, 691)   ,
		S(473, 658)   ,S(488, 675)   ,S(507, 690)   ,S(506, 712)   ,S(517, 709)   ,S(500, 686)   ,S(503, 666)   ,S(482, 656)   ,
		S(454, 673)   ,S(454, 686)   ,S(475, 661)   ,S(485, 682)   ,S(493, 684)   ,S(486, 666)   ,S(458, 688)   ,S(458, 683)   ,
		S(435, 626)   ,S(442, 672)   ,S(465, 665)   ,S(472, 685)   ,S(472, 676)   ,S(467, 658)   ,S(466, 661)   ,S(431, 663)   ,
	},
	{
		S(357, 583)   ,S(454, 708)   ,S(394, 755)   ,S(508, 722)   ,S(466, 728)   ,S(342, 756)   ,S(354, 714)   ,S(271, 645)   ,
		S(531, 695)   ,S(491, 712)   ,S(584, 693)   ,S(570, 736)   ,S(552, 738)   ,S(523, 702)   ,S(479, 707)   ,S(474, 686)   ,
		S(503, 718)   ,S(486, 745)   ,S(554, 745)   ,S(552, 745)   ,S(538, 750)   ,S(531, 742)   ,S(497, 709)   ,S(467, 694)   ,
		S(528, 746)   ,S(530, 763)   ,S(550, 762)   ,S(545, 782)   ,S(542, 772)   ,S(540, 741)   ,S(524, 711)   ,S(507, 708)   ,
		S(515, 753)   ,S(542, 746)   ,S(530, 758)   ,S(532, 770)   ,S(522, 761)   ,S(517, 742)   ,S(510, 719)   ,S(502, 712)   ,
		S(480, 705)   ,S(489, 721)   ,S(495, 730)   ,S(502, 748)   ,S(501, 745)   ,S(495, 717)   ,S(490, 691)   ,S(478, 665)   ,
		S(465, 720)   ,S(461, 722)   ,S(470, 700)   ,S(483, 719)   ,S(483, 718)   ,S(473, 692)   ,S(467, 705)   ,S(456, 698)   ,
		S(430, 685)   ,S(464, 687)   ,S(467, 703)   ,S(467, 712)   ,S(473, 713)   ,S(471, 679)   ,S(472, 670)   ,S(440, 657)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(483, 765)   ,S(436, 759)   ,S(446, 750)   ,S(403, 764)   ,S(393, 750)   ,S(395, 747)   ,S(542, 733)   ,S(482, 753)   ,
		S(481, 757)   ,S(496, 759)   ,S(529, 745)   ,S(484, 747)   ,S(494, 737)   ,S(549, 717)   ,S(506, 737)   ,S(470, 725)   ,
		S(536, 753)   ,S(555, 748)   ,S(544, 749)   ,S(540, 746)   ,S(562, 725)   ,S(558, 734)   ,S(538, 728)   ,S(543, 733)   ,
		S(533, 754)   ,S(550, 746)   ,S(542, 753)   ,S(550, 757)   ,S(576, 741)   ,S(550, 720)   ,S(560, 735)   ,S(538, 730)   ,
		S(529, 735)   ,S(540, 739)   ,S(543, 748)   ,S(561, 747)   ,S(551, 738)   ,S(546, 729)   ,S(548, 715)   ,S(537, 724)   ,
		S(533, 727)   ,S(561, 732)   ,S(559, 744)   ,S(542, 737)   ,S(543, 739)   ,S(531, 732)   ,S(534, 725)   ,S(523, 727)   ,
		S(550, 717)   ,S(575, 715)   ,S(550, 727)   ,S(534, 732)   ,S(521, 733)   ,S(529, 721)   ,S(528, 710)   ,S(535, 716)   ,
		S(547, 720)   ,S(510, 734)   ,S(522, 738)   ,S(515, 735)   ,S(511, 736)   ,S(512, 741)   ,S(523, 740)   ,S(539, 718)   ,
	},
	{
		S(467, 771)   ,S(492, 762)   ,S(381, 778)   ,S(407, 785)   ,S(388, 805)   ,S(386, 796)   ,S(450, 793)   ,S(464, 801)   ,
		S(482, 767)   ,S(471, 772)   ,S(510, 760)   ,S(483, 774)   ,S(474, 784)   ,S(508, 777)   ,S(490, 790)   ,S(460, 790)   ,
		S(510, 792)   ,S(510, 787)   ,S(518, 792)   ,S(538, 769)   ,S(520, 775)   ,S(532, 778)   ,S(518, 784)   ,S(522, 776)   ,
		S(506, 787)   ,S(529, 789)   ,S(528, 780)   ,S(533, 793)   ,S(539, 789)   ,S(518, 770)   ,S(531, 772)   ,S(505, 782)   ,
		S(517, 765)   ,S(522, 771)   ,S(518, 783)   ,S(535, 784)   ,S(524, 784)   ,S(523, 777)   ,S(525, 757)   ,S(513, 758)   ,
		S(520, 768)   ,S(522, 766)   ,S(521, 778)   ,S(520, 779)   ,S(522, 778)   ,S(525, 771)   ,S(540, 757)   ,S(523, 753)   ,
		S(524, 728)   ,S(536, 746)   ,S(523, 755)   ,S(510, 768)   ,S(512, 769)   ,S(530, 753)   ,S(534, 734)   ,S(539, 745)   ,
		S(525, 732)   ,S(499, 754)   ,S(506, 767)   ,S(498, 769)   ,S(505, 764)   ,S(512, 771)   ,S(530, 767)   ,S(545, 744)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(737, 1255)  ,S(707, 1277)  ,S(690, 1283)  ,S(657, 1288)  ,S(668, 1281)  ,S(724, 1254)  ,S(713, 1255)  ,S(693, 1270)  ,
		S(699, 1252)  ,S(697, 1260)  ,S(706, 1256)  ,S(695, 1263)  ,S(691, 1258)  ,S(699, 1242)  ,S(668, 1246)  ,S(673, 1242)  ,
		S(685, 1247)  ,S(746, 1222)  ,S(713, 1246)  ,S(728, 1221)  ,S(740, 1211)  ,S(707, 1228)  ,S(757, 1199)  ,S(686, 1229)  ,
		S(671, 1246)  ,S(688, 1242)  ,S(708, 1238)  ,S(710, 1234)  ,S(708, 1224)  ,S(696, 1223)  ,S(710, 1214)  ,S(689, 1219)  ,
		S(635, 1233)  ,S(666, 1239)  ,S(638, 1255)  ,S(639, 1248)  ,S(643, 1233)  ,S(649, 1233)  ,S(657, 1229)  ,S(639, 1221)  ,
		S(617, 1198)  ,S(661, 1206)  ,S(639, 1214)  ,S(643, 1211)  ,S(646, 1203)  ,S(648, 1203)  ,S(666, 1200)  ,S(641, 1188)  ,
		S(582, 1206)  ,S(637, 1194)  ,S(650, 1203)  ,S(645, 1203)  ,S(652, 1196)  ,S(659, 1190)  ,S(670, 1177)  ,S(621, 1192)  ,
		S(617, 1205)  ,S(636, 1211)  ,S(664, 1209)  ,S(662, 1199)  ,S(662, 1191)  ,S(672, 1193)  ,S(676, 1191)  ,S(653, 1191)  ,
	},
	{
		S(696, 1326)  ,S(695, 1330)  ,S(699, 1337)  ,S(638, 1341)  ,S(663, 1327)  ,S(643, 1342)  ,S(679, 1329)  ,S(684, 1323)  ,
		S(667, 1307)  ,S(677, 1311)  ,S(708, 1303)  ,S(667, 1330)  ,S(694, 1314)  ,S(673, 1317)  ,S(649, 1326)  ,S(659, 1316)  ,
		S(684, 1292)  ,S(760, 1264)  ,S(740, 1281)  ,S(729, 1271)  ,S(724, 1270)  ,S(684, 1295)  ,S(709, 1279)  ,S(652, 1302)  ,
		S(674, 1292)  ,S(702, 1286)  ,S(707, 1285)  ,S(699, 1286)  ,S(714, 1273)  ,S(684, 1284)  ,S(675, 1283)  ,S(652, 1289)  ,
		S(630, 1279)  ,S(667, 1293)  ,S(646, 1301)  ,S(638, 1291)  ,S(647, 1281)  ,S(632, 1291)  ,S(630, 1294)  ,S(629, 1274)  ,
		S(633, 1235)  ,S(673, 1262)  ,S(651, 1264)  ,S(644, 1259)  ,S(650, 1248)  ,S(630, 1259)  ,S(639, 1261)  ,S(623, 1249)  ,
		S(568, 1252)  ,S(666, 1237)  ,S(663, 1245)  ,S(649, 1249)  ,S(653, 1240)  ,S(640, 1248)  ,S(638, 1241)  ,S(604, 1251)  ,
		S(633, 1230)  ,S(653, 1254)  ,S(664, 1261)  ,S(659, 1247)  ,S(662, 1240)  ,S(651, 1250)  ,S(645, 1251)  ,S(647, 1246)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1381, 2117) ,S(1401, 2136) ,S(1383, 2159) ,S(1358, 2213) ,S(1367, 2205) ,S(1420, 2175) ,S(1399, 2148) ,S(1401, 2122) ,
		S(1380, 2138) ,S(1321, 2194) ,S(1364, 2175) ,S(1304, 2242) ,S(1302, 2275) ,S(1441, 2168) ,S(1359, 2163) ,S(1380, 2132) ,
		S(1377, 2159) ,S(1387, 2122) ,S(1374, 2150) ,S(1376, 2167) ,S(1393, 2192) ,S(1373, 2220) ,S(1418, 2133) ,S(1424, 2139) ,
		S(1390, 2135) ,S(1364, 2194) ,S(1362, 2173) ,S(1353, 2225) ,S(1367, 2213) ,S(1396, 2183) ,S(1426, 2172) ,S(1416, 2148) ,
		S(1378, 2133) ,S(1381, 2188) ,S(1362, 2209) ,S(1371, 2234) ,S(1368, 2208) ,S(1392, 2190) ,S(1410, 2151) ,S(1413, 2132) ,
		S(1368, 2129) ,S(1394, 2138) ,S(1394, 2164) ,S(1391, 2150) ,S(1390, 2142) ,S(1403, 2145) ,S(1418, 2115) ,S(1418, 2101) ,
		S(1353, 2098) ,S(1391, 2088) ,S(1430, 2035) ,S(1419, 2099) ,S(1409, 2095) ,S(1425, 2071) ,S(1429, 2065) ,S(1429, 2069) ,
		S(1376, 2062) ,S(1400, 2039) ,S(1402, 2038) ,S(1410, 2078) ,S(1418, 2079) ,S(1412, 2055) ,S(1401, 2096) ,S(1412, 2045) ,
	},
	{
		S(1400, 2255) ,S(1422, 2279) ,S(1401, 2305) ,S(1349, 2301) ,S(1362, 2276) ,S(1353, 2270) ,S(1365, 2244) ,S(1329, 2255) ,
		S(1399, 2278) ,S(1334, 2337) ,S(1434, 2284) ,S(1285, 2355) ,S(1293, 2307) ,S(1347, 2242) ,S(1290, 2280) ,S(1353, 2225) ,
		S(1358, 2337) ,S(1354, 2340) ,S(1353, 2330) ,S(1365, 2286) ,S(1355, 2254) ,S(1345, 2236) ,S(1356, 2215) ,S(1354, 2225) ,
		S(1390, 2303) ,S(1385, 2336) ,S(1368, 2333) ,S(1333, 2333) ,S(1336, 2305) ,S(1354, 2227) ,S(1361, 2247) ,S(1366, 2210) ,
		S(1395, 2269) ,S(1387, 2282) ,S(1374, 2301) ,S(1352, 2311) ,S(1351, 2314) ,S(1368, 2246) ,S(1382, 2228) ,S(1377, 2189) ,
		S(1399, 2197) ,S(1401, 2222) ,S(1385, 2258) ,S(1378, 2227) ,S(1377, 2228) ,S(1384, 2231) ,S(1397, 2193) ,S(1385, 2165) ,
		S(1380, 2186) ,S(1409, 2128) ,S(1419, 2125) ,S(1400, 2179) ,S(1399, 2189) ,S(1405, 2146) ,S(1398, 2163) ,S(1393, 2156) ,
		S(1390, 2121) ,S(1383, 2126) ,S(1389, 2137) ,S(1411, 2144) ,S(1411, 2182) ,S(1406, 2151) ,S(1398, 2153) ,S(1393, 2155) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-29, -196)  ,S(71, -93)    ,S(75, -73)    ,S(102, -54)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-18, -36)   ,S(94, 23)     ,S(139, 14)    ,S(146, -3)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(41, 2)      ,S(120, 46)    ,S(147, 51)    ,S(130, 44)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-27, 15)    ,S(79, 44)     ,S(92, 62)     ,S(71, 71)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-33, -22)   ,S(36, 29)     ,S(55, 53)     ,S(9, 72)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-45, -25)   ,S(-25, 12)    ,S(-9, 34)     ,S(-27, 54)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(20, -63)    ,S(-28, -15)   ,S(-58, 18)    ,S(-97, 26)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(24, -157)   ,S(3, -74)     ,S(-48, -34)   ,S(-67, -53)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(6, -191)    ,S(28, -4)     ,S(66, -36)    ,S(90, -45)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-43, -35)   ,S(44, 67)     ,S(140, 9)     ,S(162, 0)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(22, 13)     ,S(190, 51)    ,S(255, 35)    ,S(152, 37)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-50, 18)    ,S(99, 44)     ,S(124, 66)    ,S(83, 75)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-64, -12)   ,S(38, 27)     ,S(44, 61)     ,S(31, 80)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-37, -15)   ,S(-17, 16)    ,S(-1, 45)     ,S(-13, 64)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(28, -55)    ,S(-16, -3)    ,S(-55, 31)    ,S(-82, 36)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(32, -143)   ,S(-3, -52)    ,S(-51, -18)   ,S(-60, -46)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(112, 205), S(468, 658), S(488, 705), S(645, 1216), S(1376, 2158), };
constexpr PScore knightMob[9] = {S(-46, -165), S(-27, -90), S(-13, -39), S(-6, -11), S(1, 4), S(7, 22), S(16, 25), S(27, 20), S(41, -7), };
constexpr PScore bishopMob[14] = {S(-61, -202), S(-33, -126), S(-17, -78), S(-8, -44), S(4, -24), S(10, -1), S(12, 13), S(13, 22), S(15, 31), S(23, 31), S(32, 27), S(56, 11), S(62, 22), S(84, -27), };
constexpr PScore rookMob[15] = {S(-25, -152), S(-33, -110), S(-26, -71), S(-25, -48), S(-24, -28), S(-25, -10), S(-22, 3), S(-15, 3), S(-11, 10), S(-3, 15), S(-3, 25), S(3, 29), S(3, 33), S(21, 14), S(83, -21), };
constexpr PScore queenMob[28] = {S(-153, -392), S(-112, -407), S(-71, -325), S(-53, -227), S(-50, -131), S(-48, -71), S(-42, -34), S(-38, -11), S(-35, 11), S(-29, 25), S(-24, 37), S(-19, 41), S(-14, 44), S(-11, 50), S(-8, 48), S(-5, 49), S(-6, 47), S(-8, 49), S(-5, 43), S(2, 29), S(13, 7), S(24, -17), S(25, -32), S(34, -57), S(2, -59), S(17, -90), S(-22, -58), S(-27, -24), };

constexpr PScore lowmobCorrectionTable[17] = {S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0), S(0, 0)};

constexpr Score gamephaseInc[12] = {0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0};

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 810.9840087890625;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.9176104068756104;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 302.01824951171875;
constexpr double KSBEG = 1;
constexpr double KSCEG = 0.03325587883591652;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);