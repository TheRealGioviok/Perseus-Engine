#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,
		S(164, 331)   ,S(141, 340)   ,S(111, 310)   ,S(151, 191)   ,S(191, 55)    ,S(161, -20)   ,S(-3, 48)     ,S(-32, 105)   ,
		S(95, 397)    ,S(114, 389)   ,S(113, 345)   ,S(134, 243)   ,S(191, 139)   ,S(229, 123)   ,S(190, 156)   ,S(129, 203)   ,
		S(113, 288)   ,S(103, 270)   ,S(108, 244)   ,S(115, 209)   ,S(142, 177)   ,S(142, 175)   ,S(99, 202)    ,S(95, 207)    ,
		S(117, 231)   ,S(102, 232)   ,S(112, 215)   ,S(113, 204)   ,S(114, 189)   ,S(106, 196)   ,S(87, 202)    ,S(81, 209)    ,
		S(124, 207)   ,S(127, 206)   ,S(112, 216)   ,S(112, 211)   ,S(103, 207)   ,S(92, 211)    ,S(75, 212)    ,S(80, 214)    ,
		S(122, 202)   ,S(132, 203)   ,S(120, 215)   ,S(98, 225)    ,S(88, 221)    ,S(82, 221)    ,S(76, 222)    ,S(83, 218)    ,
		S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,
	},
	{
		S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,
		S(-141, 37)   ,S(-106, -29)  ,S(176, -91)   ,S(153, 57)    ,S(100, 257)   ,S(103, 411)   ,S(244, 405)   ,S(319, 346)   ,
		S(140, 40)    ,S(167, 21)    ,S(226, 32)    ,S(136, 125)   ,S(60, 251)    ,S(11, 331)    ,S(35, 349)    ,S(86, 321)    ,
		S(97, 142)    ,S(101, 157)   ,S(132, 151)   ,S(123, 183)   ,S(90, 205)    ,S(78, 240)    ,S(122, 230)   ,S(124, 249)   ,
		S(90, 183)    ,S(101, 185)   ,S(106, 198)   ,S(108, 201)   ,S(107, 208)   ,S(113, 207)   ,S(124, 213)   ,S(131, 216)   ,
		S(91, 201)    ,S(91, 207)    ,S(95, 216)    ,S(111, 213)   ,S(114, 199)   ,S(124, 198)   ,S(141, 196)   ,S(136, 202)   ,
		S(92, 191)    ,S(91, 215)    ,S(100, 223)   ,S(108, 214)   ,S(121, 197)   ,S(125, 192)   ,S(139, 188)   ,S(134, 201)   ,
		S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,S(109, 208)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(294, 628)   ,S(324, 703)   ,S(350, 736)   ,S(473, 698)   ,S(481, 687)   ,S(375, 715)   ,S(445, 675)   ,S(325, 578)   ,
		S(448, 680)   ,S(474, 698)   ,S(518, 687)   ,S(555, 714)   ,S(544, 703)   ,S(555, 668)   ,S(506, 678)   ,S(512, 654)   ,
		S(432, 703)   ,S(493, 705)   ,S(517, 738)   ,S(528, 733)   ,S(546, 717)   ,S(537, 709)   ,S(504, 685)   ,S(501, 676)   ,
		S(486, 717)   ,S(512, 715)   ,S(537, 736)   ,S(550, 748)   ,S(546, 750)   ,S(534, 735)   ,S(516, 725)   ,S(522, 708)   ,
		S(491, 720)   ,S(512, 717)   ,S(515, 739)   ,S(522, 744)   ,S(536, 743)   ,S(527, 732)   ,S(536, 717)   ,S(512, 720)   ,
		S(457, 679)   ,S(472, 697)   ,S(487, 715)   ,S(491, 734)   ,S(499, 735)   ,S(477, 718)   ,S(475, 693)   ,S(451, 685)   ,
		S(446, 691)   ,S(435, 702)   ,S(456, 687)   ,S(471, 705)   ,S(477, 709)   ,S(465, 692)   ,S(436, 712)   ,S(437, 709)   ,
		S(424, 644)   ,S(427, 697)   ,S(452, 687)   ,S(458, 711)   ,S(455, 700)   ,S(447, 686)   ,S(441, 691)   ,S(405, 688)   ,
	},
	{
		S(518, 700)   ,S(572, 745)   ,S(469, 758)   ,S(478, 775)   ,S(434, 795)   ,S(424, 799)   ,S(363, 797)   ,S(396, 828)   ,
		S(531, 751)   ,S(480, 752)   ,S(506, 757)   ,S(464, 770)   ,S(460, 785)   ,S(420, 791)   ,S(424, 785)   ,S(410, 789)   ,
		S(522, 756)   ,S(452, 782)   ,S(502, 745)   ,S(486, 761)   ,S(445, 781)   ,S(447, 789)   ,S(448, 781)   ,S(417, 771)   ,
		S(504, 769)   ,S(475, 789)   ,S(472, 771)   ,S(454, 784)   ,S(458, 767)   ,S(468, 757)   ,S(464, 745)   ,S(437, 758)   ,
		S(495, 771)   ,S(498, 768)   ,S(485, 761)   ,S(480, 774)   ,S(455, 765)   ,S(456, 764)   ,S(434, 761)   ,S(449, 747)   ,
		S(496, 761)   ,S(494, 757)   ,S(478, 751)   ,S(483, 758)   ,S(471, 758)   ,S(483, 757)   ,S(475, 752)   ,S(487, 732)   ,
		S(502, 768)   ,S(499, 751)   ,S(490, 750)   ,S(485, 758)   ,S(478, 756)   ,S(474, 752)   ,S(494, 744)   ,S(476, 744)   ,
		S(489, 776)   ,S(505, 736)   ,S(493, 759)   ,S(488, 744)   ,S(499, 752)   ,S(497, 740)   ,S(497, 727)   ,S(497, 724)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(418, 807)   ,S(373, 803)   ,S(389, 792)   ,S(361, 800)   ,S(354, 787)   ,S(359, 783)   ,S(515, 763)   ,S(447, 790)   ,
		S(415, 800)   ,S(438, 797)   ,S(473, 782)   ,S(441, 774)   ,S(446, 768)   ,S(528, 742)   ,S(478, 762)   ,S(419, 767)   ,
		S(482, 791)   ,S(496, 784)   ,S(494, 779)   ,S(490, 771)   ,S(521, 750)   ,S(521, 757)   ,S(499, 755)   ,S(497, 775)   ,
		S(476, 793)   ,S(502, 776)   ,S(491, 783)   ,S(507, 780)   ,S(529, 765)   ,S(510, 746)   ,S(512, 766)   ,S(493, 771)   ,
		S(483, 769)   ,S(495, 769)   ,S(503, 773)   ,S(518, 768)   ,S(515, 762)   ,S(502, 760)   ,S(512, 747)   ,S(483, 767)   ,
		S(486, 758)   ,S(519, 756)   ,S(515, 763)   ,S(509, 755)   ,S(504, 761)   ,S(493, 753)   ,S(490, 755)   ,S(476, 762)   ,
		S(514, 739)   ,S(530, 739)   ,S(510, 745)   ,S(495, 753)   ,S(484, 754)   ,S(482, 749)   ,S(482, 740)   ,S(482, 750)   ,
		S(506, 745)   ,S(473, 755)   ,S(488, 762)   ,S(477, 758)   ,S(466, 759)   ,S(474, 767)   ,S(475, 772)   ,S(489, 752)   ,
	},
	{
		S(495, 745)   ,S(549, 741)   ,S(435, 768)   ,S(485, 768)   ,S(473, 797)   ,S(467, 791)   ,S(368, 810)   ,S(451, 793)   ,
		S(496, 745)   ,S(480, 747)   ,S(483, 758)   ,S(482, 773)   ,S(470, 786)   ,S(416, 810)   ,S(445, 806)   ,S(470, 806)   ,
		S(471, 781)   ,S(455, 773)   ,S(470, 782)   ,S(493, 767)   ,S(441, 791)   ,S(450, 790)   ,S(457, 804)   ,S(462, 781)   ,
		S(475, 768)   ,S(470, 779)   ,S(487, 760)   ,S(474, 778)   ,S(456, 787)   ,S(453, 794)   ,S(460, 782)   ,S(451, 793)   ,
		S(483, 764)   ,S(483, 765)   ,S(469, 772)   ,S(470, 778)   ,S(461, 782)   ,S(471, 787)   ,S(460, 787)   ,S(469, 773)   ,
		S(488, 775)   ,S(460, 765)   ,S(461, 767)   ,S(465, 783)   ,S(473, 776)   ,S(479, 783)   ,S(496, 778)   ,S(485, 772)   ,
		S(465, 751)   ,S(460, 765)   ,S(467, 764)   ,S(471, 776)   ,S(477, 772)   ,S(492, 767)   ,S(494, 768)   ,S(492, 773)   ,
		S(475, 749)   ,S(492, 753)   ,S(474, 773)   ,S(481, 767)   ,S(494, 760)   ,S(489, 763)   ,S(501, 757)   ,S(492, 767)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(706, 1280)  ,S(674, 1304)  ,S(665, 1303)  ,S(645, 1304)  ,S(667, 1285)  ,S(721, 1266)  ,S(717, 1268)  ,S(686, 1287)  ,
		S(668, 1279)  ,S(669, 1287)  ,S(686, 1276)  ,S(679, 1282)  ,S(684, 1269)  ,S(719, 1243)  ,S(694, 1249)  ,S(683, 1250)  ,
		S(663, 1269)  ,S(717, 1248)  ,S(694, 1265)  ,S(717, 1239)  ,S(733, 1224)  ,S(719, 1234)  ,S(764, 1211)  ,S(699, 1239)  ,
		S(650, 1263)  ,S(661, 1260)  ,S(689, 1250)  ,S(700, 1245)  ,S(702, 1231)  ,S(694, 1231)  ,S(713, 1222)  ,S(698, 1225)  ,
		S(620, 1248)  ,S(642, 1257)  ,S(624, 1265)  ,S(633, 1257)  ,S(638, 1241)  ,S(648, 1242)  ,S(656, 1243)  ,S(642, 1231)  ,
		S(603, 1217)  ,S(639, 1228)  ,S(621, 1235)  ,S(630, 1231)  ,S(637, 1221)  ,S(642, 1221)  ,S(660, 1220)  ,S(638, 1206)  ,
		S(564, 1225)  ,S(609, 1219)  ,S(630, 1222)  ,S(630, 1223)  ,S(640, 1210)  ,S(647, 1206)  ,S(663, 1196)  ,S(616, 1208)  ,
		S(613, 1228)  ,S(616, 1237)  ,S(649, 1231)  ,S(646, 1224)  ,S(648, 1212)  ,S(659, 1214)  ,S(666, 1212)  ,S(641, 1216)  ,
	},
	{
		S(617, 1269)  ,S(655, 1250)  ,S(674, 1254)  ,S(634, 1254)  ,S(633, 1267)  ,S(558, 1304)  ,S(597, 1291)  ,S(634, 1266)  ,
		S(637, 1246)  ,S(645, 1245)  ,S(668, 1248)  ,S(624, 1267)  ,S(647, 1272)  ,S(595, 1302)  ,S(594, 1309)  ,S(613, 1297)  ,
		S(662, 1242)  ,S(683, 1237)  ,S(691, 1235)  ,S(657, 1251)  ,S(630, 1272)  ,S(607, 1288)  ,S(584, 1298)  ,S(593, 1292)  ,
		S(668, 1241)  ,S(675, 1242)  ,S(654, 1251)  ,S(637, 1254)  ,S(654, 1263)  ,S(632, 1274)  ,S(603, 1284)  ,S(595, 1286)  ,
		S(654, 1245)  ,S(661, 1253)  ,S(658, 1248)  ,S(648, 1248)  ,S(652, 1262)  ,S(628, 1274)  ,S(616, 1276)  ,S(630, 1268)  ,
		S(670, 1240)  ,S(667, 1257)  ,S(664, 1250)  ,S(652, 1246)  ,S(653, 1261)  ,S(633, 1271)  ,S(619, 1273)  ,S(629, 1273)  ,
		S(641, 1248)  ,S(685, 1242)  ,S(663, 1244)  ,S(655, 1246)  ,S(648, 1260)  ,S(630, 1272)  ,S(615, 1274)  ,S(627, 1270)  ,
		S(668, 1224)  ,S(666, 1248)  ,S(645, 1258)  ,S(648, 1248)  ,S(648, 1259)  ,S(630, 1267)  ,S(621, 1267)  ,S(646, 1258)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1347, 2243) ,S(1365, 2264) ,S(1366, 2266) ,S(1324, 2336) ,S(1353, 2303) ,S(1401, 2292) ,S(1396, 2267) ,S(1366, 2249) ,
		S(1345, 2273) ,S(1293, 2322) ,S(1339, 2306) ,S(1286, 2359) ,S(1289, 2376) ,S(1434, 2269) ,S(1351, 2300) ,S(1362, 2268) ,
		S(1345, 2293) ,S(1353, 2260) ,S(1342, 2290) ,S(1348, 2309) ,S(1372, 2316) ,S(1377, 2313) ,S(1407, 2237) ,S(1398, 2279) ,
		S(1361, 2254) ,S(1336, 2313) ,S(1340, 2288) ,S(1333, 2333) ,S(1349, 2325) ,S(1379, 2294) ,S(1406, 2298) ,S(1396, 2280) ,
		S(1349, 2248) ,S(1352, 2303) ,S(1335, 2318) ,S(1352, 2342) ,S(1351, 2317) ,S(1369, 2310) ,S(1391, 2280) ,S(1390, 2267) ,
		S(1346, 2240) ,S(1369, 2246) ,S(1366, 2278) ,S(1367, 2266) ,S(1370, 2260) ,S(1377, 2265) ,S(1397, 2237) ,S(1395, 2246) ,
		S(1331, 2190) ,S(1360, 2194) ,S(1398, 2151) ,S(1393, 2221) ,S(1383, 2217) ,S(1398, 2199) ,S(1409, 2194) ,S(1407, 2213) ,
		S(1356, 2171) ,S(1375, 2145) ,S(1374, 2165) ,S(1385, 2204) ,S(1391, 2206) ,S(1385, 2191) ,S(1381, 2225) ,S(1388, 2178) ,
	},
	{
		S(1395, 2285) ,S(1408, 2285) ,S(1393, 2300) ,S(1372, 2239) ,S(1365, 2249) ,S(1311, 2257) ,S(1325, 2263) ,S(1319, 2291) ,
		S(1415, 2286) ,S(1401, 2307) ,S(1441, 2270) ,S(1367, 2262) ,S(1373, 2211) ,S(1283, 2250) ,S(1300, 2274) ,S(1349, 2256) ,
		S(1371, 2311) ,S(1359, 2334) ,S(1371, 2311) ,S(1382, 2258) ,S(1349, 2229) ,S(1328, 2224) ,S(1307, 2277) ,S(1313, 2241) ,
		S(1393, 2301) ,S(1414, 2274) ,S(1401, 2287) ,S(1371, 2255) ,S(1355, 2244) ,S(1342, 2216) ,S(1318, 2238) ,S(1330, 2219) ,
		S(1408, 2278) ,S(1399, 2225) ,S(1402, 2238) ,S(1369, 2225) ,S(1367, 2259) ,S(1361, 2210) ,S(1353, 2241) ,S(1347, 2214) ,
		S(1422, 2214) ,S(1399, 2224) ,S(1379, 2234) ,S(1375, 2227) ,S(1371, 2244) ,S(1368, 2246) ,S(1364, 2243) ,S(1355, 2213) ,
		S(1419, 2242) ,S(1409, 2188) ,S(1379, 2231) ,S(1368, 2226) ,S(1376, 2249) ,S(1366, 2230) ,S(1351, 2256) ,S(1349, 2227) ,
		S(1407, 2198) ,S(1378, 2233) ,S(1376, 2244) ,S(1389, 2217) ,S(1380, 2256) ,S(1385, 2239) ,S(1384, 2198) ,S(1375, 2248) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-11, -181)  ,S(78, -79)    ,S(72, -60)    ,S(101, -38)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-7, -20)    ,S(83, 43)     ,S(133, 29)    ,S(132, 15)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(27, 23)     ,S(115, 62)    ,S(141, 64)    ,S(119, 60)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-31, 33)    ,S(74, 60)     ,S(85, 75)     ,S(69, 85)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-26, -8)    ,S(36, 42)     ,S(55, 64)     ,S(18, 84)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-36, -9)    ,S(-21, 25)    ,S(3, 43)      ,S(-11, 60)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(23, -46)    ,S(-20, -4)    ,S(-44, 25)    ,S(-76, 35)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(20, -132)   ,S(5, -51)     ,S(-30, -24)   ,S(-49, -39)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(73, -5)     ,S(-18, 101)   ,S(42, 35)     ,S(37, 3)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(5, -11)     ,S(10, 35)     ,S(49, -6)     ,S(63, -4)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(20, -2)     ,S(98, 1)      ,S(128, -15)   ,S(63, -14)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(6, -1)      ,S(44, -1)     ,S(59, 5)      ,S(35, 1)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-12, 12)    ,S(20, 3)      ,S(8, 12)      ,S(41, 7)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(13, 13)     ,S(9, 11)      ,S(13, 14)     ,S(26, 11)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(5, 18)      ,S(11, 22)     ,S(7, 19)      ,S(25, 11)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(8, 24)      ,S(-6, 31)     ,S(10, 19)     ,S(25, 5)      ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(109, 208), S(483, 740), S(486, 761), S(646, 1238), S(1385, 2221), };
constexpr PScore knightMob[9] = {S(-47, -159), S(-29, -82), S(-16, -33), S(-8, -7), S(-1, 5), S(4, 21), S(13, 21), S(23, 15), S(34, -10), };
constexpr PScore bishopMob[14] = {S(-53, -210), S(-23, -138), S(-6, -87), S(2, -58), S(13, -35), S(17, -14), S(20, 1), S(22, 13), S(23, 24), S(30, 30), S(39, 24), S(64, 11), S(76, 17), S(100, -25), };
constexpr PScore rookMob[15] = {S(-23, -132), S(-27, -89), S(-24, -52), S(-22, -32), S(-21, -12), S(-19, 5), S(-16, 14), S(-11, 15), S(-7, 20), S(1, 25), S(0, 33), S(6, 37), S(8, 41), S(24, 23), S(88, -12), };
constexpr PScore queenMob[28] = {S(-153, -320), S(-115, -324), S(-76, -250), S(-54, -166), S(-51, -74), S(-44, -22), S(-39, 9), S(-33, 26), S(-28, 47), S(-22, 60), S(-18, 68), S(-13, 73), S(-8, 77), S(-4, 80), S(-2, 81), S(-2, 82), S(-2, 82), S(-5, 84), S(-1, 78), S(4, 66), S(15, 47), S(23, 27), S(20, 12), S(38, -14), S(14, -15), S(11, -27), S(22, -33), S(5, 39), };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 734.2899169921875;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.9831154346466064;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 193.7559814453125;
constexpr double KSBEG = 1;
constexpr double KSCEG = -14.231532096862793;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);