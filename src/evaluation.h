#pragma once

#include "BBmacros.h"
#include "Position.h"

const PScore pawnTable[2][64] = {
	{
		S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,
		S(215, 407)   ,S(205, 407)   ,S(166, 400)   ,S(208, 290)   ,S(230, 167)   ,S(183, 83)    ,S(-16, 135)   ,S(-28, 187)   ,
		S(95, 388)    ,S(131, 371)   ,S(125, 348)   ,S(140, 255)   ,S(179, 164)   ,S(218, 137)   ,S(163, 151)   ,S(100, 199)   ,
		S(110, 280)   ,S(117, 255)   ,S(115, 244)   ,S(116, 216)   ,S(142, 187)   ,S(139, 177)   ,S(84, 198)    ,S(73, 202)    ,
		S(116, 226)   ,S(115, 221)   ,S(118, 217)   ,S(114, 210)   ,S(116, 198)   ,S(106, 199)   ,S(73, 200)    ,S(58, 204)    ,
		S(127, 198)   ,S(148, 192)   ,S(124, 214)   ,S(116, 218)   ,S(106, 213)   ,S(93, 212)    ,S(61, 210)    ,S(56, 209)    ,
		S(127, 191)   ,S(162, 186)   ,S(146, 211)   ,S(102, 232)   ,S(89, 229)    ,S(79, 224)    ,S(58, 221)    ,S(56, 216)    ,
		S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,
	},
	{
		S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,
		S(-58, 244)   ,S(-66, 194)   ,S(182, 132)   ,S(230, 158)   ,S(237, 209)   ,S(208, 280)   ,S(173, 321)   ,S(205, 326)   ,
		S(115, 222)   ,S(155, 206)   ,S(220, 189)   ,S(156, 181)   ,S(150, 197)   ,S(138, 255)   ,S(115, 284)   ,S(93, 309)    ,
		S(94, 213)    ,S(101, 212)   ,S(138, 194)   ,S(134, 192)   ,S(125, 180)   ,S(112, 206)   ,S(107, 216)   ,S(97, 241)    ,
		S(89, 199)    ,S(96, 206)    ,S(116, 206)   ,S(117, 200)   ,S(116, 191)   ,S(110, 192)   ,S(95, 201)    ,S(89, 213)    ,
		S(102, 188)   ,S(118, 196)   ,S(111, 224)   ,S(124, 220)   ,S(112, 201)   ,S(109, 199)   ,S(101, 192)   ,S(93, 202)    ,
		S(105, 168)   ,S(137, 198)   ,S(135, 233)   ,S(101, 239)   ,S(103, 216)   ,S(97, 207)    ,S(97, 195)    ,S(90, 208)    ,
		S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,S(107, 200)   ,
	},
};
const PScore knightTable[2][64] = {
	{
		S(317, 607)   ,S(361, 669)   ,S(387, 707)   ,S(505, 673)   ,S(500, 669)   ,S(393, 697)   ,S(462, 656)   ,S(338, 562)   ,
		S(484, 652)   ,S(505, 675)   ,S(544, 670)   ,S(579, 698)   ,S(570, 689)   ,S(563, 662)   ,S(505, 667)   ,S(526, 637)   ,
		S(457, 678)   ,S(520, 683)   ,S(544, 717)   ,S(548, 717)   ,S(556, 709)   ,S(536, 711)   ,S(508, 680)   ,S(517, 658)   ,
		S(504, 690)   ,S(534, 695)   ,S(560, 717)   ,S(568, 734)   ,S(564, 738)   ,S(550, 724)   ,S(534, 707)   ,S(540, 689)   ,
		S(504, 701)   ,S(527, 702)   ,S(530, 724)   ,S(537, 731)   ,S(550, 732)   ,S(541, 717)   ,S(550, 701)   ,S(528, 700)   ,
		S(463, 662)   ,S(480, 684)   ,S(496, 698)   ,S(497, 722)   ,S(510, 722)   ,S(490, 698)   ,S(493, 676)   ,S(470, 663)   ,
		S(446, 676)   ,S(445, 689)   ,S(465, 672)   ,S(474, 691)   ,S(483, 694)   ,S(475, 677)   ,S(447, 694)   ,S(449, 686)   ,
		S(425, 629)   ,S(433, 676)   ,S(454, 671)   ,S(462, 692)   ,S(460, 684)   ,S(454, 669)   ,S(454, 669)   ,S(421, 663)   ,
	},
	{
		S(347, 582)   ,S(443, 711)   ,S(382, 760)   ,S(498, 731)   ,S(458, 736)   ,S(338, 765)   ,S(349, 719)   ,S(263, 649)   ,
		S(519, 698)   ,S(478, 720)   ,S(569, 708)   ,S(555, 748)   ,S(541, 749)   ,S(516, 713)   ,S(472, 716)   ,S(468, 693)   ,
		S(488, 722)   ,S(474, 754)   ,S(540, 765)   ,S(538, 756)   ,S(527, 758)   ,S(524, 753)   ,S(490, 720)   ,S(458, 699)   ,
		S(516, 746)   ,S(520, 766)   ,S(542, 773)   ,S(538, 792)   ,S(536, 781)   ,S(533, 750)   ,S(517, 726)   ,S(496, 718)   ,
		S(505, 755)   ,S(533, 752)   ,S(524, 765)   ,S(529, 781)   ,S(518, 771)   ,S(512, 755)   ,S(503, 734)   ,S(493, 724)   ,
		S(471, 703)   ,S(483, 720)   ,S(486, 729)   ,S(495, 757)   ,S(496, 755)   ,S(487, 732)   ,S(482, 706)   ,S(469, 674)   ,
		S(458, 721)   ,S(454, 719)   ,S(463, 705)   ,S(473, 728)   ,S(474, 727)   ,S(463, 705)   ,S(458, 712)   ,S(445, 706)   ,
		S(421, 684)   ,S(456, 688)   ,S(458, 712)   ,S(457, 720)   ,S(463, 718)   ,S(460, 687)   ,S(463, 674)   ,S(430, 664)   ,
	},
};
const PScore bishopTable[2][64] = {
	{
		S(465, 775)   ,S(421, 767)   ,S(428, 758)   ,S(393, 768)   ,S(381, 753)   ,S(379, 754)   ,S(522, 745)   ,S(461, 768)   ,
		S(466, 762)   ,S(479, 763)   ,S(508, 751)   ,S(462, 751)   ,S(474, 741)   ,S(528, 721)   ,S(481, 746)   ,S(447, 739)   ,
		S(517, 757)   ,S(537, 751)   ,S(527, 749)   ,S(517, 746)   ,S(537, 731)   ,S(536, 738)   ,S(511, 736)   ,S(519, 745)   ,
		S(515, 755)   ,S(532, 747)   ,S(524, 754)   ,S(530, 754)   ,S(555, 740)   ,S(528, 724)   ,S(539, 740)   ,S(514, 740)   ,
		S(511, 742)   ,S(523, 743)   ,S(525, 749)   ,S(545, 743)   ,S(534, 740)   ,S(528, 733)   ,S(529, 722)   ,S(514, 735)   ,
		S(514, 731)   ,S(543, 733)   ,S(540, 738)   ,S(526, 734)   ,S(527, 736)   ,S(514, 727)   ,S(517, 727)   ,S(501, 735)   ,
		S(529, 718)   ,S(557, 715)   ,S(530, 723)   ,S(514, 731)   ,S(502, 733)   ,S(508, 722)   ,S(507, 713)   ,S(511, 726)   ,
		S(528, 720)   ,S(490, 732)   ,S(503, 739)   ,S(495, 732)   ,S(491, 735)   ,S(491, 744)   ,S(502, 743)   ,S(518, 723)   ,
	},
	{
		S(444, 784)   ,S(474, 772)   ,S(361, 784)   ,S(392, 790)   ,S(366, 810)   ,S(370, 800)   ,S(429, 800)   ,S(448, 807)   ,
		S(460, 777)   ,S(445, 781)   ,S(485, 768)   ,S(461, 775)   ,S(454, 784)   ,S(487, 778)   ,S(474, 791)   ,S(445, 793)   ,
		S(488, 797)   ,S(483, 793)   ,S(494, 796)   ,S(514, 771)   ,S(499, 770)   ,S(517, 773)   ,S(502, 783)   ,S(505, 779)   ,
		S(483, 792)   ,S(509, 785)   ,S(509, 776)   ,S(515, 787)   ,S(520, 783)   ,S(501, 769)   ,S(515, 773)   ,S(485, 784)   ,
		S(497, 768)   ,S(506, 769)   ,S(504, 777)   ,S(520, 779)   ,S(509, 778)   ,S(507, 778)   ,S(507, 761)   ,S(495, 765)   ,
		S(503, 765)   ,S(507, 756)   ,S(504, 764)   ,S(504, 772)   ,S(508, 770)   ,S(507, 768)   ,S(523, 761)   ,S(501, 761)   ,
		S(504, 723)   ,S(520, 740)   ,S(503, 749)   ,S(493, 764)   ,S(492, 762)   ,S(509, 748)   ,S(514, 735)   ,S(517, 753)   ,
		S(507, 728)   ,S(482, 749)   ,S(487, 770)   ,S(480, 762)   ,S(487, 757)   ,S(490, 766)   ,S(510, 762)   ,S(524, 745)   ,
	},
};
const PScore rookTable[2][64] = {
	{
		S(736, 1256)  ,S(708, 1277)  ,S(685, 1285)  ,S(655, 1288)  ,S(670, 1274)  ,S(723, 1251)  ,S(716, 1251)  ,S(687, 1269)  ,
		S(696, 1257)  ,S(695, 1264)  ,S(700, 1261)  ,S(689, 1269)  ,S(687, 1255)  ,S(700, 1240)  ,S(668, 1244)  ,S(670, 1239)  ,
		S(679, 1251)  ,S(740, 1227)  ,S(704, 1250)  ,S(719, 1226)  ,S(731, 1213)  ,S(703, 1226)  ,S(750, 1198)  ,S(681, 1225)  ,
		S(662, 1248)  ,S(680, 1244)  ,S(700, 1238)  ,S(701, 1235)  ,S(702, 1220)  ,S(688, 1222)  ,S(702, 1212)  ,S(681, 1215)  ,
		S(628, 1235)  ,S(657, 1242)  ,S(632, 1253)  ,S(634, 1246)  ,S(638, 1229)  ,S(644, 1226)  ,S(650, 1226)  ,S(632, 1216)  ,
		S(607, 1207)  ,S(650, 1214)  ,S(627, 1224)  ,S(632, 1220)  ,S(637, 1205)  ,S(639, 1205)  ,S(656, 1203)  ,S(632, 1191)  ,
		S(567, 1215)  ,S(621, 1204)  ,S(636, 1209)  ,S(632, 1210)  ,S(639, 1199)  ,S(647, 1190)  ,S(657, 1181)  ,S(608, 1194)  ,
		S(604, 1210)  ,S(623, 1219)  ,S(651, 1218)  ,S(649, 1207)  ,S(649, 1195)  ,S(660, 1196)  ,S(665, 1194)  ,S(641, 1195)  ,
	},
	{
		S(693, 1326)  ,S(695, 1328)  ,S(700, 1333)  ,S(634, 1337)  ,S(662, 1328)  ,S(640, 1344)  ,S(676, 1331)  ,S(681, 1326)  ,
		S(662, 1308)  ,S(671, 1315)  ,S(705, 1301)  ,S(661, 1326)  ,S(690, 1318)  ,S(669, 1323)  ,S(645, 1331)  ,S(654, 1320)  ,
		S(673, 1290)  ,S(750, 1264)  ,S(733, 1281)  ,S(720, 1268)  ,S(716, 1273)  ,S(680, 1297)  ,S(704, 1282)  ,S(646, 1305)  ,
		S(665, 1285)  ,S(692, 1282)  ,S(700, 1280)  ,S(691, 1279)  ,S(708, 1274)  ,S(679, 1287)  ,S(669, 1286)  ,S(645, 1291)  ,
		S(622, 1272)  ,S(659, 1287)  ,S(640, 1291)  ,S(634, 1285)  ,S(644, 1280)  ,S(627, 1292)  ,S(625, 1295)  ,S(622, 1277)  ,
		S(623, 1235)  ,S(661, 1260)  ,S(641, 1263)  ,S(635, 1259)  ,S(641, 1257)  ,S(622, 1268)  ,S(629, 1271)  ,S(616, 1257)  ,
		S(554, 1251)  ,S(653, 1235)  ,S(650, 1244)  ,S(636, 1248)  ,S(640, 1247)  ,S(628, 1254)  ,S(628, 1248)  ,S(594, 1255)  ,
		S(621, 1229)  ,S(639, 1254)  ,S(652, 1265)  ,S(648, 1246)  ,S(650, 1246)  ,S(640, 1258)  ,S(634, 1258)  ,S(636, 1252)  ,
	},
};
const PScore queenTable[2][64] = {
	{
		S(1355, 2245) ,S(1375, 2263) ,S(1367, 2274) ,S(1334, 2337) ,S(1341, 2327) ,S(1400, 2293) ,S(1366, 2284) ,S(1381, 2237) ,
		S(1356, 2267) ,S(1298, 2325) ,S(1337, 2312) ,S(1281, 2370) ,S(1279, 2394) ,S(1419, 2280) ,S(1331, 2295) ,S(1352, 2260) ,
		S(1350, 2284) ,S(1362, 2253) ,S(1348, 2284) ,S(1348, 2298) ,S(1365, 2317) ,S(1352, 2333) ,S(1392, 2247) ,S(1399, 2255) ,
		S(1362, 2258) ,S(1337, 2323) ,S(1338, 2296) ,S(1328, 2343) ,S(1341, 2334) ,S(1372, 2295) ,S(1398, 2285) ,S(1389, 2263) ,
		S(1351, 2256) ,S(1356, 2305) ,S(1338, 2325) ,S(1348, 2348) ,S(1345, 2326) ,S(1365, 2308) ,S(1383, 2271) ,S(1382, 2256) ,
		S(1341, 2252) ,S(1368, 2251) ,S(1365, 2281) ,S(1364, 2272) ,S(1366, 2260) ,S(1375, 2265) ,S(1391, 2234) ,S(1389, 2229) ,
		S(1323, 2214) ,S(1361, 2202) ,S(1400, 2152) ,S(1390, 2220) ,S(1378, 2218) ,S(1395, 2197) ,S(1401, 2190) ,S(1397, 2200) ,
		S(1345, 2182) ,S(1371, 2153) ,S(1371, 2165) ,S(1380, 2203) ,S(1388, 2202) ,S(1381, 2184) ,S(1373, 2222) ,S(1381, 2176) ,
	},
	{
		S(1373, 2375) ,S(1391, 2403) ,S(1363, 2424) ,S(1314, 2421) ,S(1331, 2403) ,S(1328, 2388) ,S(1337, 2367) ,S(1302, 2374) ,
		S(1371, 2392) ,S(1304, 2466) ,S(1398, 2396) ,S(1260, 2468) ,S(1266, 2438) ,S(1322, 2371) ,S(1265, 2410) ,S(1328, 2352) ,
		S(1334, 2428) ,S(1327, 2435) ,S(1332, 2426) ,S(1333, 2404) ,S(1327, 2380) ,S(1319, 2368) ,S(1329, 2347) ,S(1324, 2350) ,
		S(1363, 2391) ,S(1356, 2426) ,S(1343, 2427) ,S(1307, 2437) ,S(1309, 2419) ,S(1329, 2354) ,S(1333, 2376) ,S(1338, 2334) ,
		S(1366, 2363) ,S(1361, 2369) ,S(1347, 2394) ,S(1327, 2416) ,S(1328, 2425) ,S(1341, 2368) ,S(1355, 2359) ,S(1348, 2320) ,
		S(1372, 2294) ,S(1374, 2307) ,S(1354, 2353) ,S(1351, 2335) ,S(1350, 2346) ,S(1354, 2358) ,S(1368, 2323) ,S(1356, 2299) ,
		S(1349, 2283) ,S(1381, 2228) ,S(1389, 2230) ,S(1370, 2290) ,S(1368, 2308) ,S(1373, 2266) ,S(1366, 2288) ,S(1362, 2282) ,
		S(1355, 2227) ,S(1354, 2230) ,S(1358, 2253) ,S(1380, 2258) ,S(1381, 2296) ,S(1373, 2272) ,S(1367, 2270) ,S(1363, 2279) ,
	},
};
const PScore kingTable[2][64] = {
	{
		S(-33, -203)  ,S(81, -100)   ,S(89, -80)    ,S(118, -64)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-14, -43)   ,S(116, 17)    ,S(167, 6)     ,S(171, -10)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(40, -4)     ,S(138, 46)    ,S(173, 48)    ,S(152, 42)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-27, 6)     ,S(95, 41)     ,S(110, 61)    ,S(89, 70)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-28, -30)   ,S(42, 33)     ,S(63, 58)     ,S(18, 80)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-44, -35)   ,S(-26, 15)    ,S(-7, 38)     ,S(-27, 60)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(15, -71)    ,S(-36, -11)   ,S(-62, 21)    ,S(-102, 34)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(18, -165)   ,S(-6, -75)    ,S(-56, -31)   ,S(-75, -48)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
	{
		S(0, -202)    ,S(20, -11)    ,S(68, -45)    ,S(106, -56)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-47, -50)   ,S(60, 53)     ,S(160, -4)    ,S(177, -7)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(8, -1)      ,S(192, 47)    ,S(260, 32)    ,S(169, 35)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-58, 1)     ,S(101, 40)    ,S(130, 63)    ,S(100, 74)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-57, -28)   ,S(47, 34)     ,S(58, 66)     ,S(48, 87)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(-31, -31)   ,S(-17, 24)    ,S(2, 50)      ,S(-5, 71)     ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(28, -66)    ,S(-19, 4)     ,S(-56, 38)    ,S(-80, 44)    ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
		S(31, -152)   ,S(-7, -47)    ,S(-54, -12)   ,S(-62, -41)   ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,S(0, 0)       ,
	},
};

constexpr PScore materialValues[5] = {S(107, 200), S(461, 668), S(472, 708), S(637, 1219), S(1349, 2278), };
constexpr PScore knightMob[9] = {S(-44, -153), S(-26, -78), S(-14, -30), S(-6, -2), S(-1, 10), S(4, 25), S(11, 27), S(21, 22), S(31, 1), };
constexpr PScore bishopMob[14] = {S(-64, -198), S(-36, -125), S(-20, -74), S(-12, -44), S(-1, -23), S(3, 0), S(7, 16), S(7, 29), S(8, 41), S(14, 47), S(22, 44), S(45, 34), S(55, 43), S(74, 5), };
constexpr PScore rookMob[15] = {S(-25, -137), S(-34, -93), S(-25, -58), S(-23, -41), S(-23, -23), S(-24, -6), S(-21, 4), S(-15, 5), S(-11, 10), S(-3, 15), S(-3, 22), S(3, 27), S(5, 30), S(23, 12), S(88, -26), };
constexpr PScore queenMob[28] = {S(-149, -382), S(-111, -393), S(-72, -307), S(-53, -222), S(-49, -126), S(-46, -68), S(-42, -31), S(-38, -11), S(-34, 10), S(-30, 23), S(-25, 31), S(-20, 36), S(-16, 38), S(-12, 42), S(-9, 42), S(-8, 42), S(-8, 42), S(-11, 42), S(-7, 37), S(-4, 27), S(11, 1), S(16, -18), S(16, -32), S(29, -61), S(3, -63), S(1, -83), S(-9, -78), S(-37, -22), };

constexpr Score gamephaseInc[12] = { 0, 1, 1, 2, 4, 0, 0, 1, 1, 2, 4, 0 };

//constexpr Score KSAMG = -2;
constexpr double KSCALEMG = 861.801025390625;
constexpr double KSBMG = 1; 
constexpr double KSCMG = -2.7553279399871826;
// constexpr Score KSAEG = -71;
constexpr double KSCALEEG = 152.13540649414062;
constexpr double KSBEG = 1;
constexpr double KSCEG = -0.5662437677383423;

#define PAWNHASHSIZE 262144ULL

struct PawnEvalHashEntry {
    U64 hash;
    PScore score;
    BitBoard passers; // This can be shrinked to add more stuff and keep the alignement
};

extern PawnEvalHashEntry pawnEvalHash[PAWNHASHSIZE];

extern PScore PSQTs[2][12][64];
/**
* @brief The initTables function initializes the material - positional tables
* @note This function is called once at the beginning of the program
*/
void initTables();

/**
 * @brief The pestoEval function evaluates the material and positional scores
 * @param pos The position to evaluate
 * @return The material and positional scores
 */
Score pestoEval(Position* pos);

/** 
 * @brief The initTropism function initializes the tropism tables
 * @note This is called at the start of the program 
 */
void initTropism();

/**
 * @brief The convertToFeatures function converts a set of positions to a set of features
 * @param filename The filename of the epd file
 * @param output The output file to write the features to
 */
void convertToFeatures(std::string filename, std::string output);